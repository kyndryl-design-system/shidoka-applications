{"version":3,"file":"7463.52e7671f.iframe.bundle.js","mappings":";;AA4BA;;;;;AAKA;;AAEA;;AAEA;;;;;;AAOA;;;;AC1BA;;;ACYA;AACA;AACA;AACA;;;;AAKA","sources":["webpack://@kyndryl-design-system/shidoka-applications/./src/components/global/footer/footer.ts","webpack://@kyndryl-design-system/shidoka-applications/./src/components/global/footer/footerNav.ts","webpack://@kyndryl-design-system/shidoka-applications/./src/components/global/footer/footerLink.ts"],"sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport logo from '@kyndryl-design-system/shidoka-foundation/assets/svg/kyndryl-logo.svg';\nimport FooterScss from './footer.scss';\n\n/**\n * The global Footer component.\n * @fires on-root-link-click - Captures the logo link click event and emits the original event.\n * @slot unnamed - Default slot, for the footer-nav.\n * @slot logo - Slot for the logo, will overwrite the default logo.\n * @slot copyright - Slot for the copyright text.\n */\n@customElement('kyn-footer')\nexport class Footer extends LitElement {\n  static override styles = FooterScss;\n\n  /** URL for the footer logo link. Should target the application home page. */\n  @property({ type: String })\n  rootUrl = '/';\n\n  override render() {\n    const classes = {\n      footer: true,\n    };\n\n    return html`\n      <footer class=\"${classMap(classes)}\">\n        <div class=\"footer-links\"><slot></slot></div>\n        <div class=\"footer-cpr\">\n          <div class=\"logo-container\">\n            <a\n              href=\"${this.rootUrl}\"\n              class=\"logo-link\"\n              @click=\"${(e: Event) => this.handleRootLinkClick(e)}\"\n            >\n              <slot name=\"logo\">${unsafeHTML(logo)}</slot>\n            </a>\n          </div>\n          <div class=\"copyright\"><slot name=\"copyright\"></slot></div>\n        </div>\n      </footer>\n    `;\n  }\n\n  private handleRootLinkClick(e: Event) {\n    const event = new CustomEvent('on-root-link-click', {\n      detail: { origEvent: e },\n    });\n    this.dispatchEvent(event);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'kyn-footer': Footer;\n  }\n}\n","import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport FooterNavScss from './footerNav.scss';\n\n/**\n * Container for footer navigation links.\n * @slot unnamed - Slot for footer links.\n */\n@customElement('kyn-footer-nav')\nexport class FooterNav extends LitElement {\n  static override styles = FooterNavScss;\n\n  override render() {\n    return html`\n      <div class=\"footer-nav\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'kyn-footer-nav': FooterNav;\n  }\n}\n","import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport FooterLinkScss from './footerLink.scss';\nimport '@kyndryl-design-system/shidoka-foundation/components/icon';\n\n/**\n * Component for navigation links within the Footer.\n * @fires on-click - Captures the click event and emits the original event details.\n * @slot unnamed - Slot for link text/content.\n */\n@customElement('kyn-footer-link')\nexport class FooterNavLink extends LitElement {\n  static override styles = FooterLinkScss;\n\n  /** Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\" */\n  @property({ type: String })\n  target = '_self' as const;\n\n  /** Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship */\n  @property({ type: String })\n  rel = '';\n\n  /** Link url. */\n  @property({ type: String })\n  href = '';\n\n  override render() {\n    return html`\n      <a\n        class=\"footer-link\"\n        target=${this.target}\n        rel=${this.rel}\n        href=${this.href ? this.href : 'javascript:void(0)'}\n        @click=${(e: Event) => this.handleClick(e)}\n      >\n        <slot></slot>\n      </a>\n    `;\n  }\n\n  private handleClick(e: Event) {\n    const event = new CustomEvent('on-click', {\n      detail: { origEvent: e },\n    });\n    this.dispatchEvent(event);\n  }\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'kyn-footer-link': FooterNavLink;\n  }\n}\n"],"names":[],"sourceRoot":""}