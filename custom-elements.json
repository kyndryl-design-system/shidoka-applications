{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanel",
          "declaration": {
            "name": "HeaderPanel",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanelLink",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "LocalNav",
          "declaration": {
            "name": "LocalNav",
            "module": "./components/global/localNav"
          }
        },
        {
          "kind": "js",
          "name": "LocalNavLink",
          "declaration": {
            "name": "LocalNavLink",
            "module": "./components/global/localNav"
          }
        },
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "./components/reusable/radioButton"
          }
        },
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "./components/reusable/radioButton"
          }
        },
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "./components/reusable/checkbox"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "./components/reusable/checkbox"
          }
        },
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "./components/reusable/textInput"
          }
        },
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "./components/reusable/textArea"
          }
        },
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "./components/reusable/toggleButton"
          }
        },
        {
          "kind": "js",
          "name": "TimePicker",
          "declaration": {
            "name": "TimePicker",
            "module": "./components/reusable/timepicker"
          }
        },
        {
          "kind": "js",
          "name": "Dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "./components/reusable/dropdown"
          }
        },
        {
          "kind": "js",
          "name": "DropdownOption",
          "declaration": {
            "name": "DropdownOption",
            "module": "./components/reusable/dropdown"
          }
        },
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "./components/reusable/datePicker"
          }
        },
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "./components/reusable/daterangepicker"
          }
        },
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "./components/reusable/breadcrumbs"
          }
        },
        {
          "kind": "js",
          "name": "BreadcrumbItem",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "./components/reusable/breadcrumbs"
          }
        },
        {
          "kind": "js",
          "name": "Table",
          "declaration": {
            "name": "Table",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "DataTable",
          "declaration": {
            "name": "DataTable",
            "module": "./components/reusable/table/data-table"
          }
        },
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "./components/reusable/pagination"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/common/helpers/helpers.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "debounce",
          "parameters": [
            {
              "name": "fn",
              "type": {
                "text": "Function"
              }
            },
            {
              "name": "ms",
              "default": "100"
            }
          ]
        },
        {
          "kind": "function",
          "name": "stringToReactHtml",
          "parameters": [
            {
              "name": "string",
              "type": {
                "text": "String"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createOptionsArray",
          "parameters": [
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "*"
              },
              "description": " imported enums object"
            }
          ],
          "description": "Convert an object to an array of only its values.\nUsed when importing enums in component stories for populating argType dropdowns."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debounce",
          "declaration": {
            "name": "debounce",
            "module": "src/common/helpers/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "stringToReactHtml",
          "declaration": {
            "name": "stringToReactHtml",
            "module": "src/common/helpers/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "createOptionsArray",
          "declaration": {
            "name": "createOptionsArray",
            "module": "src/common/helpers/helpers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Footer component.",
          "name": "Footer",
          "slots": [
            {
              "description": "Default slot, for the footer-nav.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the logo, will overwrite the default logo.",
              "name": "logo"
            },
            {
              "description": "Slot for the copyright text.",
              "name": "copyright"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the footer logo link. Should target the application home page.",
              "attribute": "rootUrl"
            },
            {
              "kind": "method",
              "name": "handleRootLinkClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the logo link click event and emits the original event.",
              "name": "on-root-link-click"
            }
          ],
          "attributes": [
            {
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the footer logo link. Should target the application home page.",
              "fieldName": "rootUrl"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "src/components/global/footer/footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer",
          "declaration": {
            "name": "Footer",
            "module": "src/components/global/footer/footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footerLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for navigation links within the Footer.",
          "name": "FooterNavLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "src/components/global/footer/footerLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer-link",
          "declaration": {
            "name": "FooterNavLink",
            "module": "src/components/global/footer/footerLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footerNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for footer navigation links.",
          "name": "FooterNav",
          "slots": [
            {
              "description": "Slot for footer links.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "src/components/global/footer/footerNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer-nav",
          "declaration": {
            "name": "FooterNav",
            "module": "src/components/global/footer/footerNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "./footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "./footerNav"
          }
        },
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "./footerLink"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Header component.",
          "name": "Header",
          "slots": [
            {
              "description": "The default slot for all empty space right of the logo/title.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the logo, will overwrite the default logo.",
              "name": "logo"
            },
            {
              "description": "Slot left of the logo, intended for a header panel.",
              "name": "left"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the header logo link. Should target the application home page.",
              "attribute": "rootUrl"
            },
            {
              "kind": "field",
              "name": "appTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "App title text next to logo.  Hidden on smaller screens.",
              "attribute": "appTitle"
            },
            {
              "kind": "field",
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "672",
              "description": "The breakpoint (in px) to convert the nav to a flyout menu for small screens.",
              "attribute": "breakpoint"
            },
            {
              "kind": "field",
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px shadow to the bottom of the header, for contrast with  white backgrounds.",
              "attribute": "divider"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleMenuClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "testBreakpoint",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleRootLinkClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleNavMenu",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the menu toggle click event and emits the menu open state in the detail.",
              "name": "on-menu-toggle"
            },
            {
              "description": "Captures the logo link click event and emits the original event details.",
              "name": "on-root-link-click"
            }
          ],
          "attributes": [
            {
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the header logo link. Should target the application home page.",
              "fieldName": "rootUrl"
            },
            {
              "name": "appTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "App title text next to logo.  Hidden on smaller screens.",
              "fieldName": "appTitle"
            },
            {
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "672",
              "description": "The breakpoint (in px) to convert the nav to a flyout menu for small screens.",
              "fieldName": "breakpoint"
            },
            {
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px shadow to the bottom of the header, for contrast with  white backgrounds.",
              "fieldName": "divider"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "src/components/global/header/header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header",
          "declaration": {
            "name": "Header",
            "module": "src/components/global/header/header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerAvatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "User avatar.",
          "name": "HeaderAvatar",
          "members": [
            {
              "kind": "field",
              "name": "initials",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Two letters, first and last initial, to show in the user avatar circle.",
              "attribute": "initials"
            }
          ],
          "attributes": [
            {
              "name": "initials",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Two letters, first and last initial, to show in the user avatar circle.",
              "fieldName": "initials"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-avatar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "src/components/global/header/headerAvatar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-avatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "src/components/global/header/headerAvatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerFlyout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for header flyout items.",
          "name": "HeaderFlyout",
          "slots": [
            {
              "description": "Slot for flyout menu content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for button/toggle content.",
              "name": "button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flyout open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "anchorLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchor flyout menu to the left edge of the button instead of the right edge.",
              "attribute": "anchorLeft"
            },
            {
              "kind": "field",
              "name": "hideArrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the arrow.",
              "attribute": "hideArrow"
            },
            {
              "kind": "field",
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Button assistive text, title + aria-label.",
              "attribute": "assistiveText"
            },
            {
              "kind": "method",
              "name": "handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerLeave",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "testBreakpoint",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flyout open state.",
              "fieldName": "open"
            },
            {
              "name": "anchorLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchor flyout menu to the left edge of the button instead of the right edge.",
              "fieldName": "anchorLeft"
            },
            {
              "name": "hideArrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the arrow.",
              "fieldName": "hideArrow"
            },
            {
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Button assistive text, title + aria-label.",
              "fieldName": "assistiveText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-flyout",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "src/components/global/header/headerFlyout.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-flyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "src/components/global/header/headerFlyout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerFlyouts.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header flyout items, aligns to the right, place last.",
          "name": "HeaderFlyouts",
          "slots": [
            {
              "description": "This element has a slot.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-flyouts",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "src/components/global/header/headerFlyouts.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-flyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "src/components/global/header/headerFlyouts.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for navigation links within the Header.",
          "name": "HeaderLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for sublinks (up to two levels).",
              "name": "links"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link active state, for example when URL path matches link href.",
              "attribute": "isActive"
            },
            {
              "kind": "field",
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px shadow to the bottom of the link.",
              "attribute": "divider"
            },
            {
              "kind": "method",
              "name": "handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerLeave",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "determineIfSlotted",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "determineLevel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "testBreakpoint",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link open state.",
              "fieldName": "open"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            },
            {
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link active state, for example when URL path matches link href.",
              "fieldName": "isActive"
            },
            {
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px shadow to the bottom of the link.",
              "fieldName": "divider"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "src/components/global/header/headerLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-link",
          "declaration": {
            "name": "HeaderLink",
            "module": "src/components/global/header/headerLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header navigation links.",
          "name": "HeaderNav",
          "slots": [
            {
              "description": "This element has a slot.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "testBreakpoint",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "src/components/global/header/headerNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-nav",
          "declaration": {
            "name": "HeaderNav",
            "module": "src/components/global/header/headerNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerPanel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header fly-out panel.",
          "name": "HeaderPanel",
          "slots": [
            {
              "description": "Slot for panel content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for button icon.",
              "name": "button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "right",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel extends from right instead of left.",
              "attribute": "right"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Panel heading.",
              "attribute": "heading"
            },
            {
              "kind": "field",
              "name": "openText",
              "type": {
                "text": "string"
              },
              "default": "'Open Panel'",
              "description": "Open button assistive text.",
              "attribute": "openText"
            },
            {
              "kind": "field",
              "name": "closeText",
              "type": {
                "text": "string"
              },
              "default": "'Close Panel'",
              "description": "Close button assistive text.",
              "attribute": "closeText"
            },
            {
              "kind": "method",
              "name": "togglePanel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "right",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel extends from right instead of left.",
              "fieldName": "right"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel open state.",
              "fieldName": "open"
            },
            {
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Panel heading.",
              "fieldName": "heading"
            },
            {
              "name": "openText",
              "type": {
                "text": "string"
              },
              "default": "'Open Panel'",
              "description": "Open button assistive text.",
              "fieldName": "openText"
            },
            {
              "name": "closeText",
              "type": {
                "text": "string"
              },
              "default": "'Close Panel'",
              "description": "Close button assistive text.",
              "fieldName": "closeText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderPanel",
          "declaration": {
            "name": "HeaderPanel",
            "module": "src/components/global/header/headerPanel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-panel",
          "declaration": {
            "name": "HeaderPanel",
            "module": "src/components/global/header/headerPanel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerPanelLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header fly-out panel link.",
          "name": "HeaderPanelLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-panel-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderPanelLink",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "src/components/global/header/headerPanelLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-panel-link",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "src/components/global/header/headerPanelLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "./header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "./headerNav"
          }
        },
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "./headerLink"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "./headerFlyouts"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "./headerFlyout"
          }
        },
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "./headerAvatar"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanel",
          "declaration": {
            "name": "HeaderPanel",
            "module": "./headerPanel"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanelLink",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "./headerPanelLink"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/uiShell/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/uiShell/uiShell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container to help with positioning and padding of the global elements such as: adds padding for the fixed Header and Local Nav, adds main content gutters, and makes Footer sticky. This takes the onus off of the consuming app to configure these values.",
          "name": "UiShell",
          "slots": [
            {
              "description": "Slot for global elements.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-ui-shell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UiShell",
          "declaration": {
            "name": "UiShell",
            "module": "src/components/global/uiShell/uiShell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-ui-shell",
          "declaration": {
            "name": "UiShell",
            "module": "src/components/global/uiShell/uiShell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNav",
          "declaration": {
            "name": "LocalNav",
            "module": "./localNav"
          }
        },
        {
          "kind": "js",
          "name": "LocalNavLink",
          "declaration": {
            "name": "LocalNavLink",
            "module": "./localNavLink"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/localNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Side Navigation component.",
          "name": "LocalNav",
          "slots": [
            {
              "description": "The default slot, for local nav links.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "pinned",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Local nav pinned state.",
              "attribute": "pinned"
            },
            {
              "kind": "field",
              "name": "pinText",
              "type": {
                "text": "string"
              },
              "default": "'Pin open'",
              "description": "Pin open button assistive text.",
              "attribute": "pinText"
            },
            {
              "kind": "field",
              "name": "unpinText",
              "type": {
                "text": "string"
              },
              "default": "'Unpin'",
              "description": "Unpin button assistive text.",
              "attribute": "unpinText"
            },
            {
              "kind": "method",
              "name": "onNavToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseenter",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleMouseleave",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the pinned state and original event details.",
              "name": "on-toggle"
            }
          ],
          "attributes": [
            {
              "name": "pinned",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Local nav pinned state.",
              "fieldName": "pinned"
            },
            {
              "name": "pinText",
              "type": {
                "text": "string"
              },
              "default": "'Pin open'",
              "description": "Pin open button assistive text.",
              "fieldName": "pinText"
            },
            {
              "name": "unpinText",
              "type": {
                "text": "string"
              },
              "default": "'Unpin'",
              "description": "Unpin button assistive text.",
              "fieldName": "unpinText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-local-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNav",
          "declaration": {
            "name": "LocalNav",
            "module": "src/components/global/localNav/localNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-local-nav",
          "declaration": {
            "name": "LocalNav",
            "module": "src/components/global/localNav/localNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/localNavLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Link component for use in the global Side Navigation component.",
          "name": "LocalNavLink",
          "slots": [
            {
              "description": "The default slot, for the link text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for an icon, level 1 links only.",
              "name": "icon"
            },
            {
              "description": "Slot for the next level of links, supports three levels.",
              "name": "links"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expanded state.",
              "attribute": "expanded"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Active state.",
              "attribute": "active"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "determineLevel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event, level, and if default was prevented.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expanded state.",
              "fieldName": "expanded"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Active state.",
              "fieldName": "active"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-local-nav-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNavLink",
          "declaration": {
            "name": "LocalNavLink",
            "module": "src/components/global/localNav/localNavLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-local-nav-link",
          "declaration": {
            "name": "LocalNavLink",
            "module": "src/components/global/localNav/localNavLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/breadcrumbItem.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Breadcrumb Item",
          "name": "BreadcrumbItem",
          "slots": [
            {
              "description": "Slot for the content of the breadcrumb item, usually the label or text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "href"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "href"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-breadcrumb-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BreadcrumbItem",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "src/components/reusable/breadcrumbs/breadcrumbItem.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-breadcrumb-item",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "src/components/reusable/breadcrumbs/breadcrumbItem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/breadcrumbs.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{\n  title: 'Components/Breadcrumbs',\n  component: 'kyn-breadcrumbs',\n  subcomponents: { 'kyn-breadcrumb-item': 'kyn-breadcrumb-item' },\n  parameters: {\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/file/6AovH7Iay9Y7BkpoL5975s/Component-Library-for-Dev?node-id=459%3A39033&mode=dev',\n    },\n  },\n}"
        },
        {
          "kind": "variable",
          "name": "Breadcrumbs",
          "type": {
            "text": "Story"
          },
          "default": "{\n  render: () => {\n    return html`<kyn-breadcrumbs>\n      <kyn-breadcrumb-item href=\"/\">Home</kyn-breadcrumb-item>\n      <kyn-breadcrumb-item href=\"/level1\">Level 1</kyn-breadcrumb-item>\n      <kyn-breadcrumb-item href=\"/level2\">Level 2</kyn-breadcrumb-item>\n      <kyn-breadcrumb-item>Destination</kyn-breadcrumb-item>\n    </kyn-breadcrumbs> `;\n  },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/reusable/breadcrumbs/breadcrumbs.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "src/components/reusable/breadcrumbs/breadcrumbs.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/breadcrumbs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Breadcrumbs Component.",
          "name": "Breadcrumbs",
          "slots": [
            {
              "description": "Slot for inserting breadcrumb items, typically kyn-breadcrumb-items indicating the navigation path.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-breadcrumbs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "src/components/reusable/breadcrumbs/breadcrumbs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "src/components/reusable/breadcrumbs/breadcrumbs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "BreadcrumbItem",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "./breadcrumbItem"
          }
        },
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "./breadcrumbs"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkbox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox.",
          "name": "Checkbox",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state, inherited from the parent group if value matches.",
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state, inherited from the parent group.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the label should be hidden from visual view but remain accessible\nto screen readers for accessibility purposes.",
              "attribute": "visiblyHidden"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "attribute": "indeterminate"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-checkbox-change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox value.",
              "fieldName": "value"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state, inherited from the parent group if value matches.",
              "fieldName": "checked"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state, inherited from the parent group.",
              "fieldName": "disabled"
            },
            {
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the label should be hidden from visual view but remain accessible\nto screen readers for accessibility purposes.",
              "fieldName": "visiblyHidden"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "fieldName": "indeterminate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/components/reusable/checkbox/checkbox.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/components/reusable/checkbox/checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkboxGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox group container.",
          "name": "CheckboxGroup",
          "slots": [
            {
              "description": "Slot for individual checkboxes.",
              "name": "unnamed"
            },
            {
              "description": "Slot for label text.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox input name attribute.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Array<string>"
              },
              "description": "Checkbox group selected values.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes a single selection required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox group invalid text.",
              "attribute": "invalidText"
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected values.",
              "name": "on-checkbox-group-change"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox input name attribute.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "Array<string>"
              },
              "description": "Checkbox group selected values.",
              "fieldName": "value"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes a single selection required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox group invalid text.",
              "fieldName": "invalidText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/components/reusable/checkbox/checkboxGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox-group",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/components/reusable/checkbox/checkboxGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "./checkbox"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "./checkboxGroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/datePicker/datepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Datepicker.",
          "name": "DatePicker",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Datepicker size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker value in YYYY-MM-DD or YYYY-MM-DDThh:mm format.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the date required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Date disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date warning text",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "maxDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Maximum date in YYYY-MM-DD or YYYY-MM-DDThh:mm format. If the value isn't a possible date string in the format, then the element has no maximum date value",
              "attribute": "maxDate"
            },
            {
              "kind": "field",
              "name": "minDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Mimimum date in YYYY-MM-DD or YYYY-MM-DDThh:mm format. If the value isn't a possible date string in the format, then the element has no minimum date value.",
              "attribute": "minDate"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\nFor date inputs, the value of step is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the step value.\nThe default value of step is 1, indicating 1 day.",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "datePickerType",
              "type": {
                "text": "DATE_PICKER_TYPES"
              },
              "description": "Date picker types. Default 'single'",
              "attribute": "datePickerType"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateMinDate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "validateMaxDate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Datepicker size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker value in YYYY-MM-DD or YYYY-MM-DDThh:mm format.",
              "fieldName": "value"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the date required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Date disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date warning text",
              "fieldName": "warnText"
            },
            {
              "name": "maxDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Maximum date in YYYY-MM-DD or YYYY-MM-DDThh:mm format. If the value isn't a possible date string in the format, then the element has no maximum date value",
              "fieldName": "maxDate"
            },
            {
              "name": "minDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Mimimum date in YYYY-MM-DD or YYYY-MM-DDThh:mm format. If the value isn't a possible date string in the format, then the element has no minimum date value.",
              "fieldName": "minDate"
            },
            {
              "name": "step",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\nFor date inputs, the value of step is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the step value.\nThe default value of step is 1, indicating 1 day.",
              "fieldName": "step"
            },
            {
              "name": "datePickerType",
              "type": {
                "text": "DATE_PICKER_TYPES"
              },
              "description": "Date picker types. Default 'single'",
              "fieldName": "datePickerType"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-date-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "src/components/reusable/datePicker/datepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-date-picker",
          "declaration": {
            "name": "DatePicker",
            "module": "src/components/reusable/datePicker/datepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/datePicker/defs.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "regexDateFormat",
          "default": "/^\\d{4}-\\d{2}-\\d{2}$/"
        },
        {
          "kind": "variable",
          "name": "regexDateTimeFormat",
          "default": "/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/"
        },
        {
          "kind": "variable",
          "name": "regexDateTimeFormatSec",
          "default": "/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "regexDateFormat",
          "declaration": {
            "name": "regexDateFormat",
            "module": "src/components/reusable/datePicker/defs.ts"
          }
        },
        {
          "kind": "js",
          "name": "regexDateTimeFormat",
          "declaration": {
            "name": "regexDateTimeFormat",
            "module": "src/components/reusable/datePicker/defs.ts"
          }
        },
        {
          "kind": "js",
          "name": "regexDateTimeFormatSec",
          "declaration": {
            "name": "regexDateTimeFormatSec",
            "module": "src/components/reusable/datePicker/defs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/datePicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "./datepicker"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/daterangepicker/daterangepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Date-Range picker",
          "name": "DateRangePicker",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Datepicker size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "startDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker Start date in YYYY-MM-DD format.",
              "attribute": "startDate"
            },
            {
              "kind": "field",
              "name": "endDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker End date in YYYY-MM-DD format.",
              "attribute": "endDate"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker name. Required prop. as there could many fields into single form",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the date required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Date disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date warning text",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "maxDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Maximum date in YYYY-MM-DD format. If the value isn't a possible date string in the format, then the element has no maximum date value.",
              "attribute": "maxDate"
            },
            {
              "kind": "field",
              "name": "minDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Mimimum date in YYYY-MM-DD format. If the value isn't a possible date string in the format, then the element has no minimum date value.",
              "attribute": "minDate"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\nFor date inputs, the value of step is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the step value.\nThe default value of step is 1, indicating 1 day.",
              "attribute": "step"
            },
            {
              "kind": "method",
              "name": "handleStartDate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleEndDate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateAndDispatchEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "validateMinDate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "String"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateMaxDate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "String"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateStartEndDate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected values and original event details. (Only if startDate <= endDate)",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Datepicker size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "startDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker Start date in YYYY-MM-DD format.",
              "fieldName": "startDate"
            },
            {
              "name": "endDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker End date in YYYY-MM-DD format.",
              "fieldName": "endDate"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker name. Required prop. as there could many fields into single form",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the date required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Date disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date warning text",
              "fieldName": "warnText"
            },
            {
              "name": "maxDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Maximum date in YYYY-MM-DD format. If the value isn't a possible date string in the format, then the element has no maximum date value.",
              "fieldName": "maxDate"
            },
            {
              "name": "minDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Mimimum date in YYYY-MM-DD format. If the value isn't a possible date string in the format, then the element has no minimum date value.",
              "fieldName": "minDate"
            },
            {
              "name": "step",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\nFor date inputs, the value of step is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the step value.\nThe default value of step is 1, indicating 1 day.",
              "fieldName": "step"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-date-range-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "src/components/reusable/daterangepicker/daterangepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-date-range-picker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "src/components/reusable/daterangepicker/daterangepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/daterangepicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "\"./daterangepicker\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/dropdown.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown, single select.",
          "name": "Dropdown",
          "slots": [
            {
              "description": "Slot for dropdown options.",
              "name": "unnamed"
            },
            {
              "description": "Slot for input label.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Dropdown size/height. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown inline style type.",
              "attribute": "inline"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Listbox/drawer open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "searchable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown searchable.",
              "attribute": "searchable"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enabled multi-select functionality.",
              "attribute": "multiple"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "resetSelection",
              "privacy": "private",
              "description": "Retrieves the selected values from the list of child options and sets value property."
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleButtonKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "keyCode",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClearMultiple",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTagClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleButtonBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "selected",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "emitValue",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Dropdown size/height. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown inline style type.",
              "fieldName": "inline"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown name.",
              "fieldName": "name"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Listbox/drawer open state.",
              "fieldName": "open"
            },
            {
              "name": "searchable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown searchable.",
              "fieldName": "searchable"
            },
            {
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enabled multi-select functionality.",
              "fieldName": "multiple"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown invalid text.",
              "fieldName": "invalidText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-dropdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "src/components/reusable/dropdown/dropdown.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "src/components/reusable/dropdown/dropdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/dropdownOption.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown option.",
          "name": "DropdownOption",
          "slots": [
            {
              "description": "Slot for option text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Option value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option selected state.",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the option details to the parent dropdown.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Option value.",
              "fieldName": "value"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option selected state.",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-dropdown-option",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DropdownOption",
          "declaration": {
            "name": "DropdownOption",
            "module": "src/components/reusable/dropdown/dropdownOption.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-dropdown-option",
          "declaration": {
            "name": "DropdownOption",
            "module": "src/components/reusable/dropdown/dropdownOption.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "./dropdown"
          }
        },
        {
          "kind": "js",
          "name": "DropdownOption",
          "declaration": {
            "name": "DropdownOption",
            "module": "./dropdownOption"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/Pagination.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination` Web Component.\n\nA component that provides pagination functionality, enabling the user to\nnavigate through large datasets by splitting them into discrete chunks.\nIntegrates with other utility components like items range display, page size dropdown,\nand navigation buttons.",
          "name": "Pagination",
          "members": [
            {
              "kind": "field",
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items that need pagination.",
              "attribute": "count"
            },
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current active page number.",
              "attribute": "pageNumber",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "attribute": "pageSize"
            },
            {
              "kind": "field",
              "name": "pageSizeOptions",
              "type": {
                "text": "number[]"
              },
              "default": "[5, 10, 20, 30, 40, 50, 100]",
              "description": "Available options for the page size.",
              "attribute": "pageSizeOptions"
            },
            {
              "kind": "field",
              "name": "pageSizeLabel",
              "default": "PAGE_SIZE_LABEL",
              "description": "Label for the page size dropdown.",
              "attribute": "pageSizeLabel"
            },
            {
              "kind": "field",
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "attribute": "hideItemsRange"
            },
            {
              "kind": "field",
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "attribute": "hidePageSizeDropdown"
            },
            {
              "kind": "field",
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "attribute": "hideNavigationButtons"
            },
            {
              "kind": "method",
              "name": "handlePageSizeChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The emitted custom event with the selected page size."
                }
              ],
              "description": "Handler for the event when the page size is changed by the user.\nUpdates the `pageSize` and resets the `pageNumber` to 1."
            },
            {
              "kind": "method",
              "name": "handlePageNumberChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The emitted custom event with the selected page number."
                }
              ],
              "description": "Handler for the event when the page number is changed by the user.\nUpdates the `pageNumber`."
            }
          ],
          "attributes": [
            {
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items that need pagination.",
              "fieldName": "count"
            },
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current active page number.",
              "fieldName": "pageNumber"
            },
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "fieldName": "pageSize"
            },
            {
              "name": "pageSizeOptions",
              "type": {
                "text": "number[]"
              },
              "default": "[5, 10, 20, 30, 40, 50, 100]",
              "description": "Available options for the page size.",
              "fieldName": "pageSizeOptions"
            },
            {
              "name": "pageSizeLabel",
              "default": "PAGE_SIZE_LABEL",
              "description": "Label for the page size dropdown.",
              "resolveInitializer": {
                "module": "/src/components/reusable/pagination/constants"
              },
              "fieldName": "pageSizeLabel"
            },
            {
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "fieldName": "hideItemsRange"
            },
            {
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "fieldName": "hidePageSizeDropdown"
            },
            {
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "fieldName": "hideNavigationButtons"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "src/components/reusable/pagination/Pagination.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination",
          "declaration": {
            "name": "Pagination",
            "module": "src/components/reusable/pagination/Pagination.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/constants.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "SHOWING_TEXT",
          "type": {
            "text": "string"
          },
          "default": "'Showing'"
        },
        {
          "kind": "variable",
          "name": "OF_TEXT",
          "type": {
            "text": "string"
          },
          "default": "'of'"
        },
        {
          "kind": "variable",
          "name": "ITEMS_TEXT",
          "type": {
            "text": "string"
          },
          "default": "'items'"
        },
        {
          "kind": "variable",
          "name": "PAGES_TEXT",
          "type": {
            "text": "string"
          },
          "default": "'pages'"
        },
        {
          "kind": "variable",
          "name": "PAGE_SIZE_LABEL",
          "type": {
            "text": "string"
          },
          "default": "'Items Per Page:'"
        },
        {
          "kind": "variable",
          "name": "BREAKPOINT",
          "type": {
            "text": "number"
          },
          "default": "768"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SHOWING_TEXT",
          "declaration": {
            "name": "SHOWING_TEXT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "OF_TEXT",
          "declaration": {
            "name": "OF_TEXT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "ITEMS_TEXT",
          "declaration": {
            "name": "ITEMS_TEXT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "PAGES_TEXT",
          "declaration": {
            "name": "PAGES_TEXT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "PAGE_SIZE_LABEL",
          "declaration": {
            "name": "PAGE_SIZE_LABEL",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "BREAKPOINT",
          "declaration": {
            "name": "BREAKPOINT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "./Pagination"
          }
        },
        {
          "kind": "js",
          "name": "PaginationItemsRange",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "./pagination-items-range"
          }
        },
        {
          "kind": "js",
          "name": "PaginationPageSizeDropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "./pagination-page-size-dropdown"
          }
        },
        {
          "kind": "js",
          "name": "PaginationNavigationButtons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "./pagination-navigation-buttons"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-items-range.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-items-range` Web Component.\n\nThis component is responsible for displaying the range of items being displayed\nin the context of pagination. It shows which items (by number) are currently visible\nand the total number of items.",
          "name": "PaginationItemsRange",
          "members": [
            {
              "kind": "field",
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items.",
              "attribute": "count"
            },
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current page number being displayed.",
              "attribute": "pageNumber"
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "Number of items displayed per page.",
              "attribute": "pageSize"
            },
            {
              "kind": "field",
              "name": "itemsRangeText",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items.",
              "fieldName": "count"
            },
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current page number being displayed.",
              "fieldName": "pageNumber"
            },
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "Number of items displayed per page.",
              "fieldName": "pageSize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-items-range",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationItemsRange",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "src/components/reusable/pagination/pagination-items-range.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-items-range",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "src/components/reusable/pagination/pagination-items-range.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-navigation-buttons.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-navigation-buttons` Web Component.\n\nThis component provides navigational controls for pagination.\nIt includes back and next buttons, along with displaying the current page and total pages.",
          "name": "PaginationNavigationButtons",
          "members": [
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "pageNumber",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "numberOfPages",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "SMALLEST_PAGE_NUMBER",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "1"
            },
            {
              "kind": "method",
              "name": "handleButtonClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "next",
                  "type": {
                    "text": "boolean"
                  },
                  "description": "If true, will move to the next page, otherwise to the previous page"
                }
              ],
              "description": "Handles the button click event, either moving to the next page or previous page"
            }
          ],
          "events": [
            {
              "name": "on-page-number-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the page number is changed."
            }
          ],
          "attributes": [
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "pageNumber"
            },
            {
              "name": "numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "numberOfPages"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-navigation-buttons",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationNavigationButtons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "src/components/reusable/pagination/pagination-navigation-buttons.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-navigation-buttons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "src/components/reusable/pagination/pagination-navigation-buttons.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-page-size-dropdown.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-page-size-dropdown` Web Component.\n\nThis component provides a dropdown to select the page size for pagination.\nIt emits events when the selected page size changes.",
          "name": "PaginationPageSizeDropdown",
          "members": [
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Current page size.",
              "attribute": "pageSize"
            },
            {
              "kind": "field",
              "name": "pageSizeLabel",
              "default": "PAGE_SIZE_LABEL",
              "description": "Label for the page size dropdown.",
              "attribute": "pageSizeLabel"
            },
            {
              "kind": "field",
              "name": "pageSizeOptions",
              "type": {
                "text": "Array<number>"
              },
              "default": "[5, 10, 20, 30, 40, 50]",
              "description": "Available options for the page size.",
              "attribute": "pageSizeOptions"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The dropdown change event."
                }
              ],
              "description": "Handles the dropdown change event."
            }
          ],
          "events": [
            {
              "name": "on-page-size-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "The event fired when the page size changes."
            }
          ],
          "attributes": [
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Current page size.",
              "fieldName": "pageSize"
            },
            {
              "name": "pageSizeLabel",
              "default": "PAGE_SIZE_LABEL",
              "description": "Label for the page size dropdown.",
              "resolveInitializer": {
                "module": "/src/components/reusable/pagination/constants"
              },
              "fieldName": "pageSizeLabel"
            },
            {
              "name": "pageSizeOptions",
              "type": {
                "text": "Array<number>"
              },
              "default": "[5, 10, 20, 30, 40, 50]",
              "description": "Available options for the page size.",
              "fieldName": "pageSizeOptions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-page-size-dropdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationPageSizeDropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "src/components/reusable/pagination/pagination-page-size-dropdown.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-page-size-dropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "src/components/reusable/pagination/pagination-page-size-dropdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "./radioButton"
          }
        },
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "./radioButtonGroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/radioButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio button.",
          "name": "RadioButton",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button value.",
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-radio-change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button value.",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-radio-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "src/components/reusable/radioButton/radioButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-radio-button",
          "declaration": {
            "name": "RadioButton",
            "module": "src/components/reusable/radioButton/radioButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/radioButtonGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio button group container.",
          "name": "RadioButtonGroup",
          "slots": [
            {
              "description": "Slot for individual radio buttons.",
              "name": "unnamed"
            },
            {
              "description": "Slot for label text.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button input name attribute.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group selected value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group invalid text.",
              "attribute": "invalidText"
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value.",
              "name": "on-radio-group-change"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button input name attribute.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group selected value.",
              "fieldName": "value"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group invalid text.",
              "fieldName": "invalidText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-radio-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "src/components/reusable/radioButton/radioButtonGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-radio-button-group",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "src/components/reusable/radioButton/radioButtonGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/Table.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table` Web Component.\n\nThis component provides a generic table structure with a slot to allow customization.\nYou can use this component to wrap around table rows and cells for a consistent style.",
          "name": "Table",
          "slots": [
            {
              "description": "The primary content slot for rows, headers, and cells.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the table layout is fixed (true) or auto (false).",
              "attribute": "fixedLayout"
            }
          ],
          "attributes": [
            {
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the table layout is fixed (true) or auto (false).",
              "fieldName": "fixedLayout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Table",
          "declaration": {
            "name": "Table",
            "module": "src/components/reusable/table/Table.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table",
          "declaration": {
            "name": "Table",
            "module": "src/components/reusable/table/Table.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/data-table.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{\n  title: 'Components/Data Table',\n  component: 'kyn-data-table',\n  argTypes: {\n    checkboxSelection: { control: 'boolean', table: { position: 1 } },\n    fixedLayout: { control: 'boolean' },\n    dense: { control: 'boolean', table: { position: 2 } },\n    stickyHeader: { control: 'boolean', table: { position: 3 } },\n    striped: { control: 'boolean', table: { position: 4 } },\n    count: { control: 'number' },\n    pageSize: { control: 'select', options: [5, 10, 20, 30, 40, 50, 100] },\n    pageNumber: { control: 'number' },\n    pageSizeOptions: { control: 'array' },\n    hideItemsRange: { control: 'boolean' },\n    hidePageSizeDropdown: { control: 'boolean' },\n    hideNavigationButtons: { control: 'boolean' },\n  },\n  subcomponents: {\n    'kyn-table': 'kyn-table',\n    'kyn-th': 'kyn-th',\n    'kyn-tr': 'kyn-tr',\n    'kyn-td': 'kyn-td',\n    'kyn-thead': 'kyn-thead',\n    'kyn-tbody': 'kyn-tbody',\n    'kyn-pagination': 'kyn-pagination',\n    'kyn-table-container': 'kyn-table-container',\n  },\n  parameters: {\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/file/6AovH7Iay9Y7BkpoL5975s/Applications-with-Specs?node-id=828%3A4607&mode=dev',\n    },\n  },\n}"
        },
        {
          "kind": "function",
          "name": "BasicTable",
          "parameters": [
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Sorting",
          "type": {
            "text": "Story"
          },
          "default": "{\n  args: {\n    rows: allData.slice(0, 5),\n  },\n  render: (args) => {\n    const [, updateArgs] = useArgs();\n    return tableRenderer(args, updateArgs, 'Sorting', false);\n  },\n}"
        },
        {
          "kind": "variable",
          "name": "Selecting",
          "type": {
            "text": "Story"
          },
          "default": "{\n  args: {\n    rows: allData.slice(0, 5),\n    checkboxSelection: true,\n  },\n  render: (args) => {\n    const [, updateArgs] = useArgs();\n    return tableRenderer(args, updateArgs, 'Selecting', true);\n  },\n}"
        },
        {
          "kind": "variable",
          "name": "StickyHeader",
          "type": {
            "text": "Story"
          },
          "default": "{\n  args: {\n    stickyHeader: true,\n    rows: allData,\n  },\n  render: (args) => {\n    const [, updateArgs] = useArgs();\n    return tableRenderer(args, updateArgs, 'Sticky Header', false);\n  },\n}"
        },
        {
          "kind": "variable",
          "name": "DataTable",
          "type": {
            "text": "Story"
          },
          "default": "{\n  args: {\n    count: allData.length,\n    rows: allData,\n    pageSize: 10,\n    pageNumber: 1,\n    pageSizeOptions: [5, 10, 20, 30, 40, 50, 100],\n    selectedRows: [],\n    checkboxSelection: true,\n  },\n  render: (args) => {\n    const [, updateArgs] = useArgs();\n    return tableRenderer(args, updateArgs, 'Data Table', true);\n  },\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/reusable/table/data-table.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BasicTable",
          "declaration": {
            "name": "BasicTable",
            "module": "src/components/reusable/table/data-table.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Sorting",
          "declaration": {
            "name": "Sorting",
            "module": "src/components/reusable/table/data-table.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Selecting",
          "declaration": {
            "name": "Selecting",
            "module": "src/components/reusable/table/data-table.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "StickyHeader",
          "declaration": {
            "name": "StickyHeader",
            "module": "src/components/reusable/table/data-table.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DataTable",
          "declaration": {
            "name": "DataTable",
            "module": "src/components/reusable/table/data-table.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/data-table.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-data-table` Web Component.\nThis component provides a table with sorting, pagination, and selection capabilities.\nIt is designed to be used with the `kyn-table-toolbar` and `kyn-table-container` components.",
          "name": "DataTable",
          "members": [
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "any[]"
              },
              "default": "[]",
              "description": "rows: Array of objects representing each row in the data table.",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "columns",
              "type": {
                "text": "ColumnDefinition[]"
              },
              "default": "[]",
              "description": "columns: Array of objects defining column properties such as\nfield name, sorting function, etc.",
              "attribute": "columns"
            },
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\nselectable using checkboxes.",
              "attribute": "checkboxSelection"
            },
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "striped: Boolean indicating whether rows should have alternate\ncoloring.",
              "attribute": "striped"
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "default": "new Set<number>()",
              "description": "selectedRows: Set of row ids that are currently selected.",
              "attribute": "selectedRows"
            },
            {
              "kind": "field",
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "stickyHeader: Boolean indicating whether the table header\nshould be sticky.",
              "attribute": "stickyHeader"
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\nin dense mode.",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "paginationModel",
              "type": {
                "text": "object"
              },
              "default": "{\n    count: 0,\n    pageSize: 5,\n    pageNumber: 0,\n    pageSizeOptions: [5, 10],\n  }",
              "description": "paginationModel: Object holding pagination information such as\ncurrent page, page size, etc.",
              "attribute": "paginationModel"
            },
            {
              "kind": "field",
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "attribute": "hideItemsRange"
            },
            {
              "kind": "field",
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "attribute": "hidePageSizeDropdown"
            },
            {
              "kind": "field",
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "attribute": "hideNavigationButtons"
            },
            {
              "kind": "field",
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the table layout is fixed (true) or auto (false).",
              "attribute": "fixedLayout"
            },
            {
              "kind": "method",
              "name": "updateHeaderCheckbox",
              "description": "Updates the state of the header checkbox based on the number of\nselected rows."
            },
            {
              "kind": "method",
              "name": "handleRowSelectionChange",
              "parameters": [
                {
                  "name": "rowId",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "isChecked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Handles the change of selection state for a specific row."
            },
            {
              "kind": "method",
              "name": "toggleSelectionAll",
              "description": "Toggles the selection state of all rows in the table."
            },
            {
              "kind": "method",
              "name": "onPageSizeChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of page size in pagination."
            },
            {
              "kind": "method",
              "name": "onPageNumberChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of page number in pagination."
            }
          ],
          "events": [
            {
              "name": "on-selected-rows-changed",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the selected rows change."
            },
            {
              "name": "on-page-changed",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the page number or page size changes."
            },
            {
              "description": "Dispatched when the sort order changes.",
              "name": "on-sort-changed"
            }
          ],
          "attributes": [
            {
              "name": "rows",
              "type": {
                "text": "any[]"
              },
              "default": "[]",
              "description": "rows: Array of objects representing each row in the data table.",
              "fieldName": "rows"
            },
            {
              "name": "columns",
              "type": {
                "text": "ColumnDefinition[]"
              },
              "default": "[]",
              "description": "columns: Array of objects defining column properties such as\nfield name, sorting function, etc.",
              "fieldName": "columns"
            },
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\nselectable using checkboxes.",
              "fieldName": "checkboxSelection"
            },
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "striped: Boolean indicating whether rows should have alternate\ncoloring.",
              "fieldName": "striped"
            },
            {
              "name": "selectedRows",
              "default": "new Set<number>()",
              "description": "selectedRows: Set of row ids that are currently selected.",
              "fieldName": "selectedRows"
            },
            {
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "stickyHeader: Boolean indicating whether the table header\nshould be sticky.",
              "fieldName": "stickyHeader"
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\nin dense mode.",
              "fieldName": "dense"
            },
            {
              "name": "paginationModel",
              "type": {
                "text": "object"
              },
              "default": "{\n    count: 0,\n    pageSize: 5,\n    pageNumber: 0,\n    pageSizeOptions: [5, 10],\n  }",
              "description": "paginationModel: Object holding pagination information such as\ncurrent page, page size, etc.",
              "fieldName": "paginationModel"
            },
            {
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "fieldName": "hideItemsRange"
            },
            {
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "fieldName": "hidePageSizeDropdown"
            },
            {
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "fieldName": "hideNavigationButtons"
            },
            {
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the table layout is fixed (true) or auto (false).",
              "fieldName": "fixedLayout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-data-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataTable",
          "declaration": {
            "name": "DataTable",
            "module": "src/components/reusable/table/data-table.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-data-table",
          "declaration": {
            "name": "DataTable",
            "module": "src/components/reusable/table/data-table.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/defs.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Table",
          "declaration": {
            "name": "Table",
            "module": "./Table"
          }
        },
        {
          "kind": "js",
          "name": "TableCell",
          "declaration": {
            "name": "TableCell",
            "module": "./table-cell"
          }
        },
        {
          "kind": "js",
          "name": "TableRow",
          "declaration": {
            "name": "TableRow",
            "module": "./table-row"
          }
        },
        {
          "kind": "js",
          "name": "TableBody",
          "declaration": {
            "name": "TableBody",
            "module": "./table-body"
          }
        },
        {
          "kind": "js",
          "name": "TableHead",
          "declaration": {
            "name": "TableHead",
            "module": "./table-head"
          }
        },
        {
          "kind": "js",
          "name": "TableHeader",
          "declaration": {
            "name": "TableHeader",
            "module": "./table-header"
          }
        },
        {
          "kind": "js",
          "name": "TableFooter",
          "declaration": {
            "name": "TableFooter",
            "module": "./table-footer"
          }
        },
        {
          "kind": "js",
          "name": "TableToolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "./table-toolbar"
          }
        },
        {
          "kind": "js",
          "name": "TableContainer",
          "declaration": {
            "name": "TableContainer",
            "module": "./table-container"
          }
        },
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "../pagination"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-body.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tbody` Web Component.\n\nRepresents the body section of Shidoka's design system tables. Designed to provide\na consistent look and feel, and can offer striped rows for enhanced readability.",
          "name": "TableBody",
          "slots": [
            {
              "description": "The content slot for adding rows (`<kyn-tr>`) within the table body.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the rows in the table body should be striped.",
              "attribute": "striped",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the rows in the table body should be striped.",
              "fieldName": "striped"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tbody",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableBody",
          "declaration": {
            "name": "TableBody",
            "module": "src/components/reusable/table/table-body.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tbody",
          "declaration": {
            "name": "TableBody",
            "module": "src/components/reusable/table/table-body.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-cell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-td` Web Component.\n\nRepresents a table cell (data cell) within Shidoka's design system tables.\nAllows customization of alignment and can reflect the sort direction when\nused within sortable columns.",
          "name": "TableCell",
          "slots": [
            {
              "description": "The content slot for adding table data inside the cell.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Determines the text alignment of the table cell's content.",
              "attribute": "align",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              },
              "description": "Reflects the sort direction when used within sortable columns.",
              "attribute": "sortDirection"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "width"
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "maxWidth"
            },
            {
              "kind": "field",
              "name": "ellipsis",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Truncates the cell's contents with ellipsis.",
              "attribute": "ellipsis"
            }
          ],
          "attributes": [
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Determines the text alignment of the table cell's content.",
              "fieldName": "align"
            },
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              },
              "description": "Reflects the sort direction when used within sortable columns.",
              "fieldName": "sortDirection"
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "width"
            },
            {
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "maxWidth"
            },
            {
              "name": "ellipsis",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Truncates the cell's contents with ellipsis.",
              "fieldName": "ellipsis"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-td",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableCell",
          "declaration": {
            "name": "TableCell",
            "module": "src/components/reusable/table/table-cell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-td",
          "declaration": {
            "name": "TableCell",
            "module": "src/components/reusable/table/table-cell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table-container` Web Component.\n\nProvides a container for Shidoka's design system tables. It's designed to encapsulate\nand apply styles uniformly across the table elements.",
          "name": "TableContainer",
          "slots": [
            {
              "description": "The content slot for adding table and related elements.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableContainer",
          "declaration": {
            "name": "TableContainer",
            "module": "src/components/reusable/table/table-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-container",
          "declaration": {
            "name": "TableContainer",
            "module": "src/components/reusable/table/table-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tfoot` Web Component.\n\nRepresents a custom table footer (`<tfoot>`) for Shidoka's design system tables.\nDesigned to contain and style table footer rows (`<tr>`) and footer cells (`<td>`).",
          "name": "TableFooter",
          "slots": [
            {
              "description": "The content slot for adding table footer rows.",
              "name": ""
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tfoot",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableFooter",
          "declaration": {
            "name": "TableFooter",
            "module": "src/components/reusable/table/table-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tfoot",
          "declaration": {
            "name": "TableFooter",
            "module": "src/components/reusable/table/table-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-head.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-thead` Web Component.\n\nRepresents a custom table head (`<thead>`) for Shidoka's design system tables.\nDesigned to contain and style table header rows (`<tr>`) and header cells (`<th>`).",
          "name": "TableHead",
          "slots": [
            {
              "description": "The content slot for adding table header rows (`<kyn-tr>`).",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "stickyHeader"
            },
            {
              "kind": "method",
              "name": "handleChildSort",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "stickyHeader"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-thead",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableHead",
          "declaration": {
            "name": "TableHead",
            "module": "src/components/reusable/table/table-head.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-thead",
          "declaration": {
            "name": "TableHead",
            "module": "src/components/reusable/table/table-head.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-th` Web Component.\n\nRepresents a custom table header cell (`<th>`) for Shidoka's design system tables.\nProvides sorting functionality when enabled and allows alignment customization.",
          "name": "TableHeader",
          "slots": [
            {
              "description": "The content slot for adding header text or content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Specifies the alignment of the content within the table header.\nOptions: 'left', 'center', 'right'",
              "attribute": "align",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies if the column is sortable.\nIf set to true, an arrow icon will be displayed unpon hover,\nallowing the user to toggle sort directions.",
              "attribute": "sortable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              },
              "description": "Specifies the direction of sorting applied to the column.",
              "attribute": "sortDirection",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "headerLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The textual content associated with this component.\nRepresents the primary content or label that will be displayed.",
              "attribute": "headerLabel"
            },
            {
              "kind": "field",
              "name": "sortKey",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The unique identifier representing this column header.\nUsed to distinguish between different sortable columns and\nto ensure that only one column is sorted at a time.",
              "attribute": "sortKey"
            },
            {
              "kind": "field",
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the content should be hidden from visual view but remain accessible\nto screen readers for accessibility purposes. When set to `true`, the content\nwill not be visibly shown, but its content can still be read by screen readers.\nThis is especially useful for providing additional context or information to\nassistive technologies without cluttering the visual UI.",
              "attribute": "visiblyHidden"
            },
            {
              "kind": "method",
              "name": "resetSort",
              "description": "Resets the sorting direction of the component to its default state.\nUseful for initializing or clearing any applied sorting on the element."
            },
            {
              "kind": "method",
              "name": "toggleSortDirection",
              "privacy": "private",
              "description": "Toggles the sort direction between ascending, descending, and default states.\nIt also dispatches an event to notify parent components of the sorting change."
            },
            {
              "kind": "method",
              "name": "getTextContent"
            }
          ],
          "events": [
            {
              "name": "on-sort-changed",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the sort direction is changed."
            }
          ],
          "attributes": [
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Specifies the alignment of the content within the table header.\nOptions: 'left', 'center', 'right'",
              "fieldName": "align"
            },
            {
              "name": "sortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies if the column is sortable.\nIf set to true, an arrow icon will be displayed unpon hover,\nallowing the user to toggle sort directions.",
              "fieldName": "sortable"
            },
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              },
              "description": "Specifies the direction of sorting applied to the column.",
              "fieldName": "sortDirection"
            },
            {
              "name": "headerLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The textual content associated with this component.\nRepresents the primary content or label that will be displayed.",
              "fieldName": "headerLabel"
            },
            {
              "name": "sortKey",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The unique identifier representing this column header.\nUsed to distinguish between different sortable columns and\nto ensure that only one column is sorted at a time.",
              "fieldName": "sortKey"
            },
            {
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the content should be hidden from visual view but remain accessible\nto screen readers for accessibility purposes. When set to `true`, the content\nwill not be visibly shown, but its content can still be read by screen readers.\nThis is especially useful for providing additional context or information to\nassistive technologies without cluttering the visual UI.",
              "fieldName": "visiblyHidden"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-th",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableHeader",
          "declaration": {
            "name": "TableHeader",
            "module": "src/components/reusable/table/table-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-th",
          "declaration": {
            "name": "TableHeader",
            "module": "src/components/reusable/table/table-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tr` Web Component.\n\nRepresents a table row (`<tr>`) equivalent for custom tables created with Shidoka's design system.\nIt primarily acts as a container for individual table cells and behaves similarly to a native `<tr>` element.",
          "name": "TableRow",
          "slots": [
            {
              "description": "The content slot for adding table cells (`kyn-td` or other relevant cells).",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "clickable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "clickable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleClick"
            }
          ],
          "attributes": [
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "clickable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "clickable"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tr",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableRow",
          "declaration": {
            "name": "TableRow",
            "module": "src/components/reusable/table/table-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tr",
          "declaration": {
            "name": "TableRow",
            "module": "src/components/reusable/table/table-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-toolbar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table-toolbar` Web Component.\n\nThis component provides a toolbar for tables, primarily featuring a title and additional content.\nThe title is rendered prominently, while the slot can be used for controls, buttons, or other interactive elements.",
          "name": "TableToolbar",
          "slots": [
            {
              "description": "The primary content slot for controls, buttons, or other toolbar content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The title for the toolbar",
              "attribute": "tableTitle"
            }
          ],
          "attributes": [
            {
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The title for the toolbar",
              "fieldName": "tableTitle"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-toolbar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableToolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "src/components/reusable/table/table-toolbar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-toolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "src/components/reusable/table/table-toolbar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textArea/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "./textArea"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textArea/textArea.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Text area.",
          "name": "TextArea",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Maximum number of characters.",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Minimum number of characters.",
              "attribute": "minLength"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Maximum number of characters.",
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Minimum number of characters.",
              "fieldName": "minLength"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-text-area",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "src/components/reusable/textArea/textArea.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-text-area",
          "declaration": {
            "name": "TextArea",
            "module": "src/components/reusable/textArea/textArea.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textInput/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "./textInput"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textInput/textInput.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Text input.",
          "name": "TextInput",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for contextual icon.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "description": "Input type, limited to options that are \"text like\".",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "RegEx pattern to validate.",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Maximum number of characters.",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Minimum number of characters.",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "iconRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Place icon on the right.",
              "attribute": "iconRight"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClear",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "determineIfSlotted",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "description": "Input type, limited to options that are \"text like\".",
              "fieldName": "type"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "RegEx pattern to validate.",
              "fieldName": "pattern"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Maximum number of characters.",
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Minimum number of characters.",
              "fieldName": "minLength"
            },
            {
              "name": "iconRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Place icon on the right.",
              "fieldName": "iconRight"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-text-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "src/components/reusable/textInput/textInput.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-text-input",
          "declaration": {
            "name": "TextInput",
            "module": "src/components/reusable/textInput/textInput.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/timepicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TimePicker",
          "declaration": {
            "name": "TimePicker",
            "module": "./timepicker"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/timepicker/timepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Time picker.",
          "name": "TimePicker",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The value of the time input is always in 24-hour format that includes leading zeros: hh:mm,\nregardless of the input format, which is likely to be selected based on the user's locale (or by the user agent).\nIf the time includes seconds (by step attribute), the format is always hh:mm:ss",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input warn text.",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "maxTime",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Maximum Time hh:mm format.",
              "attribute": "maxTime"
            },
            {
              "kind": "field",
              "name": "minTime",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Minimum Time in hh:mm format.",
              "attribute": "minTime"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\nIt takes value that equates to the number of seconds you want to increment by;\nthe default (60 sec.). If you specify a value of less than 60 sec., the time input will show a seconds input area alongside the hours and minutes",
              "attribute": "step"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateMinTime",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "validateMaxTime",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "timeToSeconds",
              "privacy": "private",
              "parameters": [
                {
                  "name": "timeString",
                  "type": {
                    "text": "String"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The value of the time input is always in 24-hour format that includes leading zeros: hh:mm,\nregardless of the input format, which is likely to be selected based on the user's locale (or by the user agent).\nIf the time includes seconds (by step attribute), the format is always hh:mm:ss",
              "fieldName": "value"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input warn text.",
              "fieldName": "warnText"
            },
            {
              "name": "maxTime",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Maximum Time hh:mm format.",
              "fieldName": "maxTime"
            },
            {
              "name": "minTime",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Minimum Time in hh:mm format.",
              "fieldName": "minTime"
            },
            {
              "name": "step",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\nIt takes value that equates to the number of seconds you want to increment by;\nthe default (60 sec.). If you specify a value of less than 60 sec., the time input will show a seconds input area alongside the hours and minutes",
              "fieldName": "step"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-time-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimePicker",
          "declaration": {
            "name": "TimePicker",
            "module": "src/components/reusable/timepicker/timepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-time-picker",
          "declaration": {
            "name": "TimePicker",
            "module": "src/components/reusable/timepicker/timepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/toggleButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "./toggleButton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/toggleButton/toggleButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Toggle Button.",
          "name": "ToggleButton",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state.",
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "checkedText",
              "type": {
                "text": "string"
              },
              "default": "'On'",
              "description": "Checked state text.",
              "attribute": "checkedText"
            },
            {
              "kind": "field",
              "name": "uncheckedText",
              "type": {
                "text": "string"
              },
              "default": "'Off'",
              "description": "Unchecked state text.",
              "attribute": "uncheckedText"
            },
            {
              "kind": "field",
              "name": "small",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to use small size.",
              "attribute": "small"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state.",
              "fieldName": "checked"
            },
            {
              "name": "checkedText",
              "type": {
                "text": "string"
              },
              "default": "'On'",
              "description": "Checked state text.",
              "fieldName": "checkedText"
            },
            {
              "name": "uncheckedText",
              "type": {
                "text": "string"
              },
              "default": "'Off'",
              "description": "Unchecked state text.",
              "fieldName": "uncheckedText"
            },
            {
              "name": "small",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to use small size.",
              "fieldName": "small"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-toggle-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "src/components/reusable/toggleButton/toggleButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-toggle-button",
          "declaration": {
            "name": "ToggleButton",
            "module": "src/components/reusable/toggleButton/toggleButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/story-helpers/action-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionMenu",
          "members": [
            {
              "kind": "field",
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "opened",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleDelete",
              "attribute": "handleDelete"
            },
            {
              "kind": "field",
              "name": "itemId",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "itemId"
            },
            {
              "kind": "method",
              "name": "toggleMenu",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "deleteHandler"
            },
            {
              "kind": "field",
              "name": "actionHandler"
            }
          ],
          "attributes": [
            {
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "opened"
            },
            {
              "name": "handleDelete",
              "fieldName": "handleDelete"
            },
            {
              "name": "itemId",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "itemId"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "action-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionMenu",
          "declaration": {
            "name": "ActionMenu",
            "module": "src/components/reusable/table/story-helpers/action-menu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "action-menu",
          "declaration": {
            "name": "ActionMenu",
            "module": "src/components/reusable/table/story-helpers/action-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/story-helpers/batch-actions.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BatchActions",
          "members": [
            {
              "kind": "field",
              "name": "handleDelete",
              "attribute": "handleDelete"
            },
            {
              "kind": "field",
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "opened",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleClick"
            }
          ],
          "attributes": [
            {
              "name": "handleDelete",
              "fieldName": "handleDelete"
            },
            {
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "opened"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "batch-actions",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BatchActions",
          "declaration": {
            "name": "BatchActions",
            "module": "src/components/reusable/table/story-helpers/batch-actions.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "batch-actions",
          "declaration": {
            "name": "BatchActions",
            "module": "src/components/reusable/table/story-helpers/batch-actions.ts"
          }
        }
      ]
    }
  ]
}
