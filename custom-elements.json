{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderCategory",
          "declaration": {
            "name": "HeaderCategory",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderDivider",
          "declaration": {
            "name": "HeaderDivider",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderUserProfile",
          "declaration": {
            "name": "HeaderUserProfile",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanel",
          "declaration": {
            "name": "HeaderPanel",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanelLink",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNotificationPanel",
          "declaration": {
            "name": "HeaderNotificationPanel",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "LocalNav",
          "declaration": {
            "name": "LocalNav",
            "module": "./components/global/localNav"
          }
        },
        {
          "kind": "js",
          "name": "LocalNavLink",
          "declaration": {
            "name": "LocalNavLink",
            "module": "./components/global/localNav"
          }
        },
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "UiShell",
          "declaration": {
            "name": "UiShell",
            "module": "./components/global/uiShell"
          }
        },
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "./components/reusable/radioButton"
          }
        },
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "./components/reusable/radioButton"
          }
        },
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "./components/reusable/checkbox"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "./components/reusable/checkbox"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxSubgroup",
          "declaration": {
            "name": "CheckboxSubgroup",
            "module": "./components/reusable/checkbox"
          }
        },
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "./components/reusable/textInput"
          }
        },
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "./components/reusable/textArea"
          }
        },
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "./components/reusable/toggleButton"
          }
        },
        {
          "kind": "js",
          "name": "TimePicker",
          "declaration": {
            "name": "TimePicker",
            "module": "./components/reusable/timepicker"
          }
        },
        {
          "kind": "js",
          "name": "Dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "./components/reusable/dropdown"
          }
        },
        {
          "kind": "js",
          "name": "DropdownOption",
          "declaration": {
            "name": "DropdownOption",
            "module": "./components/reusable/dropdown"
          }
        },
        {
          "kind": "js",
          "name": "DropdownCategory",
          "declaration": {
            "name": "DropdownCategory",
            "module": "./components/reusable/dropdown"
          }
        },
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "./components/reusable/datePicker"
          }
        },
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "./components/reusable/daterangepicker"
          }
        },
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "./components/reusable/breadcrumbs"
          }
        },
        {
          "kind": "js",
          "name": "BreadcrumbItem",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "./components/reusable/breadcrumbs"
          }
        },
        {
          "kind": "js",
          "name": "Table",
          "declaration": {
            "name": "Table",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableCell",
          "declaration": {
            "name": "TableCell",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableRow",
          "declaration": {
            "name": "TableRow",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableBody",
          "declaration": {
            "name": "TableBody",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableHead",
          "declaration": {
            "name": "TableHead",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableHeader",
          "declaration": {
            "name": "TableHeader",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableFoot",
          "declaration": {
            "name": "TableFoot",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableFooter",
          "declaration": {
            "name": "TableFooter",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableLegend",
          "declaration": {
            "name": "TableLegend",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableLegendItem",
          "declaration": {
            "name": "TableLegendItem",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableToolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableContainer",
          "declaration": {
            "name": "TableContainer",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableHeaderRow",
          "declaration": {
            "name": "TableHeaderRow",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "TableExpandedRow",
          "declaration": {
            "name": "TableExpandedRow",
            "module": "./components/reusable/table"
          }
        },
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "./components/reusable/pagination"
          }
        },
        {
          "kind": "js",
          "name": "OverflowMenu",
          "declaration": {
            "name": "OverflowMenu",
            "module": "./components/reusable/overflowMenu"
          }
        },
        {
          "kind": "js",
          "name": "OverflowMenuItem",
          "declaration": {
            "name": "OverflowMenuItem",
            "module": "./components/reusable/overflowMenu"
          }
        },
        {
          "kind": "js",
          "name": "Tabs",
          "declaration": {
            "name": "Tabs",
            "module": "./components/reusable/tabs"
          }
        },
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "./components/reusable/tabs"
          }
        },
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "./components/reusable/tabs"
          }
        },
        {
          "kind": "js",
          "name": "Modal",
          "declaration": {
            "name": "Modal",
            "module": "./components/reusable/modal"
          }
        },
        {
          "kind": "js",
          "name": "Tooltip",
          "declaration": {
            "name": "Tooltip",
            "module": "./components/reusable/tooltip"
          }
        },
        {
          "kind": "js",
          "name": "Tag",
          "declaration": {
            "name": "Tag",
            "module": "./components/reusable/tag"
          }
        },
        {
          "kind": "js",
          "name": "TagGroup",
          "declaration": {
            "name": "TagGroup",
            "module": "./components/reusable/tag"
          }
        },
        {
          "kind": "js",
          "name": "GlobalFilter",
          "declaration": {
            "name": "GlobalFilter",
            "module": "./components/reusable/globalFilter"
          }
        },
        {
          "kind": "js",
          "name": "SideDrawer",
          "declaration": {
            "name": "SideDrawer",
            "module": "./components/reusable/sideDrawer"
          }
        },
        {
          "kind": "js",
          "name": "PageTitle",
          "declaration": {
            "name": "PageTitle",
            "module": "./components/reusable/pagetitle"
          }
        },
        {
          "kind": "js",
          "name": "Card",
          "declaration": {
            "name": "Card",
            "module": "./components/reusable/card"
          }
        },
        {
          "kind": "js",
          "name": "Notification",
          "declaration": {
            "name": "Notification",
            "module": "./components/reusable/notification"
          }
        },
        {
          "kind": "js",
          "name": "NotificationContainer",
          "declaration": {
            "name": "NotificationContainer",
            "module": "./components/reusable/notification"
          }
        },
        {
          "kind": "js",
          "name": "Widget",
          "declaration": {
            "name": "Widget",
            "module": "./components/reusable/widget"
          }
        },
        {
          "kind": "js",
          "name": "WidgetDragHandle",
          "declaration": {
            "name": "WidgetDragHandle",
            "module": "./components/reusable/widget"
          }
        },
        {
          "kind": "js",
          "name": "WidgetGridstack",
          "declaration": {
            "name": "WidgetGridstack",
            "module": "./components/reusable/widget"
          }
        },
        {
          "kind": "js",
          "name": "Search",
          "declaration": {
            "name": "Search",
            "module": "./components/reusable/search"
          }
        },
        {
          "kind": "js",
          "name": "debounce",
          "declaration": {
            "name": "debounce",
            "module": "./common/helpers/helpers"
          }
        },
        {
          "kind": "js",
          "name": "stringToReactHtml",
          "declaration": {
            "name": "stringToReactHtml",
            "module": "./common/helpers/helpers"
          }
        },
        {
          "kind": "js",
          "name": "createOptionsArray",
          "declaration": {
            "name": "createOptionsArray",
            "module": "./common/helpers/helpers"
          }
        },
        {
          "kind": "js",
          "name": "Config",
          "declaration": {
            "name": "Config",
            "module": "./common/helpers/gridstack"
          }
        },
        {
          "kind": "js",
          "name": "WidgetSizes",
          "declaration": {
            "name": "WidgetSizes",
            "module": "./common/helpers/gridstack"
          }
        },
        {
          "kind": "js",
          "name": "WidgetConstraints",
          "declaration": {
            "name": "WidgetConstraints",
            "module": "./common/helpers/gridstack"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/common/helpers/gridstack.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Config",
          "type": {
            "text": "object"
          },
          "default": "{\r\n  handle: 'kyn-widget-drag-handle', // set the drag handle\r\n  margin: 16, // 32px gap\r\n  animate: false, // disable animation until after initial load\r\n  columnOpts: {\r\n    breakpointForWindow: true, // break based on viewport size, not grid size\r\n    breakpoints: [\r\n      { w: 671, c: 4 }, // shidoka-foundation sm breakpoint, 4 column grid\r\n      { w: 1183, c: 8 }, // shidoka-foundation md breakpoint, 8 column grid\r\n    ],\r\n  },\r\n}"
        },
        {
          "kind": "variable",
          "name": "WidgetSizes",
          "type": {
            "text": "object"
          },
          "default": "{\r\n  pill: {\r\n    max: {\r\n      w: 2,\r\n      h: 2,\r\n    },\r\n    xl: {\r\n      w: 3,\r\n      h: 3,\r\n    },\r\n    lg: {\r\n      w: 3,\r\n      h: 3,\r\n    },\r\n    md: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  standard: {\r\n    max: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n    xl: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n    lg: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 8,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  standardShort: {\r\n    max: {\r\n      w: 4,\r\n      h: 2,\r\n    },\r\n    xl: {\r\n      w: 4,\r\n      h: 3,\r\n    },\r\n    lg: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 5,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  wide: {\r\n    max: {\r\n      w: 6,\r\n      h: 4,\r\n    },\r\n    xl: {\r\n      w: 6,\r\n      h: 4,\r\n    },\r\n    lg: {\r\n      w: 6,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 8,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  wideShort: {\r\n    max: {\r\n      w: 6,\r\n      h: 3,\r\n    },\r\n    xl: {\r\n      w: 6,\r\n      h: 4,\r\n    },\r\n    lg: {\r\n      w: 6,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 4,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  xlWide: {\r\n    max: {\r\n      w: 8,\r\n      h: 4,\r\n    },\r\n    xl: {\r\n      w: 8,\r\n      h: 4,\r\n    },\r\n    lg: {\r\n      w: 8,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 8,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  xlWideShort: {\r\n    max: {\r\n      w: 8,\r\n      h: 3,\r\n    },\r\n    xl: {\r\n      w: 8,\r\n      h: 4,\r\n    },\r\n    lg: {\r\n      w: 8,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 5,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  xxlWide: {\r\n    max: {\r\n      w: 10,\r\n      h: 4,\r\n    },\r\n    xl: {\r\n      w: 10,\r\n      h: 4,\r\n    },\r\n    lg: {\r\n      w: 10,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 8,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  xxlWideShort: {\r\n    max: {\r\n      w: 10,\r\n      h: 3,\r\n    },\r\n    xl: {\r\n      w: 10,\r\n      h: 4,\r\n    },\r\n    lg: {\r\n      w: 10,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 5,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  xxxlWide: {\r\n    max: {\r\n      w: 12,\r\n      h: 4,\r\n    },\r\n    xl: {\r\n      w: 12,\r\n      h: 4,\r\n    },\r\n    lg: {\r\n      w: 12,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 8,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  xxxlWideShort: {\r\n    max: {\r\n      w: 12,\r\n      h: 3,\r\n    },\r\n    xl: {\r\n      w: 12,\r\n      h: 3,\r\n    },\r\n    lg: {\r\n      w: 12,\r\n      h: 4,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 5,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n  tower: {\r\n    max: {\r\n      w: 12,\r\n      h: 7,\r\n    },\r\n    xl: {\r\n      w: 12,\r\n      h: 7,\r\n    },\r\n    lg: {\r\n      w: 12,\r\n      h: 7,\r\n    },\r\n    md: {\r\n      w: 8,\r\n      h: 8,\r\n    },\r\n    sm: {\r\n      w: 4,\r\n      h: 4,\r\n    },\r\n  },\r\n}"
        },
        {
          "kind": "variable",
          "name": "WidgetConstraints",
          "type": {
            "text": "object"
          },
          "default": "{\r\n  default: {\r\n    max: {\r\n      minW: WidgetSizes.pill.max.w,\r\n      minH: WidgetSizes.pill.max.h,\r\n    },\r\n    xl: {\r\n      minW: WidgetSizes.pill.xl.w,\r\n      minH: WidgetSizes.pill.xl.h,\r\n    },\r\n    lg: {\r\n      minW: WidgetSizes.pill.lg.w,\r\n      minH: WidgetSizes.pill.lg.h,\r\n    },\r\n    md: {\r\n      minW: WidgetSizes.pill.md.w,\r\n      minH: WidgetSizes.pill.md.h,\r\n    },\r\n    sm: {\r\n      minW: WidgetSizes.pill.sm.w,\r\n      minH: WidgetSizes.pill.sm.h,\r\n    },\r\n  },\r\n  table: {\r\n    max: {\r\n      minW: WidgetSizes.wide.max.w,\r\n      minH: WidgetSizes.wide.max.h,\r\n    },\r\n    xl: {\r\n      minW: WidgetSizes.wide.xl.w,\r\n      minH: WidgetSizes.wide.xl.h,\r\n    },\r\n    lg: {\r\n      minW: WidgetSizes.wide.lg.w,\r\n      minH: WidgetSizes.wide.lg.h,\r\n    },\r\n    md: {\r\n      minW: WidgetSizes.wide.md.w,\r\n      minH: WidgetSizes.wide.md.h,\r\n    },\r\n    sm: {\r\n      minW: WidgetSizes.wide.sm.w,\r\n      minH: WidgetSizes.wide.sm.h,\r\n    },\r\n  },\r\n  chart: {\r\n    max: {\r\n      minW: WidgetSizes.wide.max.w,\r\n      minH: WidgetSizes.wide.max.h,\r\n    },\r\n    xl: {\r\n      minW: WidgetSizes.wide.xl.w,\r\n      minH: WidgetSizes.wide.xl.h,\r\n    },\r\n    lg: {\r\n      minW: WidgetSizes.wide.lg.w,\r\n      minH: WidgetSizes.wide.lg.h,\r\n    },\r\n    md: {\r\n      minW: WidgetSizes.wide.md.w,\r\n      minH: WidgetSizes.wide.md.h,\r\n    },\r\n    sm: {\r\n      minW: WidgetSizes.wide.sm.w,\r\n      minH: WidgetSizes.wide.sm.h,\r\n    },\r\n  },\r\n  list: {\r\n    max: {\r\n      minW: WidgetSizes.standard.max.w,\r\n      minH: WidgetSizes.standard.max.h,\r\n    },\r\n    xl: {\r\n      minW: WidgetSizes.standard.xl.w,\r\n      minH: WidgetSizes.standard.xl.h,\r\n    },\r\n    lg: {\r\n      minW: WidgetSizes.standard.lg.w,\r\n      minH: WidgetSizes.standard.lg.h,\r\n    },\r\n    md: {\r\n      minW: WidgetSizes.standard.md.w,\r\n      minH: WidgetSizes.standard.md.h,\r\n    },\r\n    sm: {\r\n      minW: WidgetSizes.standard.sm.w,\r\n      minH: WidgetSizes.standard.sm.h,\r\n    },\r\n  },\r\n  content: {\r\n    max: {\r\n      minW: WidgetSizes.standard.max.w,\r\n      minH: WidgetSizes.standard.max.h,\r\n    },\r\n    xl: {\r\n      minW: WidgetSizes.standard.xl.w,\r\n      minH: WidgetSizes.standard.xl.h,\r\n    },\r\n    lg: {\r\n      minW: WidgetSizes.standard.lg.w,\r\n      minH: WidgetSizes.standard.lg.h,\r\n    },\r\n    md: {\r\n      minW: WidgetSizes.standard.md.w,\r\n      minH: WidgetSizes.standard.md.h,\r\n    },\r\n    sm: {\r\n      minW: WidgetSizes.standard.sm.w,\r\n      minH: WidgetSizes.standard.sm.h,\r\n    },\r\n  },\r\n  alert: {\r\n    max: {\r\n      minW: WidgetSizes.standard.max.w,\r\n      minH: WidgetSizes.standard.max.h,\r\n    },\r\n    xl: {\r\n      minW: WidgetSizes.standard.xl.w,\r\n      minH: WidgetSizes.standard.xl.h,\r\n    },\r\n    lg: {\r\n      minW: WidgetSizes.standard.lg.w,\r\n      minH: WidgetSizes.standard.lg.h,\r\n    },\r\n    md: {\r\n      minW: WidgetSizes.standard.md.w,\r\n      minH: WidgetSizes.standard.md.h,\r\n    },\r\n    sm: {\r\n      minW: WidgetSizes.standard.sm.w,\r\n      minH: WidgetSizes.standard.sm.h,\r\n    },\r\n  },\r\n  cards: {\r\n    max: {\r\n      minW: WidgetSizes.wide.max.w,\r\n      minH: WidgetSizes.wide.max.h,\r\n    },\r\n    xl: {\r\n      minW: WidgetSizes.wide.xl.w,\r\n      minH: WidgetSizes.wide.xl.h,\r\n    },\r\n    lg: {\r\n      minW: WidgetSizes.wide.lg.w,\r\n      minH: WidgetSizes.wide.lg.h,\r\n    },\r\n    md: {\r\n      minW: WidgetSizes.wide.md.w,\r\n      minH: WidgetSizes.wide.md.h,\r\n    },\r\n    sm: {\r\n      minW: WidgetSizes.wide.sm.w,\r\n      minH: WidgetSizes.wide.sm.h,\r\n    },\r\n  },\r\n  accordion: {\r\n    max: {\r\n      minW: WidgetSizes.standard.max.w,\r\n      minH: WidgetSizes.standard.max.h,\r\n    },\r\n    xl: {\r\n      minW: WidgetSizes.standard.xl.w,\r\n      minH: WidgetSizes.standard.xl.h,\r\n    },\r\n    lg: {\r\n      minW: WidgetSizes.standard.lg.w,\r\n      minH: WidgetSizes.standard.lg.h,\r\n    },\r\n    md: {\r\n      minW: WidgetSizes.standard.md.w,\r\n      minH: WidgetSizes.standard.md.h,\r\n    },\r\n    sm: {\r\n      minW: WidgetSizes.standard.sm.w,\r\n      minH: WidgetSizes.standard.sm.h,\r\n    },\r\n  },\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Config",
          "declaration": {
            "name": "Config",
            "module": "src/common/helpers/gridstack.ts"
          }
        },
        {
          "kind": "js",
          "name": "WidgetSizes",
          "declaration": {
            "name": "WidgetSizes",
            "module": "src/common/helpers/gridstack.ts"
          }
        },
        {
          "kind": "js",
          "name": "WidgetConstraints",
          "declaration": {
            "name": "WidgetConstraints",
            "module": "src/common/helpers/gridstack.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/common/helpers/helpers.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "debounce",
          "parameters": [
            {
              "name": "fn",
              "type": {
                "text": "Function"
              }
            },
            {
              "name": "ms",
              "default": "100"
            }
          ]
        },
        {
          "kind": "function",
          "name": "stringToReactHtml",
          "parameters": [
            {
              "name": "string",
              "type": {
                "text": "String"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createOptionsArray",
          "parameters": [
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "*"
              },
              "description": " imported enums object"
            }
          ],
          "description": "Convert an object to an array of only its values.\r\nUsed when importing enums in component stories for populating argType dropdowns."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debounce",
          "declaration": {
            "name": "debounce",
            "module": "src/common/helpers/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "stringToReactHtml",
          "declaration": {
            "name": "stringToReactHtml",
            "module": "src/common/helpers/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "createOptionsArray",
          "declaration": {
            "name": "createOptionsArray",
            "module": "src/common/helpers/helpers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/sampleCardComponents/card.content.sample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Sample Lit component to show containable items inside Card.",
          "name": "SampleCardStoryContentComponent",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sample-card-story-content-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampleCardStoryContentComponent",
          "declaration": {
            "name": "SampleCardStoryContentComponent",
            "module": "src/stories/sampleCardComponents/card.content.sample.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sample-card-story-content-component",
          "declaration": {
            "name": "SampleCardStoryContentComponent",
            "module": "src/stories/sampleCardComponents/card.content.sample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/sampleCardComponents/card.sample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Sample Lit component to show card pattern.",
          "name": "SampleCardStoryComponent",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sample-card-story-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampleCardStoryComponent",
          "declaration": {
            "name": "SampleCardStoryComponent",
            "module": "src/stories/sampleCardComponents/card.sample.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sample-card-story-component",
          "declaration": {
            "name": "SampleCardStoryComponent",
            "module": "src/stories/sampleCardComponents/card.sample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stories/sampleCardComponents/vitalCard.sample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Sample Lit component to show vital card pattern.",
          "name": "VitalCardSampleComponent",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "vital-card-sample-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VitalCardSampleComponent",
          "declaration": {
            "name": "VitalCardSampleComponent",
            "module": "src/stories/sampleCardComponents/vitalCard.sample.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "vital-card-sample-component",
          "declaration": {
            "name": "VitalCardSampleComponent",
            "module": "src/stories/sampleCardComponents/vitalCard.sample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Footer component.",
          "name": "Footer",
          "slots": [
            {
              "description": "Default slot, for the footer-nav.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the logo, will overwrite the default logo.",
              "name": "logo"
            },
            {
              "description": "Slot for the copyright text.",
              "name": "copyright"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the footer logo link. Should target the application home page.",
              "attribute": "rootUrl"
            },
            {
              "kind": "method",
              "name": "handleRootLinkClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the logo link click event and emits the original event.",
              "name": "on-root-link-click"
            }
          ],
          "attributes": [
            {
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the footer logo link. Should target the application home page.",
              "fieldName": "rootUrl"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "src/components/global/footer/footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer",
          "declaration": {
            "name": "Footer",
            "module": "src/components/global/footer/footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footerLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for navigation links within the Footer.",
          "name": "FooterNavLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "src/components/global/footer/footerLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer-link",
          "declaration": {
            "name": "FooterNavLink",
            "module": "src/components/global/footer/footerLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footerNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for footer navigation links.",
          "name": "FooterNav",
          "slots": [
            {
              "description": "Slot for footer links.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "src/components/global/footer/footerNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer-nav",
          "declaration": {
            "name": "FooterNav",
            "module": "src/components/global/footer/footerNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "./footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "./footerNav"
          }
        },
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "./footerLink"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Header component.",
          "name": "Header",
          "slots": [
            {
              "description": "The default slot for all empty space right of the logo/title.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the logo, will overwrite the default logo.",
              "name": "logo"
            },
            {
              "description": "Slot left of the logo, intended for the header nav.",
              "name": "left"
            },
            {
              "description": "Slot between logo/title and right flyouts.",
              "name": "center"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the header logo link. Should target the application home page.",
              "attribute": "rootUrl"
            },
            {
              "kind": "field",
              "name": "appTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "App title text next to logo.  Hidden on smaller screens.",
              "attribute": "appTitle"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleRootLinkClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleNavToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFlyoutsToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the menu toggle click event and emits the menu open state in the detail.",
              "name": "on-menu-toggle"
            },
            {
              "description": "Captures the logo link click event and emits the original event details.",
              "name": "on-root-link-click"
            }
          ],
          "attributes": [
            {
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the header logo link. Should target the application home page.",
              "fieldName": "rootUrl"
            },
            {
              "name": "appTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "App title text next to logo.  Hidden on smaller screens.",
              "fieldName": "appTitle"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "src/components/global/header/header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header",
          "declaration": {
            "name": "Header",
            "module": "src/components/global/header/header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerAvatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "User avatar.",
          "name": "HeaderAvatar",
          "members": [
            {
              "kind": "field",
              "name": "initials",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Two letters, first and last initial, to show in the user avatar circle.",
              "attribute": "initials"
            }
          ],
          "attributes": [
            {
              "name": "initials",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Two letters, first and last initial, to show in the user avatar circle.",
              "fieldName": "initials"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-avatar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "src/components/global/header/headerAvatar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-avatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "src/components/global/header/headerAvatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerCategory.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header link category",
          "name": "HeaderCategory",
          "slots": [
            {
              "description": "Slot for links.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "heading"
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "heading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-category",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderCategory",
          "declaration": {
            "name": "HeaderCategory",
            "module": "src/components/global/header/headerCategory.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-category",
          "declaration": {
            "name": "HeaderCategory",
            "module": "src/components/global/header/headerCategory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerDivider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header divider",
          "name": "HeaderDivider",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-divider",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderDivider",
          "declaration": {
            "name": "HeaderDivider",
            "module": "src/components/global/header/headerDivider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-divider",
          "declaration": {
            "name": "HeaderDivider",
            "module": "src/components/global/header/headerDivider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerFlyout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for header flyout items.",
          "name": "HeaderFlyout",
          "slots": [
            {
              "description": "Slot for flyout menu content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for button/toggle content.",
              "name": "button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flyout open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "anchorLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchor flyout menu to the left edge of the button instead of the right edge.",
              "attribute": "anchorLeft"
            },
            {
              "kind": "field",
              "name": "hideArrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the arrow.",
              "attribute": "hideArrow"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Menu & button label.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "hideMenuLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the label at the top of the flyout menu.",
              "attribute": "hideMenuLabel"
            },
            {
              "kind": "field",
              "name": "hideButtonLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the label in the mobile button.",
              "attribute": "hideButtonLabel"
            },
            {
              "kind": "field",
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "DEPRECATED. Use `label` instead.\r\nButton assistive text, title + aria-label.",
              "attribute": "assistiveText"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Turns the button into a link.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "attribute": "backText"
            },
            {
              "kind": "method",
              "name": "_handleBack",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleOverlayClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flyout open state.",
              "fieldName": "open"
            },
            {
              "name": "anchorLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchor flyout menu to the left edge of the button instead of the right edge.",
              "fieldName": "anchorLeft"
            },
            {
              "name": "hideArrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the arrow.",
              "fieldName": "hideArrow"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Menu & button label.",
              "fieldName": "label"
            },
            {
              "name": "hideMenuLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the label at the top of the flyout menu.",
              "fieldName": "hideMenuLabel"
            },
            {
              "name": "hideButtonLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the label in the mobile button.",
              "fieldName": "hideButtonLabel"
            },
            {
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "DEPRECATED. Use `label` instead.\r\nButton assistive text, title + aria-label.",
              "fieldName": "assistiveText"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Turns the button into a link.",
              "fieldName": "href"
            },
            {
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "fieldName": "backText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-flyout",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "src/components/global/header/headerFlyout.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-flyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "src/components/global/header/headerFlyout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerFlyouts.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header-flyout components.",
          "name": "HeaderFlyouts",
          "slots": [
            {
              "description": "Slot for header-flyout components.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "open"
            },
            {
              "kind": "method",
              "name": "_toggleOpen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-flyouts",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "src/components/global/header/headerFlyouts.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-flyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "src/components/global/header/headerFlyouts.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for navigation links within the Header.",
          "name": "HeaderLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for sublinks (up to two levels).",
              "name": "links"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link active state, for example when URL path matches link href.",
              "attribute": "isActive"
            },
            {
              "kind": "field",
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "DEPRECATED. Adds a 1px shadow to the bottom of the link.",
              "attribute": "divider"
            },
            {
              "kind": "field",
              "name": "searchLabel",
              "type": {
                "text": "string"
              },
              "default": "'Search'",
              "description": "Label for sub-menu link search input, which is visible with > 5 sub-links.",
              "attribute": "searchLabel"
            },
            {
              "kind": "field",
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "attribute": "backText"
            },
            {
              "kind": "field",
              "name": "_searchTerm",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Text for mobile \"Back\" button."
            },
            {
              "kind": "method",
              "name": "_handleSearch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_searchFilter",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleBack",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleLinksSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerLeave",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "determineLevel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_positionMenu",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link open state.",
              "fieldName": "open"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            },
            {
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link active state, for example when URL path matches link href.",
              "fieldName": "isActive"
            },
            {
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "DEPRECATED. Adds a 1px shadow to the bottom of the link.",
              "fieldName": "divider"
            },
            {
              "name": "searchLabel",
              "type": {
                "text": "string"
              },
              "default": "'Search'",
              "description": "Label for sub-menu link search input, which is visible with > 5 sub-links.",
              "fieldName": "searchLabel"
            },
            {
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "fieldName": "backText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "src/components/global/header/headerLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-link",
          "declaration": {
            "name": "HeaderLink",
            "module": "src/components/global/header/headerLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header navigation links.",
          "name": "HeaderNav",
          "slots": [
            {
              "description": "This element has a slot.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "slot",
              "type": {
                "text": "string"
              },
              "default": "'left'",
              "description": "Force correct slot",
              "attribute": "slot",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "_toggleMenuOpen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleOverlayClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "slot",
              "type": {
                "text": "string"
              },
              "default": "'left'",
              "description": "Force correct slot",
              "fieldName": "slot"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "src/components/global/header/headerNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-nav",
          "declaration": {
            "name": "HeaderNav",
            "module": "src/components/global/header/headerNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerNotificationPanel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for notification panel within the Header.",
          "name": "HeaderNotificationPanel",
          "slots": [
            {
              "description": "Slot for panel menu",
              "name": "menu-slot"
            },
            {
              "description": "Slot for notification content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "panelTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification panel Title.",
              "attribute": "panelTitle"
            },
            {
              "kind": "field",
              "name": "panelFooterBtnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification panel footer button text.",
              "attribute": "panelFooterBtnText"
            },
            {
              "kind": "field",
              "name": "hidePanelFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide notification panel footer",
              "attribute": "hidePanelFooter"
            },
            {
              "kind": "method",
              "name": "_handlefooterBtnEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the panel footer button event.",
              "name": "on-footer-btn-click"
            }
          ],
          "attributes": [
            {
              "name": "panelTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification panel Title.",
              "fieldName": "panelTitle"
            },
            {
              "name": "panelFooterBtnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification panel footer button text.",
              "fieldName": "panelFooterBtnText"
            },
            {
              "name": "hidePanelFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide notification panel footer",
              "fieldName": "hidePanelFooter"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-notification-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderNotificationPanel",
          "declaration": {
            "name": "HeaderNotificationPanel",
            "module": "src/components/global/header/headerNotificationPanel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-notification-panel",
          "declaration": {
            "name": "HeaderNotificationPanel",
            "module": "src/components/global/header/headerNotificationPanel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerPanel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "DEPRECATED. Header fly-out panel.",
          "name": "HeaderPanel",
          "slots": [
            {
              "description": "Slot for panel content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for button icon.",
              "name": "button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "right",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel extends from right instead of left.",
              "attribute": "right"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Panel heading.",
              "attribute": "heading"
            },
            {
              "kind": "field",
              "name": "openText",
              "type": {
                "text": "string"
              },
              "default": "'Open Panel'",
              "description": "Open button assistive text.",
              "attribute": "openText"
            },
            {
              "kind": "field",
              "name": "closeText",
              "type": {
                "text": "string"
              },
              "default": "'Close Panel'",
              "description": "Close button assistive text.",
              "attribute": "closeText"
            },
            {
              "kind": "method",
              "name": "togglePanel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "right",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel extends from right instead of left.",
              "fieldName": "right"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Panel open state.",
              "fieldName": "open"
            },
            {
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Panel heading.",
              "fieldName": "heading"
            },
            {
              "name": "openText",
              "type": {
                "text": "string"
              },
              "default": "'Open Panel'",
              "description": "Open button assistive text.",
              "fieldName": "openText"
            },
            {
              "name": "closeText",
              "type": {
                "text": "string"
              },
              "default": "'Close Panel'",
              "description": "Close button assistive text.",
              "fieldName": "closeText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderPanel",
          "declaration": {
            "name": "HeaderPanel",
            "module": "src/components/global/header/headerPanel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-panel",
          "declaration": {
            "name": "HeaderPanel",
            "module": "src/components/global/header/headerPanel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerPanelLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header fly-out panel link.",
          "name": "HeaderPanelLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-panel-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderPanelLink",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "src/components/global/header/headerPanelLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-panel-link",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "src/components/global/header/headerPanelLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerUserProfile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header user profile.",
          "name": "HeaderUserProfile",
          "slots": [
            {
              "description": "Slot for the profile picture img.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "subtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's job title, or subtext.",
              "attribute": "subtitle"
            },
            {
              "kind": "field",
              "name": "email",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's email address.",
              "attribute": "email"
            },
            {
              "kind": "field",
              "name": "profileLink",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "View profile link URL.",
              "attribute": "profileLink"
            },
            {
              "kind": "field",
              "name": "profileLinkText",
              "type": {
                "text": "string"
              },
              "default": "'View Profile'",
              "description": "View Profile link text.",
              "attribute": "profileLinkText"
            },
            {
              "kind": "method",
              "name": "_handleProfileClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the view profile link click event and emits the original event details.",
              "name": "on-profile-link-click"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's name.",
              "fieldName": "name"
            },
            {
              "name": "subtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's job title, or subtext.",
              "fieldName": "subtitle"
            },
            {
              "name": "email",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's email address.",
              "fieldName": "email"
            },
            {
              "name": "profileLink",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "View profile link URL.",
              "fieldName": "profileLink"
            },
            {
              "name": "profileLinkText",
              "type": {
                "text": "string"
              },
              "default": "'View Profile'",
              "description": "View Profile link text.",
              "fieldName": "profileLinkText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-user-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderUserProfile",
          "declaration": {
            "name": "HeaderUserProfile",
            "module": "src/components/global/header/headerUserProfile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-user-profile",
          "declaration": {
            "name": "HeaderUserProfile",
            "module": "src/components/global/header/headerUserProfile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "./header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "./headerNav"
          }
        },
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "./headerLink"
          }
        },
        {
          "kind": "js",
          "name": "HeaderCategory",
          "declaration": {
            "name": "HeaderCategory",
            "module": "./headerCategory"
          }
        },
        {
          "kind": "js",
          "name": "HeaderDivider",
          "declaration": {
            "name": "HeaderDivider",
            "module": "./headerDivider"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "./headerFlyouts"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "./headerFlyout"
          }
        },
        {
          "kind": "js",
          "name": "HeaderUserProfile",
          "declaration": {
            "name": "HeaderUserProfile",
            "module": "./headerUserProfile"
          }
        },
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "./headerAvatar"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanel",
          "declaration": {
            "name": "HeaderPanel",
            "module": "./headerPanel"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanelLink",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "./headerPanelLink"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNotificationPanel",
          "declaration": {
            "name": "HeaderNotificationPanel",
            "module": "./headerNotificationPanel"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNav",
          "declaration": {
            "name": "LocalNav",
            "module": "./localNav"
          }
        },
        {
          "kind": "js",
          "name": "LocalNavLink",
          "declaration": {
            "name": "LocalNavLink",
            "module": "./localNavLink"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/localNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Side Navigation component.",
          "name": "LocalNav",
          "slots": [
            {
              "description": "The default slot, for local nav links.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "pinned",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Local nav pinned state.",
              "attribute": "pinned"
            },
            {
              "kind": "field",
              "name": "pinText",
              "type": {
                "text": "string"
              },
              "default": "'Pin'",
              "description": "Pin open button assistive text.",
              "attribute": "pinText"
            },
            {
              "kind": "field",
              "name": "unpinText",
              "type": {
                "text": "string"
              },
              "default": "'Unpin'",
              "description": "Unpin button assistive text.",
              "attribute": "unpinText"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    toggleMenu: 'Toggle Menu',\r\n    collapse: 'Collapse',\r\n    menu: 'Menu',\r\n  }",
              "description": "Menu toggle button assistive text.",
              "attribute": "textStrings"
            },
            {
              "kind": "method",
              "name": "_handleNavToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleMobileNavToggle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerLeave",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleLinkActive",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the open state and original event details.",
              "name": "on-toggle"
            }
          ],
          "attributes": [
            {
              "name": "pinned",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Local nav pinned state.",
              "fieldName": "pinned"
            },
            {
              "name": "pinText",
              "type": {
                "text": "string"
              },
              "default": "'Pin'",
              "description": "Pin open button assistive text.",
              "fieldName": "pinText"
            },
            {
              "name": "unpinText",
              "type": {
                "text": "string"
              },
              "default": "'Unpin'",
              "description": "Unpin button assistive text.",
              "fieldName": "unpinText"
            },
            {
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    toggleMenu: 'Toggle Menu',\r\n    collapse: 'Collapse',\r\n    menu: 'Menu',\r\n  }",
              "description": "Menu toggle button assistive text.",
              "fieldName": "textStrings"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-local-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNav",
          "declaration": {
            "name": "LocalNav",
            "module": "src/components/global/localNav/localNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-local-nav",
          "declaration": {
            "name": "LocalNav",
            "module": "src/components/global/localNav/localNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/localNavLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Link component for use in the global Side Navigation component.",
          "name": "LocalNavLink",
          "slots": [
            {
              "description": "The default slot, for the link text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for an icon. Use 16px size.",
              "name": "icon"
            },
            {
              "description": "Slot for the next level of links, supports three levels.",
              "name": "links"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "_expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expanded state."
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Active state.",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "attribute": "backText"
            },
            {
              "kind": "method",
              "name": "_handleTextSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_getSlotText",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleLinksSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "determineLevel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerLeave",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_positionMenu",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleBack",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event, level, and if default was prevented.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Active state.",
              "fieldName": "active"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "fieldName": "backText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-local-nav-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNavLink",
          "declaration": {
            "name": "LocalNavLink",
            "module": "src/components/global/localNav/localNavLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-local-nav-link",
          "declaration": {
            "name": "LocalNavLink",
            "module": "src/components/global/localNav/localNavLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/uiShell/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "UiShell",
          "declaration": {
            "name": "UiShell",
            "module": "./uiShell"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/uiShell/uiShell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container to help with positioning and padding of the global elements such as: adds padding for the fixed Header and Local Nav, adds main content gutters, and makes Footer sticky. This takes the onus off of the consuming app to configure these values.",
          "name": "UiShell",
          "slots": [
            {
              "description": "Slot for global elements.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-ui-shell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UiShell",
          "declaration": {
            "name": "UiShell",
            "module": "src/components/global/uiShell/uiShell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-ui-shell",
          "declaration": {
            "name": "UiShell",
            "module": "src/components/global/uiShell/uiShell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/breadcrumbItem.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Breadcrumb Item",
          "name": "BreadcrumbItem",
          "slots": [
            {
              "description": "Slot for the content of the breadcrumb item, usually the label or text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "href"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "href"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-breadcrumb-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BreadcrumbItem",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "src/components/reusable/breadcrumbs/breadcrumbItem.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-breadcrumb-item",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "src/components/reusable/breadcrumbs/breadcrumbItem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/breadcrumbs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Breadcrumbs Component.",
          "name": "Breadcrumbs",
          "slots": [
            {
              "description": "Slot for inserting links.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-breadcrumbs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "src/components/reusable/breadcrumbs/breadcrumbs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "src/components/reusable/breadcrumbs/breadcrumbs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "BreadcrumbItem",
          "declaration": {
            "name": "BreadcrumbItem",
            "module": "./breadcrumbItem"
          }
        },
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "./breadcrumbs"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/card/card.content.sample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Sample Lit component to show containable items inside Card.",
          "name": "SampleCardContentComponent",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sample-card-content-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampleCardContentComponent",
          "declaration": {
            "name": "SampleCardContentComponent",
            "module": "src/components/reusable/card/card.content.sample.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sample-card-content-component",
          "declaration": {
            "name": "SampleCardContentComponent",
            "module": "src/components/reusable/card/card.content.sample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/card/card.sample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Sample Lit component to show card pattern.",
          "name": "SampleCardComponent",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sample-card-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampleCardComponent",
          "declaration": {
            "name": "SampleCardComponent",
            "module": "src/components/reusable/card/card.sample.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sample-card-component",
          "declaration": {
            "name": "SampleCardComponent",
            "module": "src/components/reusable/card/card.sample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/card/card.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "DEPRECATED. `kyn-card` Web Component.\r\nThis is deprecated and moved to Foundation.",
          "name": "Card",
          "slots": [
            {
              "description": "Slot for card contents.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'normal'",
              "description": "Card Type. `'normal'` & `'clickable'`",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Card link url for clickable cards.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Use for Card type `'clickable'`. Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship.",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "string"
              },
              "default": "'_self'",
              "description": "Defines a target attribute for where to load the URL in case of clickable card. Possible options include \"_self\" (deafult), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "hideBorder",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide card border. Useful when clickable card use inside `<kyn-notification>` component.",
              "attribute": "hideBorder"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event of clickable card and emits the original event details. Use `e.stopPropogation()` / `e.preventDefault()` for any internal clickable elements when card type is `'clickable'` to stop bubbling / prevent event.",
              "name": "on-card-click"
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'normal'",
              "description": "Card Type. `'normal'` & `'clickable'`",
              "fieldName": "type"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Card link url for clickable cards.",
              "fieldName": "href"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Use for Card type `'clickable'`. Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship.",
              "fieldName": "rel"
            },
            {
              "name": "target",
              "type": {
                "text": "string"
              },
              "default": "'_self'",
              "description": "Defines a target attribute for where to load the URL in case of clickable card. Possible options include \"_self\" (deafult), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "hideBorder",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide card border. Useful when clickable card use inside `<kyn-notification>` component.",
              "fieldName": "hideBorder"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-card",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Card",
          "declaration": {
            "name": "Card",
            "module": "src/components/reusable/card/card.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-card",
          "declaration": {
            "name": "Card",
            "module": "src/components/reusable/card/card.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/card/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Card",
          "declaration": {
            "name": "Card",
            "module": "./card"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkbox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox.",
          "name": "Checkbox",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state, inherited from the parent group.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the label should be hidden from visual view but remain accessible\r\nto screen readers for accessibility purposes.",
              "attribute": "visiblyHidden"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "attribute": "indeterminate"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-checkbox-change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox value.",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state, inherited from the parent group.",
              "fieldName": "disabled"
            },
            {
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the label should be hidden from visual view but remain accessible\r\nto screen readers for accessibility purposes.",
              "fieldName": "visiblyHidden"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "fieldName": "indeterminate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/components/reusable/checkbox/checkbox.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/components/reusable/checkbox/checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkboxGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox group container.",
          "name": "CheckboxGroup",
          "slots": [
            {
              "description": "Slot for individual checkboxes.",
              "name": "unnamed"
            },
            {
              "description": "Slot for label text.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox input name attribute.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Array<any>"
              },
              "default": "[]",
              "description": "Checkbox group selected values.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes a single selection required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "horizontal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group horizontal style.",
              "attribute": "horizontal"
            },
            {
              "kind": "field",
              "name": "selectAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a \"Select All\" checkbox to the top of the group.",
              "attribute": "selectAll"
            },
            {
              "kind": "field",
              "name": "hideLegend",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the group legend/label visually.",
              "attribute": "hideLegend"
            },
            {
              "kind": "field",
              "name": "filterable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a search input to enable filtering of checkboxes.",
              "attribute": "filterable"
            },
            {
              "kind": "field",
              "name": "limitCheckboxes",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Limits visible checkboxes behind a \"Show all\" button.",
              "attribute": "limitCheckboxes"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    selectAll: 'Select all',\r\n    showMore: 'Show more',\r\n    showLess: 'Show less',\r\n    search: 'Search',\r\n  }",
              "description": "Text string customization.",
              "attribute": "textStrings"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox group invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "checkboxes",
              "type": {
                "text": "Array<any>"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "filteredCheckboxes",
              "type": {
                "text": "Array<any>"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCheckboxChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitChangeEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFilter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_toggleRevealed",
              "privacy": "private",
              "parameters": [
                {
                  "name": "revealed",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleInvalid",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleSubgroupChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected values.",
              "name": "on-checkbox-group-change"
            },
            {
              "description": "Captures the search input event and emits the search term.",
              "name": "on-search"
            },
            {
              "description": "Captures the show more/less click and emits the expanded state.",
              "name": "on-limit-toggle"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox input name attribute.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "Array<any>"
              },
              "default": "[]",
              "description": "Checkbox group selected values.",
              "fieldName": "value"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes a single selection required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "horizontal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group horizontal style.",
              "fieldName": "horizontal"
            },
            {
              "name": "selectAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a \"Select All\" checkbox to the top of the group.",
              "fieldName": "selectAll"
            },
            {
              "name": "hideLegend",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the group legend/label visually.",
              "fieldName": "hideLegend"
            },
            {
              "name": "filterable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a search input to enable filtering of checkboxes.",
              "fieldName": "filterable"
            },
            {
              "name": "limitCheckboxes",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Limits visible checkboxes behind a \"Show all\" button.",
              "fieldName": "limitCheckboxes"
            },
            {
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    selectAll: 'Select all',\r\n    showMore: 'Show more',\r\n    showLess: 'Show less',\r\n    search: 'Search',\r\n  }",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox group invalid text.",
              "fieldName": "invalidText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/components/reusable/checkbox/checkboxGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox-group",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/components/reusable/checkbox/checkboxGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkboxSubgroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox subgroup",
          "name": "CheckboxSubgroup",
          "slots": [
            {
              "description": "Slot for child kyn-checkboxes.",
              "name": "unnamed"
            },
            {
              "description": "Slot for parent kyn-checkbox.",
              "name": "parent"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "_handleSlotchange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_syncParent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCheckboxChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox-subgroup",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckboxSubgroup",
          "declaration": {
            "name": "CheckboxSubgroup",
            "module": "src/components/reusable/checkbox/checkboxSubgroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox-subgroup",
          "declaration": {
            "name": "CheckboxSubgroup",
            "module": "src/components/reusable/checkbox/checkboxSubgroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "./checkbox"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "./checkboxGroup"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxSubgroup",
          "declaration": {
            "name": "CheckboxSubgroup",
            "module": "./checkboxSubgroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/datePicker/datepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Datepicker.",
          "name": "DatePicker",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Datepicker size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker value in YYYY-MM-DD or YYYY-MM-DDThh:mm format.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the date required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Date disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date warning text",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "maxDate",
              "type": {
                "text": "string"
              },
              "description": "Maximum date in YYYY-MM-DD or YYYY-MM-DDThh:mm format. If the value isn't a possible date string in the format, then the element has no maximum date value",
              "attribute": "maxDate"
            },
            {
              "kind": "field",
              "name": "minDate",
              "type": {
                "text": "string"
              },
              "description": "Mimimum date in YYYY-MM-DD or YYYY-MM-DDThh:mm format. If the value isn't a possible date string in the format, then the element has no minimum date value.",
              "attribute": "minDate"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "string"
              },
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\r\nFor date inputs, the value of step is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the step value.\r\nThe default value of step is 1, indicating 1 day.",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "datePickerType",
              "type": {
                "text": "DATE_PICKER_TYPES"
              },
              "description": "Date picker types. Default 'single'",
              "attribute": "datePickerType"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInvalid",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Datepicker size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker value in YYYY-MM-DD or YYYY-MM-DDThh:mm format.",
              "fieldName": "value"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the date required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Date disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date warning text",
              "fieldName": "warnText"
            },
            {
              "name": "maxDate",
              "type": {
                "text": "string"
              },
              "description": "Maximum date in YYYY-MM-DD or YYYY-MM-DDThh:mm format. If the value isn't a possible date string in the format, then the element has no maximum date value",
              "fieldName": "maxDate"
            },
            {
              "name": "minDate",
              "type": {
                "text": "string"
              },
              "description": "Mimimum date in YYYY-MM-DD or YYYY-MM-DDThh:mm format. If the value isn't a possible date string in the format, then the element has no minimum date value.",
              "fieldName": "minDate"
            },
            {
              "name": "step",
              "type": {
                "text": "string"
              },
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\r\nFor date inputs, the value of step is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the step value.\r\nThe default value of step is 1, indicating 1 day.",
              "fieldName": "step"
            },
            {
              "name": "datePickerType",
              "type": {
                "text": "DATE_PICKER_TYPES"
              },
              "description": "Date picker types. Default 'single'",
              "fieldName": "datePickerType"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-date-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "src/components/reusable/datePicker/datepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-date-picker",
          "declaration": {
            "name": "DatePicker",
            "module": "src/components/reusable/datePicker/datepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/datePicker/defs.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "regexDateFormat",
          "default": "/^\\d{4}-\\d{2}-\\d{2}$/"
        },
        {
          "kind": "variable",
          "name": "regexDateTimeFormat",
          "default": "/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/"
        },
        {
          "kind": "variable",
          "name": "regexDateTimeFormatSec",
          "default": "/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "regexDateFormat",
          "declaration": {
            "name": "regexDateFormat",
            "module": "src/components/reusable/datePicker/defs.ts"
          }
        },
        {
          "kind": "js",
          "name": "regexDateTimeFormat",
          "declaration": {
            "name": "regexDateTimeFormat",
            "module": "src/components/reusable/datePicker/defs.ts"
          }
        },
        {
          "kind": "js",
          "name": "regexDateTimeFormatSec",
          "declaration": {
            "name": "regexDateTimeFormatSec",
            "module": "src/components/reusable/datePicker/defs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/datePicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "./datepicker"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/daterangepicker/daterangepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Date-Range picker",
          "name": "DateRangePicker",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Datepicker size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "startDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker Start date in YYYY-MM-DD format.",
              "attribute": "startDate"
            },
            {
              "kind": "field",
              "name": "endDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker End date in YYYY-MM-DD format.",
              "attribute": "endDate"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker name. Required prop. as there could many fields into single form",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the date required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Date disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "datePickerType",
              "type": {
                "text": "DATE_PICKER_TYPES"
              },
              "description": "Date range picker types. Default 'single'",
              "attribute": "datePickerType"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date warning text",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "maxDate",
              "type": {
                "text": "string"
              },
              "description": "Maximum date in YYYY-MM-DD format. If the value isn't a possible date string in the format, then the element has no maximum date value.",
              "attribute": "maxDate"
            },
            {
              "kind": "field",
              "name": "minDate",
              "type": {
                "text": "string"
              },
              "description": "Mimimum date in YYYY-MM-DD format. If the value isn't a possible date string in the format, then the element has no minimum date value.",
              "attribute": "minDate"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "string"
              },
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\r\nFor date inputs, the value of step is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the step value.\r\nThe default value of step is 1, indicating 1 day.",
              "attribute": "step"
            },
            {
              "kind": "method",
              "name": "handleStartDate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleEndDate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInvalid",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected values and original event details. (Only if startDate <= endDate)",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Datepicker size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "startDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker Start date in YYYY-MM-DD format.",
              "fieldName": "startDate"
            },
            {
              "name": "endDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker End date in YYYY-MM-DD format.",
              "fieldName": "endDate"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Datepicker name. Required prop. as there could many fields into single form",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the date required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Date disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "datePickerType",
              "type": {
                "text": "DATE_PICKER_TYPES"
              },
              "description": "Date range picker types. Default 'single'",
              "fieldName": "datePickerType"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Date warning text",
              "fieldName": "warnText"
            },
            {
              "name": "maxDate",
              "type": {
                "text": "string"
              },
              "description": "Maximum date in YYYY-MM-DD format. If the value isn't a possible date string in the format, then the element has no maximum date value.",
              "fieldName": "maxDate"
            },
            {
              "name": "minDate",
              "type": {
                "text": "string"
              },
              "description": "Mimimum date in YYYY-MM-DD format. If the value isn't a possible date string in the format, then the element has no minimum date value.",
              "fieldName": "minDate"
            },
            {
              "name": "step",
              "type": {
                "text": "string"
              },
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\r\nFor date inputs, the value of step is given in days; and is treated as a number of milliseconds equal to 86,400,000 times the step value.\r\nThe default value of step is 1, indicating 1 day.",
              "fieldName": "step"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-date-range-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "src/components/reusable/daterangepicker/daterangepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-date-range-picker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "src/components/reusable/daterangepicker/daterangepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/daterangepicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "\"./daterangepicker\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/dropdown.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown, single select.",
          "name": "Dropdown",
          "slots": [
            {
              "description": "Slot for dropdown options.",
              "name": "unnamed"
            },
            {
              "description": "Slot for input label.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "updateByValue",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Update by value instead of deriving value from child selections.",
              "attribute": "updateByValue"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Dropdown size/height. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown inline style type.",
              "attribute": "inline"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Listbox/drawer open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "searchable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown searchable.",
              "attribute": "searchable"
            },
            {
              "kind": "field",
              "name": "filterSearch",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Searchable variant filters results.",
              "attribute": "filterSearch"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enabled multi-select functionality.",
              "attribute": "multiple"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "hideTags",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the tags below multi-select.",
              "attribute": "hideTags"
            },
            {
              "kind": "field",
              "name": "selectAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a \"Select all\" option to the top of a multi-select dropdown.",
              "attribute": "selectAll"
            },
            {
              "kind": "field",
              "name": "selectAllText",
              "type": {
                "text": "string"
              },
              "default": "'Select all'",
              "description": "\"Select all\" text customization.",
              "attribute": "selectAllText"
            },
            {
              "kind": "field",
              "name": "menuMinWidth",
              "type": {
                "text": "string"
              },
              "default": "'initial'",
              "description": "Menu CSS min-width value.",
              "attribute": "menuMinWidth"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "any"
              },
              "default": "''",
              "description": "Dropdown value(s).",
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "resetSelection",
              "privacy": "public",
              "description": "Retrieves the selected values from the list of child options and sets value property."
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleLabelClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleButtonKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "keyCode",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClearMultiple",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTagClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleButtonBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateSelectedOptions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInvalid",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "selected",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emitValue",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_emitSearch",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateOptions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-change"
            },
            {
              "description": "Capture the search input event and emits the search text.",
              "name": "on-search"
            },
            {
              "description": "Captures the the multi-select clear all button click event and emits the value.",
              "name": "on-clear-all"
            }
          ],
          "attributes": [
            {
              "name": "updateByValue",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Update by value instead of deriving value from child selections.",
              "fieldName": "updateByValue"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Dropdown size/height. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown inline style type.",
              "fieldName": "inline"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown name.",
              "fieldName": "name"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Listbox/drawer open state.",
              "fieldName": "open"
            },
            {
              "name": "searchable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown searchable.",
              "fieldName": "searchable"
            },
            {
              "name": "filterSearch",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Searchable variant filters results.",
              "fieldName": "filterSearch"
            },
            {
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enabled multi-select functionality.",
              "fieldName": "multiple"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "hideTags",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the tags below multi-select.",
              "fieldName": "hideTags"
            },
            {
              "name": "selectAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a \"Select all\" option to the top of a multi-select dropdown.",
              "fieldName": "selectAll"
            },
            {
              "name": "selectAllText",
              "type": {
                "text": "string"
              },
              "default": "'Select all'",
              "description": "\"Select all\" text customization.",
              "fieldName": "selectAllText"
            },
            {
              "name": "menuMinWidth",
              "type": {
                "text": "string"
              },
              "default": "'initial'",
              "description": "Menu CSS min-width value.",
              "fieldName": "menuMinWidth"
            },
            {
              "name": "value",
              "type": {
                "text": "any"
              },
              "default": "''",
              "description": "Dropdown value(s).",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-dropdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "src/components/reusable/dropdown/dropdown.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "src/components/reusable/dropdown/dropdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/dropdownCategory.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown category.",
          "name": "DropdownCategory",
          "slots": [
            {
              "description": "Slot for category title text.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-dropdown-category",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DropdownCategory",
          "declaration": {
            "name": "DropdownCategory",
            "module": "src/components/reusable/dropdown/dropdownCategory.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-dropdown-category",
          "declaration": {
            "name": "DropdownCategory",
            "module": "src/components/reusable/dropdown/dropdownCategory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/dropdownOption.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown option.",
          "name": "DropdownOption",
          "slots": [
            {
              "description": "Slot for option text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Option value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option selected state.",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "attribute": "indeterminate",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the option details to the parent dropdown.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Option value.",
              "fieldName": "value"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option selected state.",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "fieldName": "indeterminate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-dropdown-option",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DropdownOption",
          "declaration": {
            "name": "DropdownOption",
            "module": "src/components/reusable/dropdown/dropdownOption.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-dropdown-option",
          "declaration": {
            "name": "DropdownOption",
            "module": "src/components/reusable/dropdown/dropdownOption.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "./dropdown"
          }
        },
        {
          "kind": "js",
          "name": "DropdownOption",
          "declaration": {
            "name": "DropdownOption",
            "module": "./dropdownOption"
          }
        },
        {
          "kind": "js",
          "name": "DropdownCategory",
          "declaration": {
            "name": "DropdownCategory",
            "module": "./dropdownCategory"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/globalFilter/globalFilter.chart.sample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Sample Lit component to show global filter pattern applied to a Chart.",
          "name": "SampleFilterChartComponent",
          "members": [
            {
              "kind": "field",
              "name": "checkboxOptions",
              "type": {
                "text": "Array<any>"
              },
              "default": "[\r\n    {\r\n      value: 'Red',\r\n      text: 'Red',\r\n    },\r\n    {\r\n      value: 'Blue',\r\n      text: 'Blue',\r\n    },\r\n    {\r\n      value: 'Yellow',\r\n      text: 'Yellow',\r\n    },\r\n    {\r\n      value: 'Green',\r\n      text: 'Green',\r\n    },\r\n    {\r\n      value: 'Purple',\r\n      text: 'Purple',\r\n    },\r\n    {\r\n      value: 'Orange',\r\n      text: 'Orange',\r\n    },\r\n  ]",
              "description": "Array of sample checkbox filter options.",
              "attribute": "checkboxOptions"
            },
            {
              "kind": "field",
              "name": "chartLabels",
              "type": {
                "text": "Array<string>"
              },
              "default": "[\r\n    'Red',\r\n    'Blue',\r\n    'Yellow',\r\n    'Green',\r\n    'Purple',\r\n    'Orange',\r\n  ]",
              "attribute": "chartLabels"
            },
            {
              "kind": "field",
              "name": "filteredChartLabels",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "attribute": "filteredChartLabels"
            },
            {
              "kind": "field",
              "name": "chartDatasets",
              "type": {
                "text": "Array<any>"
              },
              "default": "[\r\n    {\r\n      label: 'Dataset 1',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      data: [8, 15, 7, 9, 6, 13],\r\n    },\r\n  ]",
              "attribute": "chartDatasets"
            },
            {
              "kind": "field",
              "name": "chartOptions",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          text: 'Color',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          text: 'Votes',\r\n        },\r\n      },\r\n    },\r\n  }",
              "attribute": "chartOptions"
            },
            {
              "kind": "method",
              "name": "_handleSearch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCheckboxes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleModalClose",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleTagClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "option",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClearTags",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_filter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "query",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "checkboxOptions",
              "type": {
                "text": "Array<any>"
              },
              "default": "[\r\n    {\r\n      value: 'Red',\r\n      text: 'Red',\r\n    },\r\n    {\r\n      value: 'Blue',\r\n      text: 'Blue',\r\n    },\r\n    {\r\n      value: 'Yellow',\r\n      text: 'Yellow',\r\n    },\r\n    {\r\n      value: 'Green',\r\n      text: 'Green',\r\n    },\r\n    {\r\n      value: 'Purple',\r\n      text: 'Purple',\r\n    },\r\n    {\r\n      value: 'Orange',\r\n      text: 'Orange',\r\n    },\r\n  ]",
              "description": "Array of sample checkbox filter options.",
              "fieldName": "checkboxOptions"
            },
            {
              "name": "chartLabels",
              "type": {
                "text": "Array<string>"
              },
              "default": "[\r\n    'Red',\r\n    'Blue',\r\n    'Yellow',\r\n    'Green',\r\n    'Purple',\r\n    'Orange',\r\n  ]",
              "fieldName": "chartLabels"
            },
            {
              "name": "filteredChartLabels",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "fieldName": "filteredChartLabels"
            },
            {
              "name": "chartDatasets",
              "type": {
                "text": "Array<any>"
              },
              "default": "[\r\n    {\r\n      label: 'Dataset 1',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      data: [8, 15, 7, 9, 6, 13],\r\n    },\r\n  ]",
              "fieldName": "chartDatasets"
            },
            {
              "name": "chartOptions",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          text: 'Color',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          text: 'Votes',\r\n        },\r\n      },\r\n    },\r\n  }",
              "fieldName": "chartOptions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sample-filter-chart-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampleFilterChartComponent",
          "declaration": {
            "name": "SampleFilterChartComponent",
            "module": "src/components/reusable/globalFilter/globalFilter.chart.sample.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sample-filter-chart-component",
          "declaration": {
            "name": "SampleFilterChartComponent",
            "module": "src/components/reusable/globalFilter/globalFilter.chart.sample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/globalFilter/globalFilter.sample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Sample Lit component to show global filter pattern.",
          "name": "SampleFilterComponent",
          "members": [
            {
              "kind": "field",
              "name": "checkboxOptions",
              "type": {
                "text": "Array<any>"
              },
              "default": "[\r\n    {\r\n      value: '1',\r\n      text: 'Option 1',\r\n    },\r\n    {\r\n      value: '2',\r\n      text: 'Option 2',\r\n    },\r\n    {\r\n      value: '3',\r\n      text: 'Option 3',\r\n    },\r\n    {\r\n      value: '4',\r\n      text: 'Option 4',\r\n    },\r\n    {\r\n      value: '5',\r\n      text: 'Option 5',\r\n    },\r\n    {\r\n      value: '6',\r\n      text: 'Option 6',\r\n    },\r\n  ]",
              "description": "Array of sample checkbox filter options.",
              "attribute": "checkboxOptions"
            },
            {
              "kind": "method",
              "name": "_handleSearch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCheckboxes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleModalClose",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleTagClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "option",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClearTags",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCustomAction",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleOverflowClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "checkboxOptions",
              "type": {
                "text": "Array<any>"
              },
              "default": "[\r\n    {\r\n      value: '1',\r\n      text: 'Option 1',\r\n    },\r\n    {\r\n      value: '2',\r\n      text: 'Option 2',\r\n    },\r\n    {\r\n      value: '3',\r\n      text: 'Option 3',\r\n    },\r\n    {\r\n      value: '4',\r\n      text: 'Option 4',\r\n    },\r\n    {\r\n      value: '5',\r\n      text: 'Option 5',\r\n    },\r\n    {\r\n      value: '6',\r\n      text: 'Option 6',\r\n    },\r\n  ]",
              "description": "Array of sample checkbox filter options.",
              "fieldName": "checkboxOptions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sample-filter-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampleFilterComponent",
          "declaration": {
            "name": "SampleFilterComponent",
            "module": "src/components/reusable/globalFilter/globalFilter.sample.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sample-filter-component",
          "declaration": {
            "name": "SampleFilterComponent",
            "module": "src/components/reusable/globalFilter/globalFilter.sample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/globalFilter/globalFilter.table.sample.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Sample Lit component to show global filter pattern applied to a Chart.",
          "name": "SampleFilterTableComponent",
          "members": [
            {
              "kind": "field",
              "name": "checkboxOptions",
              "type": {
                "text": "Array<any>"
              },
              "default": "[\r\n    {\r\n      value: 'Stark',\r\n      text: 'Stark',\r\n    },\r\n    {\r\n      value: 'Lannister',\r\n      text: 'Lannister',\r\n    },\r\n    {\r\n      value: 'Targaryen',\r\n      text: 'Targaryen',\r\n    },\r\n  ]",
              "description": "Array of sample checkbox filter options."
            },
            {
              "kind": "field",
              "name": "houses",
              "type": {
                "text": "Array<string>"
              },
              "default": "['Stark', 'Lannister', 'Targaryen']"
            },
            {
              "kind": "field",
              "name": "filteredHouses",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "characters",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "[\r\n    { name: 'Jon Snow', age: 23, house: 'Stark' },\r\n    { name: 'Daenerys Targaryen', age: 22, house: 'Targaryen' },\r\n    { name: 'Tyrion Lannister', age: 39, house: 'Lannister' },\r\n    { name: 'Cersei Lannister', age: 42, house: 'Lannister' },\r\n    { name: 'Arya Stark', age: 18, house: 'Stark' },\r\n    { name: 'Sansa Stark', age: 20, house: 'Stark' },\r\n    { name: 'Bran Stark', age: 17, house: 'Stark' },\r\n    { name: 'Jaime Lannister', age: 44, house: 'Lannister' },\r\n  ]"
            },
            {
              "kind": "field",
              "name": "characters_backup",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "[\r\n    { name: 'Jon Snow', age: 23, house: 'Stark' },\r\n    { name: 'Daenerys Targaryen', age: 22, house: 'Targaryen' },\r\n    { name: 'Tyrion Lannister', age: 39, house: 'Lannister' },\r\n    { name: 'Cersei Lannister', age: 42, house: 'Lannister' },\r\n    { name: 'Arya Stark', age: 18, house: 'Stark' },\r\n    { name: 'Sansa Stark', age: 20, house: 'Stark' },\r\n    { name: 'Bran Stark', age: 17, house: 'Stark' },\r\n    { name: 'Jaime Lannister', age: 44, house: 'Lannister' },\r\n  ]"
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "toggleMenu",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "textInput",
              "type": {
                "text": "any"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleSearch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCheckboxes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleModalClose",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleTagClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "option",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClearTags",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_filter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "query",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleOverflowClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_deleteSelectedRows",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleSelectedRowsChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCustomAction",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "sample-filter-table-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampleFilterTableComponent",
          "declaration": {
            "name": "SampleFilterTableComponent",
            "module": "src/components/reusable/globalFilter/globalFilter.table.sample.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "sample-filter-table-component",
          "declaration": {
            "name": "SampleFilterTableComponent",
            "module": "src/components/reusable/globalFilter/globalFilter.table.sample.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/globalFilter/globalFilter.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Global Filter bar.",
          "name": "GlobalFilter",
          "slots": [
            {
              "description": "Left slot, intended for search input and modal.",
              "name": "unnamed"
            },
            {
              "description": "Right slot, intended for action buttons and overflow menu.",
              "name": "actions"
            },
            {
              "description": "Slot below the filter bar, for tag group.",
              "name": "tags"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-global-filter",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlobalFilter",
          "declaration": {
            "name": "GlobalFilter",
            "module": "src/components/reusable/globalFilter/globalFilter.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-global-filter",
          "declaration": {
            "name": "GlobalFilter",
            "module": "src/components/reusable/globalFilter/globalFilter.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/globalFilter/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "GlobalFilter",
          "declaration": {
            "name": "GlobalFilter",
            "module": "./globalFilter"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/modal/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Modal",
          "declaration": {
            "name": "Modal",
            "module": "./modal"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/modal/modal.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Modal.",
          "name": "Modal",
          "slots": [
            {
              "description": "Slot for modal body content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the anchor button content.",
              "name": "anchor"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Modal open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'auto'",
              "description": "Modal size. `'auto'`, `'md'`, or `'lg'`.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title/heading text, required.",
              "attribute": "titleText"
            },
            {
              "kind": "field",
              "name": "labelText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text, optional.",
              "attribute": "labelText"
            },
            {
              "kind": "field",
              "name": "okText",
              "type": {
                "text": "string"
              },
              "default": "'OK'",
              "description": "OK button text.",
              "attribute": "okText"
            },
            {
              "kind": "field",
              "name": "cancelText",
              "type": {
                "text": "string"
              },
              "default": "'Cancel'",
              "description": "Cancel button text.",
              "attribute": "cancelText"
            },
            {
              "kind": "field",
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Changes the primary button styles to indicate the action is destructive.",
              "attribute": "destructive"
            },
            {
              "kind": "field",
              "name": "okDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the primary button.",
              "attribute": "okDisabled"
            },
            {
              "kind": "field",
              "name": "hideFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the footer/action buttons to create a passive modal.",
              "attribute": "hideFooter"
            },
            {
              "kind": "field",
              "name": "secondaryButtonText",
              "type": {
                "text": "string"
              },
              "default": "'Secondary'",
              "description": "Secondary button text.",
              "attribute": "secondaryButtonText"
            },
            {
              "kind": "field",
              "name": "showSecondaryButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the secondary button.",
              "attribute": "showSecondaryButton"
            },
            {
              "kind": "field",
              "name": "hideCancelButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the cancel button.",
              "attribute": "hideCancelButton"
            },
            {
              "kind": "field",
              "name": "beforeClose",
              "type": {
                "text": "Function"
              },
              "description": "Function to execute before the modal can close. Useful for running checks or validations before closing. Exposes `returnValue` (`'ok'` or `'cancel'`). Must return `true` or `false`."
            },
            {
              "kind": "method",
              "name": "_openModal",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_closeModal",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "returnValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitCloseEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the modal close event with `returnValue` (`'ok'` or `'cancel'`).",
              "name": "on-close"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Modal open state.",
              "fieldName": "open"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'auto'",
              "description": "Modal size. `'auto'`, `'md'`, or `'lg'`.",
              "fieldName": "size"
            },
            {
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title/heading text, required.",
              "fieldName": "titleText"
            },
            {
              "name": "labelText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text, optional.",
              "fieldName": "labelText"
            },
            {
              "name": "okText",
              "type": {
                "text": "string"
              },
              "default": "'OK'",
              "description": "OK button text.",
              "fieldName": "okText"
            },
            {
              "name": "cancelText",
              "type": {
                "text": "string"
              },
              "default": "'Cancel'",
              "description": "Cancel button text.",
              "fieldName": "cancelText"
            },
            {
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Changes the primary button styles to indicate the action is destructive.",
              "fieldName": "destructive"
            },
            {
              "name": "okDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the primary button.",
              "fieldName": "okDisabled"
            },
            {
              "name": "hideFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the footer/action buttons to create a passive modal.",
              "fieldName": "hideFooter"
            },
            {
              "name": "secondaryButtonText",
              "type": {
                "text": "string"
              },
              "default": "'Secondary'",
              "description": "Secondary button text.",
              "fieldName": "secondaryButtonText"
            },
            {
              "name": "showSecondaryButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the secondary button.",
              "fieldName": "showSecondaryButton"
            },
            {
              "name": "hideCancelButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the cancel button.",
              "fieldName": "hideCancelButton"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-modal",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Modal",
          "declaration": {
            "name": "Modal",
            "module": "src/components/reusable/modal/modal.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-modal",
          "declaration": {
            "name": "Modal",
            "module": "src/components/reusable/modal/modal.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/notification/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Notification",
          "declaration": {
            "name": "Notification",
            "module": "./notification"
          }
        },
        {
          "kind": "js",
          "name": "NotificationContainer",
          "declaration": {
            "name": "NotificationContainer",
            "module": "./notificationContainer"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/notification/notification.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Notification component.",
          "name": "Notification",
          "slots": [
            {
              "description": "Slot for notification message body.",
              "name": "unnamed"
            },
            {
              "description": "Slot for menu.",
              "name": "actions"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "notificationTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification Title (Required).",
              "attribute": "notificationTitle"
            },
            {
              "kind": "field",
              "name": "notificationSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification subtitle.(optional)",
              "attribute": "notificationSubtitle"
            },
            {
              "kind": "field",
              "name": "timeStamp",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Timestamp of notification.",
              "attribute": "timeStamp"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Card href link",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "tagStatus",
              "type": {
                "text": "string"
              },
              "default": "'default'",
              "description": "Notification status / tag type. `'default'`, `'info'`, `'warning'`, `'success'` & `'error'`.",
              "attribute": "tagStatus"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'normal'",
              "description": "Notification type. `'normal'`, `'inline'`, `'toast'` and `'clickable'`. Clickable type can be use inside notification panel",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "type": {
                "text": "any"
              },
              "default": "{\r\n    success: 'Success',\r\n    warning: 'Warning',\r\n    info: 'Info',\r\n    error: 'Error',\r\n  }",
              "description": "Customizable text strings.",
              "attribute": "textStrings"
            },
            {
              "kind": "field",
              "name": "unRead",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set notification mark read prop. Required ony for `type: 'clickable'`.",
              "attribute": "unRead",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hideCloseButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide close (x) button. Useful only for `type='toast'`. This required `timeout > 0` otherwise toast remain as it is when `hideCloseButton` is set true.",
              "attribute": "hideCloseButton"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "Timeout (Default 8 seconds for Toast). Specify an optional duration the toast notification should be closed in. Only apply with `type = 'toast'`",
              "attribute": "timeout"
            },
            {
              "kind": "method",
              "name": "renderInnerUI",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_close",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClose",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleCardClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emit event for clickable notification.",
              "name": "on-notification-click"
            },
            {
              "description": "Emits when an inline/toast notification closes.",
              "name": "on-close"
            }
          ],
          "attributes": [
            {
              "name": "notificationTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification Title (Required).",
              "fieldName": "notificationTitle"
            },
            {
              "name": "notificationSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification subtitle.(optional)",
              "fieldName": "notificationSubtitle"
            },
            {
              "name": "timeStamp",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Timestamp of notification.",
              "fieldName": "timeStamp"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Card href link",
              "fieldName": "href"
            },
            {
              "name": "tagStatus",
              "type": {
                "text": "string"
              },
              "default": "'default'",
              "description": "Notification status / tag type. `'default'`, `'info'`, `'warning'`, `'success'` & `'error'`.",
              "fieldName": "tagStatus"
            },
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'normal'",
              "description": "Notification type. `'normal'`, `'inline'`, `'toast'` and `'clickable'`. Clickable type can be use inside notification panel",
              "fieldName": "type"
            },
            {
              "name": "textStrings",
              "type": {
                "text": "any"
              },
              "default": "{\r\n    success: 'Success',\r\n    warning: 'Warning',\r\n    info: 'Info',\r\n    error: 'Error',\r\n  }",
              "description": "Customizable text strings.",
              "fieldName": "textStrings"
            },
            {
              "name": "unRead",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set notification mark read prop. Required ony for `type: 'clickable'`.",
              "fieldName": "unRead"
            },
            {
              "name": "hideCloseButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide close (x) button. Useful only for `type='toast'`. This required `timeout > 0` otherwise toast remain as it is when `hideCloseButton` is set true.",
              "fieldName": "hideCloseButton"
            },
            {
              "name": "timeout",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "Timeout (Default 8 seconds for Toast). Specify an optional duration the toast notification should be closed in. Only apply with `type = 'toast'`",
              "fieldName": "timeout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-notification",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Notification",
          "declaration": {
            "name": "Notification",
            "module": "src/components/reusable/notification/notification.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-notification",
          "declaration": {
            "name": "Notification",
            "module": "src/components/reusable/notification/notification.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/notification/notificationContainer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Notification container component for Toast notification.\r\nUsage is limited for <kyn-notification type=\"toast\">..</kyn-notification>",
          "name": "NotificationContainer",
          "slots": [
            {
              "description": "Slot for <kyn-notification type=\"toast\"> component.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-notification-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NotificationContainer",
          "declaration": {
            "name": "NotificationContainer",
            "module": "src/components/reusable/notification/notificationContainer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-notification-container",
          "declaration": {
            "name": "NotificationContainer",
            "module": "src/components/reusable/notification/notificationContainer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/overflowMenu/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "OverflowMenu",
          "declaration": {
            "name": "OverflowMenu",
            "module": "./overflowMenu"
          }
        },
        {
          "kind": "js",
          "name": "OverflowMenuItem",
          "declaration": {
            "name": "OverflowMenuItem",
            "module": "./overflowMenuItem"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/overflowMenu/overflowMenu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Overflow Menu.",
          "name": "OverflowMenu",
          "slots": [
            {
              "description": "Slot for overflow menu items.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Menu open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "anchorRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchors the menu to the right of the button.",
              "attribute": "anchorRight"
            },
            {
              "kind": "field",
              "name": "verticalDots",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "3 dots vertical orientation.",
              "attribute": "verticalDots"
            },
            {
              "kind": "field",
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Use fixed instead of absolute position. Useful when placed within elements with overflow scroll.",
              "attribute": "fixed"
            },
            {
              "kind": "field",
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "'Toggle Menu'",
              "description": "Button assistive text..",
              "attribute": "assistiveText"
            },
            {
              "kind": "field",
              "name": "_btnEl",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "_menuEl",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "_emitToggleEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "toggleMenu",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_positionMenu",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Capture the open/close event and emits the new state.",
              "name": "on-toggle"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Menu open state.",
              "fieldName": "open"
            },
            {
              "name": "anchorRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchors the menu to the right of the button.",
              "fieldName": "anchorRight"
            },
            {
              "name": "verticalDots",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "3 dots vertical orientation.",
              "fieldName": "verticalDots"
            },
            {
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Use fixed instead of absolute position. Useful when placed within elements with overflow scroll.",
              "fieldName": "fixed"
            },
            {
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "'Toggle Menu'",
              "description": "Button assistive text..",
              "fieldName": "assistiveText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-overflow-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverflowMenu",
          "declaration": {
            "name": "OverflowMenu",
            "module": "src/components/reusable/overflowMenu/overflowMenu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-overflow-menu",
          "declaration": {
            "name": "OverflowMenu",
            "module": "src/components/reusable/overflowMenu/overflowMenu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/overflowMenu/overflowMenuItem.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Overflow Menu.",
          "name": "OverflowMenuItem",
          "slots": [
            {
              "description": "Slot for item text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Makes the item a link.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds destructive styles.",
              "attribute": "destructive"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Item disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Makes the item a link.",
              "fieldName": "href"
            },
            {
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds destructive styles.",
              "fieldName": "destructive"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Item disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-overflow-menu-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverflowMenuItem",
          "declaration": {
            "name": "OverflowMenuItem",
            "module": "src/components/reusable/overflowMenu/overflowMenuItem.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-overflow-menu-item",
          "declaration": {
            "name": "OverflowMenuItem",
            "module": "src/components/reusable/overflowMenu/overflowMenuItem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagetitle/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PageTitle",
          "declaration": {
            "name": "PageTitle",
            "module": "./pageTitle"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagetitle/pageTitle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Page Title",
          "name": "PageTitle",
          "slots": [
            {
              "description": "Slot for icon. Use size 56 * 56 as per UX guidelines.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "headLine",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Headline text.",
              "attribute": "headLine"
            },
            {
              "kind": "field",
              "name": "pageTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Page title text (required).",
              "attribute": "pageTitle"
            },
            {
              "kind": "field",
              "name": "subTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Page subtitle text.",
              "attribute": "subTitle"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'primary'",
              "description": "Type of page title `'primary'` & `'secondary'`.",
              "attribute": "type"
            }
          ],
          "attributes": [
            {
              "name": "headLine",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Headline text.",
              "fieldName": "headLine"
            },
            {
              "name": "pageTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Page title text (required).",
              "fieldName": "pageTitle"
            },
            {
              "name": "subTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Page subtitle text.",
              "fieldName": "subTitle"
            },
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'primary'",
              "description": "Type of page title `'primary'` & `'secondary'`.",
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-page-title",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PageTitle",
          "declaration": {
            "name": "PageTitle",
            "module": "src/components/reusable/pagetitle/pageTitle.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-page-title",
          "declaration": {
            "name": "PageTitle",
            "module": "src/components/reusable/pagetitle/pageTitle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/constants.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "SHOWING_TEXT",
          "type": {
            "text": "string"
          },
          "default": "'Showing'"
        },
        {
          "kind": "variable",
          "name": "OF_TEXT",
          "type": {
            "text": "string"
          },
          "default": "'of'"
        },
        {
          "kind": "variable",
          "name": "ITEMS_TEXT",
          "type": {
            "text": "string"
          },
          "default": "'items'"
        },
        {
          "kind": "variable",
          "name": "PAGES_TEXT",
          "type": {
            "text": "string"
          },
          "default": "'pages'"
        },
        {
          "kind": "variable",
          "name": "PAGE_SIZE_LABEL",
          "type": {
            "text": "string"
          },
          "default": "'Items Per Page:'"
        },
        {
          "kind": "variable",
          "name": "BREAKPOINT",
          "type": {
            "text": "number"
          },
          "default": "768"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SHOWING_TEXT",
          "declaration": {
            "name": "SHOWING_TEXT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "OF_TEXT",
          "declaration": {
            "name": "OF_TEXT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "ITEMS_TEXT",
          "declaration": {
            "name": "ITEMS_TEXT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "PAGES_TEXT",
          "declaration": {
            "name": "PAGES_TEXT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "PAGE_SIZE_LABEL",
          "declaration": {
            "name": "PAGE_SIZE_LABEL",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "BREAKPOINT",
          "declaration": {
            "name": "BREAKPOINT",
            "module": "src/components/reusable/pagination/constants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "./Pagination"
          }
        },
        {
          "kind": "js",
          "name": "PaginationItemsRange",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "./pagination-items-range"
          }
        },
        {
          "kind": "js",
          "name": "PaginationPageSizeDropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "./pagination-page-size-dropdown"
          }
        },
        {
          "kind": "js",
          "name": "PaginationNavigationButtons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "./pagination-navigation-buttons"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-items-range.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-items-range` Web Component.\r\n\r\nThis component is responsible for displaying the range of items being displayed\r\nin the context of pagination. It shows which items (by number) are currently visible\r\nand the total number of items.",
          "name": "PaginationItemsRange",
          "members": [
            {
              "kind": "field",
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items.",
              "attribute": "count",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current page number being displayed.",
              "attribute": "pageNumber",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "attribute": "pageSize",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "itemsRangeText",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "isMobile",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items.",
              "fieldName": "count"
            },
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current page number being displayed.",
              "fieldName": "pageNumber"
            },
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "fieldName": "pageSize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-items-range",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationItemsRange",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "src/components/reusable/pagination/pagination-items-range.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-items-range",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "src/components/reusable/pagination/pagination-items-range.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-navigation-buttons.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-navigation-buttons` Web Component.\r\n\r\nThis component provides navigational controls for pagination.\r\nIt includes back and next buttons, along with displaying the current page and total pages.",
          "name": "PaginationNavigationButtons",
          "members": [
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "pageNumber",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "numberOfPages",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "SMALLEST_PAGE_NUMBER",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1"
            },
            {
              "kind": "method",
              "name": "handleButtonClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "next",
                  "type": {
                    "text": "boolean"
                  },
                  "description": "If true, will move to the next page, otherwise to the previous page"
                }
              ],
              "description": "Handles the button click event, either moving to the next page or previous page"
            }
          ],
          "events": [
            {
              "name": "on-page-number-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the page number is changed."
            }
          ],
          "attributes": [
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "pageNumber"
            },
            {
              "name": "numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "numberOfPages"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-navigation-buttons",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationNavigationButtons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "src/components/reusable/pagination/pagination-navigation-buttons.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-navigation-buttons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "src/components/reusable/pagination/pagination-navigation-buttons.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-page-size-dropdown.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-page-size-dropdown` Web Component.\r\n\r\nThis component provides a dropdown to select the page size for pagination.\r\nIt emits events when the selected page size changes.",
          "name": "PaginationPageSizeDropdown",
          "members": [
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Current page size.",
              "attribute": "pageSize",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSizeOptions",
              "type": {
                "text": "Array<number>"
              },
              "default": "[5, 10, 20, 30, 40, 50]",
              "description": "Available options for the page size.",
              "attribute": "pageSizeOptions"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The dropdown change event."
                }
              ],
              "description": "Handles the dropdown change event."
            }
          ],
          "events": [
            {
              "name": "on-page-size-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "The event fired when the page size changes."
            }
          ],
          "attributes": [
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Current page size.",
              "fieldName": "pageSize"
            },
            {
              "name": "pageSizeOptions",
              "type": {
                "text": "Array<number>"
              },
              "default": "[5, 10, 20, 30, 40, 50]",
              "description": "Available options for the page size.",
              "fieldName": "pageSizeOptions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-page-size-dropdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationPageSizeDropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "src/components/reusable/pagination/pagination-page-size-dropdown.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-page-size-dropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "src/components/reusable/pagination/pagination-page-size-dropdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/Pagination.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination` Web Component.\r\n\r\nA component that provides pagination functionality, enabling the user to\r\nnavigate through large datasets by splitting them into discrete chunks.\r\nIntegrates with other utility components like items range display, page size dropdown,\r\nand navigation buttons.",
          "name": "Pagination",
          "members": [
            {
              "kind": "field",
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items that need pagination.",
              "attribute": "count",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current active page number.",
              "attribute": "pageNumber",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "attribute": "pageSize",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSizeOptions",
              "type": {
                "text": "number[]"
              },
              "default": "[5, 10, 20, 30, 40, 50, 100]",
              "description": "Available options for the page size.",
              "attribute": "pageSizeOptions"
            },
            {
              "kind": "field",
              "name": "_numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Number of pages."
            },
            {
              "kind": "field",
              "name": "pageSizeLabel",
              "default": "PAGE_SIZE_LABEL",
              "description": "Label for the page size dropdown.",
              "attribute": "pageSizeLabel"
            },
            {
              "kind": "field",
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "attribute": "hideItemsRange"
            },
            {
              "kind": "field",
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "attribute": "hidePageSizeDropdown"
            },
            {
              "kind": "field",
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "attribute": "hideNavigationButtons"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    showing: 'Showing',\r\n    of: 'of',\r\n    items: 'items',\r\n    pages: 'pages',\r\n    itemsPerPage: 'Items per page:',\r\n    previousPage: 'Previous page',\r\n    nextPage: 'Next page',\r\n  }",
              "description": "Customizable text strings",
              "attribute": "textStrings"
            },
            {
              "kind": "method",
              "name": "handlePageSizeChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The emitted custom event with the selected page size."
                }
              ],
              "description": "Handler for the event when the page size is changed by the user.\r\nUpdates the `pageSize` and resets the `pageNumber` to 1."
            },
            {
              "kind": "method",
              "name": "handlePageNumberChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The emitted custom event with the selected page number."
                }
              ],
              "description": "Handler for the event when the page number is changed by the user.\r\nUpdates the `pageNumber`."
            }
          ],
          "events": [
            {
              "description": "Dispatched when the page size changes.",
              "name": "on-page-size-change"
            },
            {
              "description": "Dispatched when the currently active page changes.",
              "name": "on-page-number-change"
            }
          ],
          "attributes": [
            {
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items that need pagination.",
              "fieldName": "count"
            },
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current active page number.",
              "fieldName": "pageNumber"
            },
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "fieldName": "pageSize"
            },
            {
              "name": "pageSizeOptions",
              "type": {
                "text": "number[]"
              },
              "default": "[5, 10, 20, 30, 40, 50, 100]",
              "description": "Available options for the page size.",
              "fieldName": "pageSizeOptions"
            },
            {
              "name": "pageSizeLabel",
              "default": "PAGE_SIZE_LABEL",
              "description": "Label for the page size dropdown.",
              "fieldName": "pageSizeLabel"
            },
            {
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "fieldName": "hideItemsRange"
            },
            {
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "fieldName": "hidePageSizeDropdown"
            },
            {
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "fieldName": "hideNavigationButtons"
            },
            {
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    showing: 'Showing',\r\n    of: 'of',\r\n    items: 'items',\r\n    pages: 'pages',\r\n    itemsPerPage: 'Items per page:',\r\n    previousPage: 'Previous page',\r\n    nextPage: 'Next page',\r\n  }",
              "description": "Customizable text strings",
              "fieldName": "textStrings"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "src/components/reusable/pagination/Pagination.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination",
          "declaration": {
            "name": "Pagination",
            "module": "src/components/reusable/pagination/Pagination.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "./radioButton"
          }
        },
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "./radioButtonGroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/radioButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio button.",
          "name": "RadioButton",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button disabled state, inherited from the parent group.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-radio-change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button value.",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button disabled state, inherited from the parent group.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-radio-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "src/components/reusable/radioButton/radioButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-radio-button",
          "declaration": {
            "name": "RadioButton",
            "module": "src/components/reusable/radioButton/radioButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/radioButtonGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio button group container.",
          "name": "RadioButtonGroup",
          "slots": [
            {
              "description": "Slot for individual radio buttons.",
              "name": "unnamed"
            },
            {
              "description": "Slot for label text.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button input name attribute.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group selected value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "horizontal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group horizontal layout.",
              "attribute": "horizontal"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleRadioChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInvalid",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value.",
              "name": "on-radio-group-change"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button input name attribute.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group selected value.",
              "fieldName": "value"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "horizontal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group horizontal layout.",
              "fieldName": "horizontal"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group invalid text.",
              "fieldName": "invalidText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-radio-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "src/components/reusable/radioButton/radioButtonGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-radio-button-group",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "src/components/reusable/radioButton/radioButtonGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/search/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Search",
          "declaration": {
            "name": "Search",
            "module": "./search"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/search/search.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Search",
          "name": "Search",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'Search'",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expandable style search.",
              "attribute": "expandable"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input & button size.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "suggestions",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "description": "Auto-suggest array of strings that should match the current value. Update this array externally after on-input.",
              "attribute": "suggestions"
            },
            {
              "kind": "method",
              "name": "_buttonSizeMap",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleButtonClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSuggestionClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "suggestion",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "keyCode",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the value on text input/clear.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'Search'",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expandable style search.",
              "fieldName": "expandable"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input & button size.",
              "fieldName": "size"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "suggestions",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "description": "Auto-suggest array of strings that should match the current value. Update this array externally after on-input.",
              "fieldName": "suggestions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-search",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Search",
          "declaration": {
            "name": "Search",
            "module": "src/components/reusable/search/search.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-search",
          "declaration": {
            "name": "Search",
            "module": "src/components/reusable/search/search.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/sideDrawer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "SideDrawer",
          "declaration": {
            "name": "SideDrawer",
            "module": "./sideDrawer"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/sideDrawer/sideDrawer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Side Drawer.",
          "name": "SideDrawer",
          "slots": [
            {
              "description": "Slot for drawer body content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the anchor button content.",
              "name": "anchor"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Drawer open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Drawer size. `'md'`, or `'sm'`.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title / Heading text, required.",
              "attribute": "titleText"
            },
            {
              "kind": "field",
              "name": "labelText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text, optional.",
              "attribute": "labelText"
            },
            {
              "kind": "field",
              "name": "submitBtnText",
              "type": {
                "text": "string"
              },
              "default": "'Ok'",
              "description": "Submit button text.",
              "attribute": "submitBtnText"
            },
            {
              "kind": "field",
              "name": "cancelBtnText",
              "type": {
                "text": "string"
              },
              "default": "'Cancel'",
              "description": "Cancel button text.",
              "attribute": "cancelBtnText"
            },
            {
              "kind": "field",
              "name": "submitBtnDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the primary button.",
              "attribute": "submitBtnDisabled"
            },
            {
              "kind": "field",
              "name": "hideFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine whether needs footer",
              "attribute": "hideFooter"
            },
            {
              "kind": "field",
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Changes the primary button styles to indicate the action is destructive.",
              "attribute": "destructive"
            },
            {
              "kind": "field",
              "name": "secondaryButtonText",
              "type": {
                "text": "string"
              },
              "default": "'Secondary'",
              "description": "Secondary button text.",
              "attribute": "secondaryButtonText"
            },
            {
              "kind": "field",
              "name": "showSecondaryButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the secondary button.",
              "attribute": "showSecondaryButton"
            },
            {
              "kind": "field",
              "name": "hideCancelButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the cancel button.",
              "attribute": "hideCancelButton"
            },
            {
              "kind": "field",
              "name": "beforeClose",
              "type": {
                "text": "Function"
              },
              "description": "Function to execute before the Drawer can close. Useful for running checks or validations before closing. Exposes `returnValue` (`'ok'` or `'cancel'`). Must return `true` or `false`."
            },
            {
              "kind": "method",
              "name": "_openDrawer",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_closeDrawer",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "returnValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitCloseEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the drawer close event with `returnValue` (`'ok'` or `'cancel'`).",
              "name": "on-close"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Drawer open state.",
              "fieldName": "open"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Drawer size. `'md'`, or `'sm'`.",
              "fieldName": "size"
            },
            {
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title / Heading text, required.",
              "fieldName": "titleText"
            },
            {
              "name": "labelText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text, optional.",
              "fieldName": "labelText"
            },
            {
              "name": "submitBtnText",
              "type": {
                "text": "string"
              },
              "default": "'Ok'",
              "description": "Submit button text.",
              "fieldName": "submitBtnText"
            },
            {
              "name": "cancelBtnText",
              "type": {
                "text": "string"
              },
              "default": "'Cancel'",
              "description": "Cancel button text.",
              "fieldName": "cancelBtnText"
            },
            {
              "name": "submitBtnDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the primary button.",
              "fieldName": "submitBtnDisabled"
            },
            {
              "name": "hideFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine whether needs footer",
              "fieldName": "hideFooter"
            },
            {
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Changes the primary button styles to indicate the action is destructive.",
              "fieldName": "destructive"
            },
            {
              "name": "secondaryButtonText",
              "type": {
                "text": "string"
              },
              "default": "'Secondary'",
              "description": "Secondary button text.",
              "fieldName": "secondaryButtonText"
            },
            {
              "name": "showSecondaryButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the secondary button.",
              "fieldName": "showSecondaryButton"
            },
            {
              "name": "hideCancelButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the cancel button.",
              "fieldName": "hideCancelButton"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-side-drawer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SideDrawer",
          "declaration": {
            "name": "SideDrawer",
            "module": "src/components/reusable/sideDrawer/sideDrawer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-side-drawer",
          "declaration": {
            "name": "SideDrawer",
            "module": "src/components/reusable/sideDrawer/sideDrawer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/data-table.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "DEPRECATED. `kyn-data-table` Web Component.\r\nThis component provides a table with sorting, pagination, and selection capabilities.\r\nIt is designed to be used with the `kyn-table-toolbar` and `kyn-table-container` components.",
          "name": "DataTable",
          "members": [
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "any[]"
              },
              "default": "[]",
              "description": "rows: Array of objects representing each row in the data table.",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "columns",
              "type": {
                "text": "ColumnDefinition[]"
              },
              "default": "[]",
              "description": "columns: Array of objects defining column properties such as\r\nfield name, sorting function, etc.",
              "attribute": "columns"
            },
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\r\nselectable using checkboxes.",
              "attribute": "checkboxSelection"
            },
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "striped: Boolean indicating whether rows should have alternate\r\ncoloring.",
              "attribute": "striped"
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "default": "new Set<number>()",
              "description": "selectedRows: Set of row ids that are currently selected."
            },
            {
              "kind": "field",
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "stickyHeader: Boolean indicating whether the table header\r\nshould be sticky.",
              "attribute": "stickyHeader"
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\r\nin dense mode.",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "paginationModel",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    count: 0,\r\n    pageSize: 5,\r\n    pageNumber: 0,\r\n    pageSizeOptions: [5, 10],\r\n  }",
              "description": "paginationModel: Object holding pagination information such as\r\ncurrent page, page size, etc.",
              "attribute": "paginationModel"
            },
            {
              "kind": "field",
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "attribute": "hideItemsRange"
            },
            {
              "kind": "field",
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "attribute": "hidePageSizeDropdown"
            },
            {
              "kind": "field",
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "attribute": "hideNavigationButtons"
            },
            {
              "kind": "field",
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the table layout is fixed (true) or auto (false).",
              "attribute": "fixedLayout"
            },
            {
              "kind": "method",
              "name": "updateHeaderCheckbox",
              "description": "Updates the state of the header checkbox based on the number of\r\nselected rows."
            },
            {
              "kind": "method",
              "name": "handleRowSelectionChange",
              "parameters": [
                {
                  "name": "rowId",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "isChecked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Handles the change of selection state for a specific row."
            },
            {
              "kind": "method",
              "name": "toggleSelectionAll",
              "description": "Toggles the selection state of all rows in the table."
            },
            {
              "kind": "method",
              "name": "onPageSizeChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of page size in pagination."
            },
            {
              "kind": "method",
              "name": "onPageNumberChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of page number in pagination."
            }
          ],
          "events": [
            {
              "name": "on-selected-rows-changed",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the selected rows change."
            },
            {
              "name": "on-page-changed",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the page number or page size changes."
            },
            {
              "description": "Dispatched when the sort order changes.",
              "name": "on-sort-changed"
            }
          ],
          "attributes": [
            {
              "name": "rows",
              "type": {
                "text": "any[]"
              },
              "default": "[]",
              "description": "rows: Array of objects representing each row in the data table.",
              "fieldName": "rows"
            },
            {
              "name": "columns",
              "type": {
                "text": "ColumnDefinition[]"
              },
              "default": "[]",
              "description": "columns: Array of objects defining column properties such as\r\nfield name, sorting function, etc.",
              "fieldName": "columns"
            },
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\r\nselectable using checkboxes.",
              "fieldName": "checkboxSelection"
            },
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "striped: Boolean indicating whether rows should have alternate\r\ncoloring.",
              "fieldName": "striped"
            },
            {
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "stickyHeader: Boolean indicating whether the table header\r\nshould be sticky.",
              "fieldName": "stickyHeader"
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\r\nin dense mode.",
              "fieldName": "dense"
            },
            {
              "name": "paginationModel",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    count: 0,\r\n    pageSize: 5,\r\n    pageNumber: 0,\r\n    pageSizeOptions: [5, 10],\r\n  }",
              "description": "paginationModel: Object holding pagination information such as\r\ncurrent page, page size, etc.",
              "fieldName": "paginationModel"
            },
            {
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "fieldName": "hideItemsRange"
            },
            {
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "fieldName": "hidePageSizeDropdown"
            },
            {
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "fieldName": "hideNavigationButtons"
            },
            {
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the table layout is fixed (true) or auto (false).",
              "fieldName": "fixedLayout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-data-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataTable",
          "declaration": {
            "name": "DataTable",
            "module": "src/components/reusable/table/data-table.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-data-table",
          "declaration": {
            "name": "DataTable",
            "module": "src/components/reusable/table/data-table.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/defs.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Table",
          "declaration": {
            "name": "Table",
            "module": "./table"
          }
        },
        {
          "kind": "js",
          "name": "TableCell",
          "declaration": {
            "name": "TableCell",
            "module": "./table-cell"
          }
        },
        {
          "kind": "js",
          "name": "TableRow",
          "declaration": {
            "name": "TableRow",
            "module": "./table-row"
          }
        },
        {
          "kind": "js",
          "name": "TableBody",
          "declaration": {
            "name": "TableBody",
            "module": "./table-body"
          }
        },
        {
          "kind": "js",
          "name": "TableHead",
          "declaration": {
            "name": "TableHead",
            "module": "./table-head"
          }
        },
        {
          "kind": "js",
          "name": "TableHeader",
          "declaration": {
            "name": "TableHeader",
            "module": "./table-header"
          }
        },
        {
          "kind": "js",
          "name": "TableFoot",
          "declaration": {
            "name": "TableFoot",
            "module": "./table-foot"
          }
        },
        {
          "kind": "js",
          "name": "TableFooter",
          "declaration": {
            "name": "TableFooter",
            "module": "./table-footer"
          }
        },
        {
          "kind": "js",
          "name": "TableLegend",
          "declaration": {
            "name": "TableLegend",
            "module": "./table-legend"
          }
        },
        {
          "kind": "js",
          "name": "TableLegendItem",
          "declaration": {
            "name": "TableLegendItem",
            "module": "./table-legend-item"
          }
        },
        {
          "kind": "js",
          "name": "TableToolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "./table-toolbar"
          }
        },
        {
          "kind": "js",
          "name": "TableContainer",
          "declaration": {
            "name": "TableContainer",
            "module": "./table-container"
          }
        },
        {
          "kind": "js",
          "name": "TableHeaderRow",
          "declaration": {
            "name": "TableHeaderRow",
            "module": "./table-header-row"
          }
        },
        {
          "kind": "js",
          "name": "TableExpandedRow",
          "declaration": {
            "name": "TableExpandedRow",
            "module": "./table-expanded-row"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-body.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tbody` Web Component.\r\n\r\nRepresents the body section of Shidoka's design system tables. Designed to provide\r\na consistent look and feel, and can offer striped rows for enhanced readability.",
          "name": "TableBody",
          "slots": [
            {
              "description": "The content slot for adding rows (`<kyn-tr>`) within the table body.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the rows in the table body should be striped.",
              "attribute": "striped",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the row's striped property when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "on-rows-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the rows in the table body change."
            }
          ],
          "attributes": [
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the rows in the table body should be striped.",
              "fieldName": "striped"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tbody",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableBody",
          "declaration": {
            "name": "TableBody",
            "module": "src/components/reusable/table/table-body.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tbody",
          "declaration": {
            "name": "TableBody",
            "module": "src/components/reusable/table/table-body.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-cell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-td` Web Component.\r\n\r\nRepresents a table cell (data cell) within Shidoka's design system tables.\r\nAllows customization of alignment and can reflect the sort direction when\r\nused within sortable columns.",
          "name": "TableCell",
          "slots": [
            {
              "description": "The content slot for adding table data inside the cell.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "dense",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Determines the text alignment of the table cell's content.",
              "attribute": "align",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "width",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "maxWidth",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "minWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a minimum width for the cell;\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "minWidth",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the cell.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dim the cell.",
              "attribute": "dimmed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the cell's dense and ellipsis properties when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Determines the text alignment of the table cell's content.",
              "fieldName": "align"
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "width"
            },
            {
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "maxWidth"
            },
            {
              "name": "minWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a minimum width for the cell;\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "minWidth"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the cell.",
              "fieldName": "disabled"
            },
            {
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dim the cell.",
              "fieldName": "dimmed"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-td",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableCell",
          "declaration": {
            "name": "TableCell",
            "module": "src/components/reusable/table/table-cell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-td",
          "declaration": {
            "name": "TableCell",
            "module": "src/components/reusable/table/table-cell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table-container` Web Component.\r\n\r\nProvides a container for Shidoka's design system tables. It's designed to encapsulate\r\nand apply styles uniformly across the table elements.",
          "name": "TableContainer",
          "slots": [
            {
              "description": "The content slot for adding table and related elements.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "tabIndex",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableContainer",
          "declaration": {
            "name": "TableContainer",
            "module": "src/components/reusable/table/table-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-container",
          "declaration": {
            "name": "TableContainer",
            "module": "src/components/reusable/table/table-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tableContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tableContext",
          "declaration": {
            "name": "tableContext",
            "module": "src/components/reusable/table/table-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-expanded-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "\r\n`kyn-expanded-tr` Web Component.\r\n\r\nDesigned to display additional details for a row in a table.\r\nThe row is expandable and can be expanded/collapsed by toggling the plus/minus icons.",
          "name": "TableExpandedRow",
          "slots": [
            {
              "description": "The slot for adding content to the expandable details section.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "colSpan",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The number of columns that the expanded row should span.\r\nReflects the `colspan` attribute.",
              "attribute": "colspan"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "`true` if the table row should be expanded.",
              "attribute": "expanded",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "colspan",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The number of columns that the expanded row should span.\r\nReflects the `colspan` attribute.",
              "fieldName": "colSpan"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "`true` if the table row should be expanded.",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-expanded-tr",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableExpandedRow",
          "declaration": {
            "name": "TableExpandedRow",
            "module": "src/components/reusable/table/table-expanded-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-expanded-tr",
          "declaration": {
            "name": "TableExpandedRow",
            "module": "src/components/reusable/table/table-expanded-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-foot.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tfoot` Web Component.\r\n\r\nRepresents a custom table foot (`<tfoot>`) for Shidoka's design system tables.\r\nDesigned to contain and style table footer rows (`<tr>`) and footer cells (`<td>`).",
          "name": "TableFoot",
          "slots": [
            {
              "description": "The content slot for adding table foot rows.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tfoot",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableFoot",
          "declaration": {
            "name": "TableFoot",
            "module": "src/components/reusable/table/table-foot.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tfoot",
          "declaration": {
            "name": "TableFoot",
            "module": "src/components/reusable/table/table-foot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Table Footer\r\n\r\nIntended to contain Legend and Pagination.",
          "name": "TableFooter",
          "slots": [
            {
              "description": "Default slot.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-footer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableFooter",
          "declaration": {
            "name": "TableFooter",
            "module": "src/components/reusable/table/table-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-footer",
          "declaration": {
            "name": "TableFooter",
            "module": "src/components/reusable/table/table-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-head.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-thead` Web Component.\r\n\r\nRepresents a custom table head (`<thead>`) for Shidoka's design system tables.\r\nDesigned to contain and style table header rows (`<tr>`) and header cells (`<th>`).",
          "name": "TableHead",
          "slots": [
            {
              "description": "The content slot for adding table header rows (`<kyn-header-tr>`).",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "stickyHeader",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Update the stickyHeader property when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChildSort",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "stickyHeader"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-thead",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableHead",
          "declaration": {
            "name": "TableHead",
            "module": "src/components/reusable/table/table-head.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-thead",
          "declaration": {
            "name": "TableHead",
            "module": "src/components/reusable/table/table-head.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-header-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-header-tr` Web Component.\r\n\r\nThe `<kyn-header-tr>` component is designed to function as the\r\nheader row within a table that's part of Shidoka's design system.",
          "name": "TableHeaderRow",
          "members": [
            {
              "kind": "field",
              "name": "expandableColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "expandableColumnWidth: The width of the expandable column.",
              "attribute": "expandableColumnWidth"
            },
            {
              "kind": "field",
              "name": "multiSelectColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "multiSelectColumnWidth: The width of the multi-select column.",
              "attribute": "multiSelectColumnWidth"
            },
            {
              "kind": "method",
              "name": "handleToggleSelectionAll",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Toggles the selection state of all rows in the table."
            },
            {
              "kind": "method",
              "name": "updateHeaderCheckboxState",
              "parameters": [
                {
                  "name": "indeterminate",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Updates the state of the header checkbox based on the number of\r\nselected rows."
            },
            {
              "kind": "field",
              "name": "rowId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "rowId: String - Unique identifier for the row.",
              "attribute": "rowId",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "selected: Boolean indicating whether the row is selected.\r\nReflects the `selected` attribute.",
              "attribute": "selected",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\r\nselectable using checkboxes.",
              "attribute": "checkboxSelection",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\r\nin dense mode.",
              "attribute": "dense",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "unread",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Unread row state.",
              "attribute": "unread",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "locked: Boolean indicating whether the row is locked.\r\nIf a row is selected before it is locked, it remains selected even after being locked.\r\nA row can be selected and disabled/locked simultaneously.",
              "attribute": "locked",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expandable: Boolean indicating whether the row is expandable.",
              "attribute": "expandable",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expanded: Boolean indicating whether the row is expanded.",
              "attribute": "expanded",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disabled: Boolean indicating whether the row is disabled.\r\nA disabled row is not allowed to have any user interactions.\r\nA row can be selected and disabled/locked simultaneously.",
              "attribute": "disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "preventHighlight: Boolean indicating whether the row should not be highlighted.",
              "attribute": "preventHighlight",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dimmed: Boolean indicating whether the row is dimmed.\r\nA row should not be selected and dimmed simultaneously.",
              "attribute": "dimmed",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the cell's dense and ellipsis properties when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleRowSelectionChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of selection state for a specific row.",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleUserInitiatedToggleExpando",
              "parameters": [
                {
                  "name": "expanded",
                  "default": "!this.expanded"
                }
              ],
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleExpanding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            }
          ],
          "events": [
            {
              "name": "on-header-checkbox-toggle",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "on-row-select",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "table-row-expando-beingtoggled",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "table-row-expando-toggled",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "expandableColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "expandableColumnWidth: The width of the expandable column.",
              "fieldName": "expandableColumnWidth"
            },
            {
              "name": "multiSelectColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "multiSelectColumnWidth: The width of the multi-select column.",
              "fieldName": "multiSelectColumnWidth"
            },
            {
              "name": "rowId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "rowId: String - Unique identifier for the row.",
              "fieldName": "rowId",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "selected: Boolean indicating whether the row is selected.\r\nReflects the `selected` attribute.",
              "fieldName": "selected",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\r\nselectable using checkboxes.",
              "fieldName": "checkboxSelection",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\r\nin dense mode.",
              "fieldName": "dense",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "unread",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Unread row state.",
              "fieldName": "unread",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "locked: Boolean indicating whether the row is locked.\r\nIf a row is selected before it is locked, it remains selected even after being locked.\r\nA row can be selected and disabled/locked simultaneously.",
              "fieldName": "locked",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expandable: Boolean indicating whether the row is expandable.",
              "fieldName": "expandable",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expanded: Boolean indicating whether the row is expanded.",
              "fieldName": "expanded",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disabled: Boolean indicating whether the row is disabled.\r\nA disabled row is not allowed to have any user interactions.\r\nA row can be selected and disabled/locked simultaneously.",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "preventHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "preventHighlight: Boolean indicating whether the row should not be highlighted.",
              "fieldName": "preventHighlight",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dimmed: Boolean indicating whether the row is dimmed.\r\nA row should not be selected and dimmed simultaneously.",
              "fieldName": "dimmed",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            }
          ],
          "superclass": {
            "name": "TableRow",
            "module": "/src/components/reusable/table/table-row"
          },
          "tagName": "kyn-header-tr",
          "customElement": true,
          "slots": [
            {
              "description": "The content slot for adding table cells (`kyn-td` or other relevant cells).",
              "name": "unnamed",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableHeaderRow",
          "declaration": {
            "name": "TableHeaderRow",
            "module": "src/components/reusable/table/table-header-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-tr",
          "declaration": {
            "name": "TableHeaderRow",
            "module": "src/components/reusable/table/table-header-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-th` Web Component.\r\n\r\nRepresents a custom table header cell (`<th>`) for Shidoka's design system tables.\r\nProvides sorting functionality when enabled and allows alignment customization.",
          "name": "TableHeader",
          "slots": [
            {
              "description": "The content slot for adding header text or content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the cell should have a denser layout.",
              "attribute": "dense",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the cell's dense and ellipsis properties when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Specifies the alignment of the content within the table header.\r\nOptions: 'left', 'center', 'right'",
              "attribute": "align",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies if the column is sortable.\r\nIf set to true, an arrow icon will be displayed unpon hover,\r\nallowing the user to toggle sort directions.",
              "attribute": "sortable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              },
              "description": "Specifies the direction of sorting applied to the column.",
              "attribute": "sortDirection",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "headerLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The textual content associated with this component.\r\nRepresents the primary content or label that will be displayed.",
              "attribute": "headerLabel"
            },
            {
              "kind": "field",
              "name": "sortKey",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The unique identifier representing this column header.\r\nUsed to distinguish between different sortable columns and\r\nto ensure that only one column is sorted at a time.",
              "attribute": "sortKey"
            },
            {
              "kind": "field",
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the content should be hidden from visual view but remain accessible\r\nto screen readers for accessibility purposes. When set to `true`, the content\r\nwill not be visibly shown, but its content can still be read by screen readers.\r\nThis is especially useful for providing additional context or information to\r\nassistive technologies without cluttering the visual UI.",
              "attribute": "visiblyHidden"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "width",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "maxWidth",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "minWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a minimum width for the cell;\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "minWidth",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "resetSort",
              "description": "Resets the sorting direction of the component to its default state.\r\nUseful for initializing or clearing any applied sorting on the element."
            },
            {
              "kind": "method",
              "name": "toggleSortDirection",
              "privacy": "private",
              "description": "Toggles the sort direction between ascending, descending, and default states.\r\nIt also dispatches an event to notify parent components of the sorting change."
            },
            {
              "kind": "method",
              "name": "getTextContent"
            }
          ],
          "events": [
            {
              "name": "on-sort-changed",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the sort direction is changed."
            }
          ],
          "attributes": [
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the cell should have a denser layout.",
              "fieldName": "dense"
            },
            {
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Specifies the alignment of the content within the table header.\r\nOptions: 'left', 'center', 'right'",
              "fieldName": "align"
            },
            {
              "name": "sortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies if the column is sortable.\r\nIf set to true, an arrow icon will be displayed unpon hover,\r\nallowing the user to toggle sort directions.",
              "fieldName": "sortable"
            },
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              },
              "description": "Specifies the direction of sorting applied to the column.",
              "fieldName": "sortDirection"
            },
            {
              "name": "headerLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The textual content associated with this component.\r\nRepresents the primary content or label that will be displayed.",
              "fieldName": "headerLabel"
            },
            {
              "name": "sortKey",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The unique identifier representing this column header.\r\nUsed to distinguish between different sortable columns and\r\nto ensure that only one column is sorted at a time.",
              "fieldName": "sortKey"
            },
            {
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the content should be hidden from visual view but remain accessible\r\nto screen readers for accessibility purposes. When set to `true`, the content\r\nwill not be visibly shown, but its content can still be read by screen readers.\r\nThis is especially useful for providing additional context or information to\r\nassistive technologies without cluttering the visual UI.",
              "fieldName": "visiblyHidden"
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "width"
            },
            {
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "maxWidth"
            },
            {
              "name": "minWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a minimum width for the cell;\r\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "minWidth"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-th",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableHeader",
          "declaration": {
            "name": "TableHeader",
            "module": "src/components/reusable/table/table-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-th",
          "declaration": {
            "name": "TableHeader",
            "module": "src/components/reusable/table/table-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-legend-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Table Legend Item",
          "name": "TableLegendItem",
          "slots": [
            {
              "description": "Default slot for icon and text.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-legend-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableLegendItem",
          "declaration": {
            "name": "TableLegendItem",
            "module": "src/components/reusable/table/table-legend-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-legend-item",
          "declaration": {
            "name": "TableLegendItem",
            "module": "src/components/reusable/table/table-legend-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-legend.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Table Legend",
          "name": "TableLegend",
          "slots": [
            {
              "description": "Default slot for Legend Items.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-legend",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableLegend",
          "declaration": {
            "name": "TableLegend",
            "module": "src/components/reusable/table/table-legend.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-legend",
          "declaration": {
            "name": "TableLegend",
            "module": "src/components/reusable/table/table-legend.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tr` Web Component.\r\n\r\nRepresents a table row (`<tr>`) equivalent for custom tables created with Shidoka's design system.\r\nIt primarily acts as a container for individual table cells and behaves similarly to a native `<tr>` element.",
          "name": "TableRow",
          "slots": [
            {
              "description": "The content slot for adding table cells (`kyn-td` or other relevant cells).",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rowId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "rowId: String - Unique identifier for the row.",
              "attribute": "rowId",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "selected: Boolean indicating whether the row is selected.\r\nReflects the `selected` attribute.",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\r\nselectable using checkboxes.",
              "attribute": "checkboxSelection",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\r\nin dense mode.",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "unread",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Unread row state.",
              "attribute": "unread"
            },
            {
              "kind": "field",
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "locked: Boolean indicating whether the row is locked.\r\nIf a row is selected before it is locked, it remains selected even after being locked.\r\nA row can be selected and disabled/locked simultaneously.",
              "attribute": "locked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expandable: Boolean indicating whether the row is expandable.",
              "attribute": "expandable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expanded: Boolean indicating whether the row is expanded.",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disabled: Boolean indicating whether the row is disabled.\r\nA disabled row is not allowed to have any user interactions.\r\nA row can be selected and disabled/locked simultaneously.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "preventHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "preventHighlight: Boolean indicating whether the row should not be highlighted.",
              "attribute": "preventHighlight",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dimmed: Boolean indicating whether the row is dimmed.\r\nA row should not be selected and dimmed simultaneously.",
              "attribute": "dimmed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the cell's dense and ellipsis properties when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRowSelectionChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of selection state for a specific row."
            },
            {
              "kind": "method",
              "name": "_handleUserInitiatedToggleExpando",
              "parameters": [
                {
                  "name": "expanded",
                  "default": "!this.expanded"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleExpanding",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "on-row-select",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "table-row-expando-beingtoggled",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "table-row-expando-toggled",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "rowId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "rowId: String - Unique identifier for the row.",
              "fieldName": "rowId"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "selected: Boolean indicating whether the row is selected.\r\nReflects the `selected` attribute.",
              "fieldName": "selected"
            },
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\r\nselectable using checkboxes.",
              "fieldName": "checkboxSelection"
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\r\nin dense mode.",
              "fieldName": "dense"
            },
            {
              "name": "unread",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Unread row state.",
              "fieldName": "unread"
            },
            {
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "locked: Boolean indicating whether the row is locked.\r\nIf a row is selected before it is locked, it remains selected even after being locked.\r\nA row can be selected and disabled/locked simultaneously.",
              "fieldName": "locked"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expandable: Boolean indicating whether the row is expandable.",
              "fieldName": "expandable"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expanded: Boolean indicating whether the row is expanded.",
              "fieldName": "expanded"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disabled: Boolean indicating whether the row is disabled.\r\nA disabled row is not allowed to have any user interactions.\r\nA row can be selected and disabled/locked simultaneously.",
              "fieldName": "disabled"
            },
            {
              "name": "preventHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "preventHighlight: Boolean indicating whether the row should not be highlighted.",
              "fieldName": "preventHighlight"
            },
            {
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dimmed: Boolean indicating whether the row is dimmed.\r\nA row should not be selected and dimmed simultaneously.",
              "fieldName": "dimmed"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tr",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableRow",
          "declaration": {
            "name": "TableRow",
            "module": "src/components/reusable/table/table-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tr",
          "declaration": {
            "name": "TableRow",
            "module": "src/components/reusable/table/table-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-toolbar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table-toolbar` Web Component.\r\n\r\nThis component provides a toolbar for tables, primarily featuring a title and additional content.\r\nThe title is rendered prominently, while the slot can be used for controls, buttons, or other interactive elements.",
          "name": "TableToolbar",
          "slots": [
            {
              "description": "The primary content slot for controls, buttons, or other toolbar content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The title for the toolbar",
              "attribute": "tableTitle"
            },
            {
              "kind": "field",
              "name": "tableSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The subtitle for the toolbar",
              "attribute": "tableSubtitle"
            }
          ],
          "attributes": [
            {
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The title for the toolbar",
              "fieldName": "tableTitle"
            },
            {
              "name": "tableSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The subtitle for the toolbar",
              "fieldName": "tableSubtitle"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-toolbar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableToolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "src/components/reusable/table/table-toolbar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-toolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "src/components/reusable/table/table-toolbar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table` Web Component.\r\nThis component provides a table with sorting, pagination, and selection capabilities.\r\nIt is designed to be used with the `kyn-table-toolbar` and `kyn-table-container` components.",
          "name": "Table",
          "members": [
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "description": "checkboxSelection: Boolean indicating whether rows should be\r\nselectable using checkboxes.",
              "default": "false",
              "attribute": "checkboxSelection"
            },
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "description": "striped: Boolean indicating whether rows should have alternate\r\ncoloring.",
              "default": "false",
              "attribute": "striped"
            },
            {
              "kind": "field",
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "description": "stickyHeader: Boolean indicating whether the table header\r\nshould be sticky.",
              "default": "false",
              "attribute": "stickyHeader"
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "description": "dense: Boolean indicating whether the table should be displayed\r\nin dense mode.",
              "default": "false",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "description": "fixedLayout: Boolean indicating whether the table should have a fixed layout.\r\nThis will set the table's layout to fixed, which means the table and column widths\r\nwill be determined by the width of the columns and not by the content of the cells.\r\nThis can be useful when you want to have a consistent column width across multiple tables.",
              "default": "false",
              "attribute": "fixedLayout"
            },
            {
              "kind": "method",
              "name": "_updateHeaderCheckbox",
              "privacy": "private",
              "description": "Updates the state of the header checkbox based on the number of\r\nselected rows."
            },
            {
              "kind": "method",
              "name": "_handleRowSelectionChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of selection state for a specific row."
            },
            {
              "kind": "method",
              "name": "_toggleSelectionAll",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Toggles the selection state of all rows in the table."
            },
            {
              "kind": "method",
              "name": "updateAfterExternalChanges",
              "privacy": "public",
              "description": "Resets the selection state of all rows in the table.\r\nThis method is called when the table is reset or cleared.",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "getSelectedRows",
              "privacy": "public",
              "description": "Returns the selected rows in the table.",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "_handleRowsChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The custom event containing the updated rows."
                }
              ],
              "description": "Handles the change of rows in the table body."
            },
            {
              "kind": "method",
              "name": "_updateSelectionStates",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "on-row-selection-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the selection state of a row is toggled."
            },
            {
              "name": "on-all-rows-selection-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the selection state of all rows is toggled."
            }
          ],
          "attributes": [
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "description": "checkboxSelection: Boolean indicating whether rows should be\r\nselectable using checkboxes.",
              "default": "false",
              "fieldName": "checkboxSelection"
            },
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "description": "striped: Boolean indicating whether rows should have alternate\r\ncoloring.",
              "default": "false",
              "fieldName": "striped"
            },
            {
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "description": "stickyHeader: Boolean indicating whether the table header\r\nshould be sticky.",
              "default": "false",
              "fieldName": "stickyHeader"
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "description": "dense: Boolean indicating whether the table should be displayed\r\nin dense mode.",
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "description": "fixedLayout: Boolean indicating whether the table should have a fixed layout.\r\nThis will set the table's layout to fixed, which means the table and column widths\r\nwill be determined by the width of the columns and not by the content of the cells.\r\nThis can be useful when you want to have a consistent column width across multiple tables.",
              "default": "false",
              "fieldName": "fixedLayout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Table",
          "declaration": {
            "name": "Table",
            "module": "src/components/reusable/table/table.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table",
          "declaration": {
            "name": "Table",
            "module": "src/components/reusable/table/table.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tabs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Tabs",
          "declaration": {
            "name": "Tabs",
            "module": "./tabs"
          }
        },
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "./tab"
          }
        },
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "./tabPanel"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tabs/tab.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tabs.",
          "name": "Tab",
          "slots": [
            {
              "description": "Slot for tab button text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Tab ID, required.",
              "attribute": "id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab selected state. Must match Tab Panel visible state.",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  },
                  "description": "The parameter \"e\" is an event object that represents the event that triggered the\r\nclick event handler."
                }
              ],
              "description": "Dispatches a custom event called 'tab-activated' with the original event and tabId as details,\r\nif the tab is not selected."
            }
          ],
          "attributes": [
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Tab ID, required.",
              "fieldName": "id"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab selected state. Must match Tab Panel visible state.",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tab",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "src/components/reusable/tabs/tab.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tab",
          "declaration": {
            "name": "Tab",
            "module": "src/components/reusable/tabs/tab.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tabs/tabPanel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tabs.",
          "name": "TabPanel",
          "slots": [
            {
              "description": "Slot for tab content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Matching Tab ID, required.",
              "attribute": "tabId"
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab Panel visible state.  Must match Tab selected state.",
              "attribute": "visible",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "noPadding",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Remove side padding (left/right) on tab panel.",
              "attribute": "noPadding"
            }
          ],
          "attributes": [
            {
              "name": "tabId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Matching Tab ID, required.",
              "fieldName": "tabId"
            },
            {
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab Panel visible state.  Must match Tab selected state.",
              "fieldName": "visible"
            },
            {
              "name": "noPadding",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Remove side padding (left/right) on tab panel.",
              "fieldName": "noPadding"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "src/components/reusable/tabs/tabPanel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tab-panel",
          "declaration": {
            "name": "TabPanel",
            "module": "src/components/reusable/tabs/tabPanel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tabs/tabs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tabs.",
          "name": "Tabs",
          "slots": [
            {
              "description": "Slot for kyn-tab-panel components.",
              "name": "unnamed"
            },
            {
              "description": "Slot for kyn-tab components.",
              "name": "tabs"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabStyle",
              "type": {
                "text": "string"
              },
              "default": "'contained'",
              "description": "Tab style. `'contained'` or `'line'`.",
              "attribute": "tabStyle"
            },
            {
              "kind": "field",
              "name": "tabSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tab buttons, `'sm'` or `'md'`. Icon size: 16px.",
              "attribute": "tabSize"
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Vertical orientation.",
              "attribute": "vertical"
            },
            {
              "kind": "method",
              "name": "_handleSlotChangeTabs",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  },
                  "description": "The parameter \"e\" is an event object that contains information about the event\r\nthat triggered the handleChange function."
                }
              ],
              "description": "Updates children and emits a change event based on the provided\r\nevent details when a child kyn-tab is clicked."
            },
            {
              "kind": "method",
              "name": "_updateChildrenSelection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "selectedTabId",
                  "type": {
                    "text": "string"
                  },
                  "description": "The selectedTabId parameter is a string that represents the ID of\r\nthe tab that is currently selected."
                }
              ],
              "description": "Updates the selected property of tabs and the visible property of tab panels based on\r\nthe selected tab ID."
            },
            {
              "kind": "method",
              "name": "_emitChangeEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "origEvent",
                  "type": {
                    "text": "any"
                  },
                  "description": "The origEvent parameter is the original event object that triggered the\r\nchange event. It could be any type of event object, such as a click event or a keydown event."
                },
                {
                  "name": "selectedTabId",
                  "type": {
                    "text": "string"
                  },
                  "description": "The selectedTabId parameter is a string that represents the ID of\r\nthe selected tab."
                }
              ],
              "description": "Creates and dispatches a custom event called 'on-change' with the provided original event and\r\nselected tab ID as details."
            },
            {
              "kind": "method",
              "name": "_handleKeyboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  },
                  "description": "The parameter `e` is an event object that represents the keyboard event. It\r\ncontains information about the keyboard event, such as the key code of the pressed key."
                }
              ],
              "description": "Handles keyboard events for navigating between tabs.",
              "return": {
                "type": {
                  "text": ""
                }
              }
            }
          ],
          "events": [
            {
              "description": "Emits the new selected Tab ID when switching tabs.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "tabStyle",
              "type": {
                "text": "string"
              },
              "default": "'contained'",
              "description": "Tab style. `'contained'` or `'line'`.",
              "fieldName": "tabStyle"
            },
            {
              "name": "tabSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tab buttons, `'sm'` or `'md'`. Icon size: 16px.",
              "fieldName": "tabSize"
            },
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Vertical orientation.",
              "fieldName": "vertical"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tabs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tabs",
          "declaration": {
            "name": "Tabs",
            "module": "src/components/reusable/tabs/tabs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tabs",
          "declaration": {
            "name": "Tabs",
            "module": "src/components/reusable/tabs/tabs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tag/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Tag",
          "declaration": {
            "name": "Tag",
            "module": "./tag"
          }
        },
        {
          "kind": "js",
          "name": "TagGroup",
          "declaration": {
            "name": "TagGroup",
            "module": "./tagGroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tag/tag.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tag.",
          "name": "Tag",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Tag name (Required).",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "attribute": "tagSize"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specify if the Tag is disabled.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine if Tag state is filter.",
              "attribute": "filter"
            },
            {
              "kind": "field",
              "name": "noTruncation",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Removes label text truncation.",
              "attribute": "noTruncation"
            },
            {
              "kind": "field",
              "name": "shade",
              "type": {
                "text": "string"
              },
              "default": "'light'",
              "description": "Shade `'light'` (default) and `'dark'` for tag",
              "attribute": "shade"
            },
            {
              "kind": "field",
              "name": "tagColor",
              "type": {
                "text": "string"
              },
              "default": "'spruce'",
              "description": "Color variants. Default spruce",
              "attribute": "tagColor"
            },
            {
              "kind": "method",
              "name": "handleTagClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the close event and emits the Tag value. Works with filterable tags.",
              "name": "on-close"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Tag name (Required).",
              "fieldName": "label"
            },
            {
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "fieldName": "tagSize"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specify if the Tag is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine if Tag state is filter.",
              "fieldName": "filter"
            },
            {
              "name": "noTruncation",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Removes label text truncation.",
              "fieldName": "noTruncation"
            },
            {
              "name": "shade",
              "type": {
                "text": "string"
              },
              "default": "'light'",
              "description": "Shade `'light'` (default) and `'dark'` for tag",
              "fieldName": "shade"
            },
            {
              "name": "tagColor",
              "type": {
                "text": "string"
              },
              "default": "'spruce'",
              "description": "Color variants. Default spruce",
              "fieldName": "tagColor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tag",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tag",
          "declaration": {
            "name": "Tag",
            "module": "src/components/reusable/tag/tag.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tag",
          "declaration": {
            "name": "Tag",
            "module": "src/components/reusable/tag/tag.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tag/tagGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tag & Tag Group",
          "name": "TagGroup",
          "slots": [
            {
              "description": "Slot for individual tags.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    showAll: 'Show all',\r\n    showLess: 'Show less',\r\n  }",
              "description": "Text string customization.",
              "attribute": "textStrings"
            },
            {
              "kind": "field",
              "name": "limitTags",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Limits visible tags (5) behind a \"Show all\" button. Use only if having more than 5 tags.",
              "attribute": "limitTags"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tag group filter",
              "attribute": "filter"
            },
            {
              "kind": "field",
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "attribute": "tagSize"
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_toggleRevealed",
              "privacy": "private",
              "parameters": [
                {
                  "name": "revealed",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\r\n    showAll: 'Show all',\r\n    showLess: 'Show less',\r\n  }",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            },
            {
              "name": "limitTags",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Limits visible tags (5) behind a \"Show all\" button. Use only if having more than 5 tags.",
              "fieldName": "limitTags"
            },
            {
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tag group filter",
              "fieldName": "filter"
            },
            {
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "fieldName": "tagSize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tag-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TagGroup",
          "declaration": {
            "name": "TagGroup",
            "module": "src/components/reusable/tag/tagGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tag-group",
          "declaration": {
            "name": "TagGroup",
            "module": "src/components/reusable/tag/tagGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textArea/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "./textArea"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textArea/textArea.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Text area.",
          "name": "TextArea",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "description": "Maximum number of characters.",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "description": "Minimum number of characters.",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number"
              },
              "description": "textarea rows attribute. The number of visible text lines.",
              "attribute": "rows"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInvalid",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "description": "Maximum number of characters.",
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "description": "Minimum number of characters.",
              "fieldName": "minLength"
            },
            {
              "name": "rows",
              "type": {
                "text": "number"
              },
              "description": "textarea rows attribute. The number of visible text lines.",
              "fieldName": "rows"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-text-area",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "src/components/reusable/textArea/textArea.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-text-area",
          "declaration": {
            "name": "TextArea",
            "module": "src/components/reusable/textArea/textArea.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textInput/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "./textInput"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textInput/textInput.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Text input.",
          "name": "TextInput",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for contextual icon.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "description": "Input type, limited to options that are \"text like\".",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "description": "RegEx pattern to validate.",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "description": "Maximum number of characters.",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "description": "Minimum number of characters.",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "iconRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Place icon on the right.",
              "attribute": "iconRight"
            },
            {
              "kind": "field",
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "attribute": "hideLabel"
            },
            {
              "kind": "method",
              "name": "_handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClear",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_emitValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "determineIfSlotted",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInvalid",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "description": "Input type, limited to options that are \"text like\".",
              "fieldName": "type"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "description": "RegEx pattern to validate.",
              "fieldName": "pattern"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "description": "Maximum number of characters.",
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "description": "Minimum number of characters.",
              "fieldName": "minLength"
            },
            {
              "name": "iconRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Place icon on the right.",
              "fieldName": "iconRight"
            },
            {
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "fieldName": "hideLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-text-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "src/components/reusable/textInput/textInput.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-text-input",
          "declaration": {
            "name": "TextInput",
            "module": "src/components/reusable/textInput/textInput.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/timepicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TimePicker",
          "declaration": {
            "name": "TimePicker",
            "module": "./timepicker"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/timepicker/timepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Time picker.",
          "name": "TimePicker",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The value of the time input is always in 24-hour format that includes leading zeros: hh:mm,\r\nregardless of the input format, which is likely to be selected based on the user's locale (or by the user agent).\r\nIf the time includes seconds (by step attribute), the format is always hh:mm:ss",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input warn text.",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "maxTime",
              "type": {
                "text": "string"
              },
              "description": "Maximum Time hh:mm format.",
              "attribute": "maxTime"
            },
            {
              "kind": "field",
              "name": "minTime",
              "type": {
                "text": "string"
              },
              "description": "Minimum Time in hh:mm format.",
              "attribute": "minTime"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "string"
              },
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\r\nIt takes value that equates to the number of seconds you want to increment by;\r\nthe default (60 sec.). If you specify a value of less than 60 sec., the time input will show a seconds input area alongside the hours and minutes",
              "attribute": "step"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInvalid",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The value of the time input is always in 24-hour format that includes leading zeros: hh:mm,\r\nregardless of the input format, which is likely to be selected based on the user's locale (or by the user agent).\r\nIf the time includes seconds (by step attribute), the format is always hh:mm:ss",
              "fieldName": "value"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Time input warn text.",
              "fieldName": "warnText"
            },
            {
              "name": "maxTime",
              "type": {
                "text": "string"
              },
              "description": "Maximum Time hh:mm format.",
              "fieldName": "maxTime"
            },
            {
              "name": "minTime",
              "type": {
                "text": "string"
              },
              "description": "Minimum Time in hh:mm format.",
              "fieldName": "minTime"
            },
            {
              "name": "step",
              "type": {
                "text": "string"
              },
              "description": "Specifies the granularity that the value must adhere to, or the special value any,\r\nIt takes value that equates to the number of seconds you want to increment by;\r\nthe default (60 sec.). If you specify a value of less than 60 sec., the time input will show a seconds input area alongside the hours and minutes",
              "fieldName": "step"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-time-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimePicker",
          "declaration": {
            "name": "TimePicker",
            "module": "src/components/reusable/timepicker/timepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-time-picker",
          "declaration": {
            "name": "TimePicker",
            "module": "src/components/reusable/timepicker/timepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/toggleButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "./toggleButton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/toggleButton/toggleButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Toggle Button.",
          "name": "ToggleButton",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state.",
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "checkedText",
              "type": {
                "text": "string"
              },
              "default": "'On'",
              "description": "Checked state text.",
              "attribute": "checkedText"
            },
            {
              "kind": "field",
              "name": "uncheckedText",
              "type": {
                "text": "string"
              },
              "default": "'Off'",
              "description": "Unchecked state text.",
              "attribute": "uncheckedText"
            },
            {
              "kind": "field",
              "name": "small",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to use small size.",
              "attribute": "small"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "reverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Reverse UI element order, label on the left.",
              "attribute": "reverse"
            },
            {
              "kind": "field",
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the label visually.",
              "attribute": "hideLabel"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFormdata",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state.",
              "fieldName": "checked"
            },
            {
              "name": "checkedText",
              "type": {
                "text": "string"
              },
              "default": "'On'",
              "description": "Checked state text.",
              "fieldName": "checkedText"
            },
            {
              "name": "uncheckedText",
              "type": {
                "text": "string"
              },
              "default": "'Off'",
              "description": "Unchecked state text.",
              "fieldName": "uncheckedText"
            },
            {
              "name": "small",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to use small size.",
              "fieldName": "small"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "reverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Reverse UI element order, label on the left.",
              "fieldName": "reverse"
            },
            {
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the label visually.",
              "fieldName": "hideLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-toggle-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "src/components/reusable/toggleButton/toggleButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-toggle-button",
          "declaration": {
            "name": "ToggleButton",
            "module": "src/components/reusable/toggleButton/toggleButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tooltip/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Tooltip",
          "declaration": {
            "name": "Tooltip",
            "module": "./tooltip"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tooltip/tooltip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tooltip.",
          "name": "Tooltip",
          "slots": [
            {
              "description": "Slot for tooltip content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for custom anchor button content.",
              "name": "anchor"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "anchorPosition",
              "type": {
                "text": "string"
              },
              "default": "'center'",
              "description": "Tooltip anchor position. `'start'`, `'end'`, or `'center'`.",
              "attribute": "anchorPosition"
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "string"
              },
              "default": "'top'",
              "description": "Tooltip direction. `'top'`, `'bottom'`, `'left'`, or `'right'`.",
              "attribute": "direction"
            },
            {
              "kind": "field",
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "'Toggle Tooltip'",
              "description": "Assistive text for anchor button.",
              "attribute": "assistiveText"
            },
            {
              "kind": "method",
              "name": "_handleOpen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClose",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleMouseLeave",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleEsc",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitToggle",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits the open state of the tooltip on open/close.",
              "name": "on-tooltip-toggle"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            },
            {
              "name": "anchorPosition",
              "type": {
                "text": "string"
              },
              "default": "'center'",
              "description": "Tooltip anchor position. `'start'`, `'end'`, or `'center'`.",
              "fieldName": "anchorPosition"
            },
            {
              "name": "direction",
              "type": {
                "text": "string"
              },
              "default": "'top'",
              "description": "Tooltip direction. `'top'`, `'bottom'`, `'left'`, or `'right'`.",
              "fieldName": "direction"
            },
            {
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "'Toggle Tooltip'",
              "description": "Assistive text for anchor button.",
              "fieldName": "assistiveText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tooltip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tooltip",
          "declaration": {
            "name": "Tooltip",
            "module": "src/components/reusable/tooltip/tooltip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tooltip",
          "declaration": {
            "name": "Tooltip",
            "module": "src/components/reusable/tooltip/tooltip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Widget",
          "declaration": {
            "name": "Widget",
            "module": "./widget"
          }
        },
        {
          "kind": "js",
          "name": "WidgetDragHandle",
          "declaration": {
            "name": "WidgetDragHandle",
            "module": "./widgetDragHandle"
          }
        },
        {
          "kind": "js",
          "name": "WidgetGridstack",
          "declaration": {
            "name": "WidgetGridstack",
            "module": "./widgetGridstack"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/sample-layout.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/components/reusable/widget/sample-layout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/widget.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Widget.",
          "name": "Widget",
          "slots": [
            {
              "description": "Slot for widget content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for action buttons.",
              "name": "action"
            },
            {
              "description": "Slot for tooltip in header.",
              "name": "tooltip"
            },
            {
              "description": "Slot for drag handle.",
              "name": "draghandle"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "widgetTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Widget title.",
              "attribute": "widgetTitle"
            },
            {
              "kind": "field",
              "name": "subTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Widget sub-title.",
              "attribute": "subTitle"
            },
            {
              "kind": "field",
              "name": "dragActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Widget drag active state.",
              "attribute": "dragActive"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Widget disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "widgetTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Widget title.",
              "fieldName": "widgetTitle"
            },
            {
              "name": "subTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Widget sub-title.",
              "fieldName": "subTitle"
            },
            {
              "name": "dragActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Widget drag active state.",
              "fieldName": "dragActive"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Widget disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-widget",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Widget",
          "declaration": {
            "name": "Widget",
            "module": "src/components/reusable/widget/widget.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-widget",
          "declaration": {
            "name": "Widget",
            "module": "src/components/reusable/widget/widget.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/widgetDragHandle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Widget drag handle.",
          "name": "WidgetDragHandle",
          "members": [
            {
              "kind": "field",
              "name": "slot",
              "type": {
                "text": "string"
              },
              "default": "'draghandle'",
              "description": "Force widget slot",
              "attribute": "slot",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "slot",
              "type": {
                "text": "string"
              },
              "default": "'draghandle'",
              "description": "Force widget slot",
              "fieldName": "slot"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-widget-drag-handle",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "WidgetDragHandle",
          "declaration": {
            "name": "WidgetDragHandle",
            "module": "src/components/reusable/widget/widgetDragHandle.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-widget-drag-handle",
          "declaration": {
            "name": "WidgetDragHandle",
            "module": "src/components/reusable/widget/widgetDragHandle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/widgetGridstack.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "GridStack wrapper that includes Shidoka default config and styles.",
          "name": "WidgetGridstack",
          "slots": [
            {
              "description": "Slot for .grid-stack container element.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "any"
              },
              "default": "{}",
              "description": "GridStack layout/widget size/position definitions for each breakpoint.",
              "attribute": "layout"
            },
            {
              "kind": "field",
              "name": "gridstackConfig",
              "type": {
                "text": "any"
              },
              "default": "Config",
              "description": "GridStack config.",
              "attribute": "gridstackConfig"
            },
            {
              "kind": "field",
              "name": "gridStack",
              "type": {
                "text": "any"
              },
              "default": "GridStack",
              "description": "GridStack instance."
            },
            {
              "kind": "field",
              "name": "grid",
              "type": {
                "text": "any"
              },
              "description": "GridStack grid instance."
            },
            {
              "kind": "method",
              "name": "_saveLayout",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateLayout",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_setBreakpoint",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits after GridStack initializes.",
              "name": "on-grid-init"
            },
            {
              "description": "Emits the GridStack save() method results (new layout) on dragstop and resizestop.",
              "name": "on-grid-save"
            }
          ],
          "attributes": [
            {
              "name": "layout",
              "type": {
                "text": "any"
              },
              "default": "{}",
              "description": "GridStack layout/widget size/position definitions for each breakpoint.",
              "fieldName": "layout"
            },
            {
              "name": "gridstackConfig",
              "type": {
                "text": "any"
              },
              "default": "Config",
              "description": "GridStack config.",
              "fieldName": "gridstackConfig"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-widget-gridstack",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "WidgetGridstack",
          "declaration": {
            "name": "WidgetGridstack",
            "module": "src/components/reusable/widget/widgetGridstack.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-widget-gridstack",
          "declaration": {
            "name": "WidgetGridstack",
            "module": "src/components/reusable/widget/widgetGridstack.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/story-helpers/action-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ActionMenu",
          "members": [
            {
              "kind": "field",
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "opened"
            },
            {
              "kind": "field",
              "name": "handleDelete"
            },
            {
              "kind": "field",
              "name": "itemId",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "itemId"
            },
            {
              "kind": "method",
              "name": "toggleMenu"
            },
            {
              "kind": "field",
              "name": "deleteHandler"
            },
            {
              "kind": "field",
              "name": "actionHandler"
            },
            {
              "kind": "field",
              "name": "_handleToggle"
            }
          ],
          "attributes": [
            {
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "opened"
            },
            {
              "name": "itemId",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "itemId"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "action-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActionMenu",
          "declaration": {
            "name": "ActionMenu",
            "module": "src/components/reusable/table/story-helpers/action-menu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "action-menu",
          "declaration": {
            "name": "ActionMenu",
            "module": "src/components/reusable/table/story-helpers/action-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/story-helpers/batch-actions.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BatchActions",
          "members": [
            {
              "kind": "field",
              "name": "handleDelete"
            },
            {
              "kind": "field",
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "opened",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleClick"
            }
          ],
          "attributes": [
            {
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "opened"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "batch-actions",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BatchActions",
          "declaration": {
            "name": "BatchActions",
            "module": "src/components/reusable/table/story-helpers/batch-actions.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "batch-actions",
          "declaration": {
            "name": "BatchActions",
            "module": "src/components/reusable/table/story-helpers/batch-actions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/story-helpers/column-setting.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "StoryColumSetting",
          "members": [
            {
              "kind": "field",
              "name": "rows",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "_rows",
              "type": {
                "text": "any"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "showOnlyHiddenCols",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "showOnlyVisibleCols",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "showingRows"
            },
            {
              "kind": "field",
              "name": "hoveredButtonId",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "buttonIcon",
              "default": "lockedIcon"
            },
            {
              "kind": "method",
              "name": "handleLockingRow",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "rowId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "locked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleShowHiddenColsChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleShowVisibleColsChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRowSelectionChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                },
                {
                  "name": "rowId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOver",
              "parameters": [
                {
                  "name": "rowId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOut"
            },
            {
              "kind": "method",
              "name": "getButtonIcon",
              "parameters": [
                {
                  "name": "rowId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getRows"
            }
          ],
          "attributes": [
            {
              "name": "rows",
              "fieldName": "rows"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "story-column-setting",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "story-column-setting",
          "declaration": {
            "name": "StoryColumSetting",
            "module": "src/components/reusable/table/story-helpers/column-setting.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/story-helpers/table-story.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyStoryTable",
          "members": [
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "any"
              },
              "default": "[]",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "selectedRows",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "attribute": "selectedRows"
            },
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "checkboxSelection",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "striped",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "stickyHeader",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "dense",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "fixedLayout",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selectedCount",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "selectedCount",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showTableActions",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "showTableActions",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "sortable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "'Table Title'",
              "attribute": "tableTitle",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tableSubtitle",
              "type": {
                "text": "string"
              },
              "default": "'Table Subtitle'",
              "attribute": "tableSubtitle",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showPagination",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "showPagination"
            },
            {
              "kind": "field",
              "name": "showLegend",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "showLegend"
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "attribute": "pageSize"
            },
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "pageNumber"
            },
            {
              "kind": "field",
              "name": "pageSizeOptions",
              "type": {
                "text": "array"
              },
              "default": "[5, 10]",
              "attribute": "pageSizeOptions"
            },
            {
              "kind": "field",
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "attribute": "hideItemsRange"
            },
            {
              "kind": "field",
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "attribute": "hidePageSizeDropdown"
            },
            {
              "kind": "field",
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "attribute": "hideNavigationButtons"
            },
            {
              "kind": "field",
              "name": "multiSelectColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "multiSelectColumnWidth: The width of the multi-select column.",
              "attribute": "multiSelectColumnWidth"
            },
            {
              "kind": "method",
              "name": "onPageSizeChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of page size in pagination."
            },
            {
              "kind": "method",
              "name": "onPageNumberChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of page number in pagination."
            },
            {
              "kind": "method",
              "name": "handleSortByIdNumber",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSortByAge",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSortByFName",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSortByLName",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSortByDate",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deleteAction",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deleteSelectedRows"
            },
            {
              "kind": "method",
              "name": "handleSelectedRowsChange",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "rows",
              "type": {
                "text": "any"
              },
              "default": "[]",
              "fieldName": "rows"
            },
            {
              "name": "selectedRows",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "fieldName": "selectedRows"
            },
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "checkboxSelection"
            },
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "striped"
            },
            {
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "stickyHeader"
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fixedLayout"
            },
            {
              "name": "selectedCount",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "selectedCount"
            },
            {
              "name": "showTableActions",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showTableActions"
            },
            {
              "name": "sortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "sortable"
            },
            {
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "'Table Title'",
              "fieldName": "tableTitle"
            },
            {
              "name": "tableSubtitle",
              "type": {
                "text": "string"
              },
              "default": "'Table Subtitle'",
              "fieldName": "tableSubtitle"
            },
            {
              "name": "showPagination",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showPagination"
            },
            {
              "name": "showLegend",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showLegend"
            },
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "fieldName": "pageSize"
            },
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "pageNumber"
            },
            {
              "name": "pageSizeOptions",
              "type": {
                "text": "array"
              },
              "default": "[5, 10]",
              "fieldName": "pageSizeOptions"
            },
            {
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "fieldName": "hideItemsRange"
            },
            {
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "fieldName": "hidePageSizeDropdown"
            },
            {
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "fieldName": "hideNavigationButtons"
            },
            {
              "name": "multiSelectColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "multiSelectColumnWidth: The width of the multi-select column.",
              "fieldName": "multiSelectColumnWidth"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "story-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "story-table",
          "declaration": {
            "name": "MyStoryTable",
            "module": "src/components/reusable/table/story-helpers/table-story.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/story-helpers/table.settings.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "StoryTableSettings",
          "members": [
            {
              "kind": "field",
              "name": "columnSetting",
              "type": {
                "text": "any"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "columns",
              "type": {
                "text": "any"
              },
              "default": "[\r\n    {\r\n      id: 'col1',\r\n      order: 1,\r\n      colName: 'COLUMN 1',\r\n      locked: true,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col2',\r\n      order: 2,\r\n      colName: 'COLUMN 2',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col3',\r\n      order: 3,\r\n      colName: 'COLUMN 3',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col4',\r\n      order: 4,\r\n      colName: 'COLUMN 4',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col5',\r\n      order: 5,\r\n      colName: 'COLUMN 5',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col6',\r\n      order: 6,\r\n      colName: 'COLUMN 6',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col7',\r\n      order: 7,\r\n      colName: 'COLUMN 7',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col8',\r\n      order: 8,\r\n      colName: 'COLUMN 8',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col9',\r\n      order: 9,\r\n      colName: 'COLUMN 9',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col10',\r\n      order: 10,\r\n      colName: 'COLUMN 10',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col11',\r\n      order: 11,\r\n      colName: 'COLUMN 11',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col12',\r\n      order: 12,\r\n      colName: 'COLUMN 12',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col13',\r\n      order: 13,\r\n      colName: 'COLUMN 13',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col14',\r\n      order: 14,\r\n      colName: 'COLUMN 14',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col15',\r\n      order: 15,\r\n      colName: 'COLUMN 15',\r\n      locked: false,\r\n      visible: true,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col16',\r\n      order: 16,\r\n      colName: 'COLUMN 16',\r\n      locked: false,\r\n      visible: false,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col17',\r\n      order: 17,\r\n      colName: 'COLUMN 17',\r\n      locked: false,\r\n      visible: false,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col18',\r\n      order: 18,\r\n      colName: 'COLUMN 18',\r\n      locked: false,\r\n      visible: false,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col19',\r\n      order: 19,\r\n      colName: 'COLUMN 19',\r\n      locked: false,\r\n      visible: false,\r\n      align: 'center',\r\n    },\r\n    {\r\n      id: 'col20',\r\n      order: 20,\r\n      colName: 'COLUMN 20',\r\n      locked: false,\r\n      visible: false,\r\n      align: 'center',\r\n    },\r\n  ]"
            },
            {
              "kind": "method",
              "name": "handleSettingsClick",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClose",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSearch",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "story-table-settings",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "story-table-settings",
          "declaration": {
            "name": "StoryTableSettings",
            "module": "src/components/reusable/table/story-helpers/table.settings.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/story-helpers/ultils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sortByFName",
          "parameters": [
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sortByLName",
          "parameters": [
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sortById",
          "parameters": [
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sortByAge",
          "parameters": [
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "sortByDate",
          "parameters": [
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "extractData",
          "parameters": [
            {
              "name": "dataTable",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "characters",
          "type": {
            "text": "array"
          },
          "default": "[\r\n  {\r\n    id: 1,\r\n    firstName: 'Jon',\r\n    lastName: 'Snow',\r\n    age: 23,\r\n    birthday: 'December 26',\r\n    fullname: 'Jon Snow',\r\n    gender: 'Male',\r\n    unread: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: 'Daenerys',\r\n    lastName: 'Targaryen',\r\n    age: 22,\r\n    birthday: 'April 23',\r\n    fullname: 'Daenerys Targaryen',\r\n    gender: 'Female',\r\n  },\r\n  {\r\n    id: 3,\r\n    firstName: 'Tyrion',\r\n    lastName: 'Lannister',\r\n    age: 39,\r\n    birthday: 'June 12',\r\n    fullname: 'Tyrion Lannister',\r\n    gender: 'Male',\r\n  },\r\n  {\r\n    id: 4,\r\n    firstName: 'Arya',\r\n    lastName: 'Stark',\r\n    age: 18,\r\n    birthday: 'February 15',\r\n    fullname: 'Arya Stark',\r\n    gender: 'Female',\r\n  },\r\n  {\r\n    id: 5,\r\n    firstName: 'Cersei',\r\n    lastName: 'Lannister',\r\n    age: 42,\r\n    birthday: 'November 30',\r\n    fullname: 'Cersei Lannister',\r\n    gender: 'Female',\r\n  },\r\n]"
        },
        {
          "kind": "variable",
          "name": "dataForColumns",
          "type": {
            "text": "array"
          },
          "default": "[\r\n  {\r\n    id: 'row1',\r\n    col1: 'Column 1',\r\n    col2: 'Column 2',\r\n    col3: 'Column 3',\r\n    col4: 'Column 4',\r\n    col5: 'Column 5',\r\n    col6: 'Column 6',\r\n    col7: 'Column 7',\r\n    col8: 'Column 8',\r\n    col9: 'Column 9',\r\n    col10: 'Column 10',\r\n    col11: 'Column 11',\r\n    col12: 'Column 12',\r\n    col13: 'Column 13',\r\n    col14: 'Column 14',\r\n    col15: 'Column 15',\r\n    col16: 'Column 16',\r\n    col17: 'Column 17',\r\n    col18: 'Column 18',\r\n    col19: 'Column 19',\r\n    col20: 'Column 20',\r\n  },\r\n  {\r\n    id: 'row2',\r\n    col1: 'Column 1',\r\n    col2: 'Column 2',\r\n    col3: 'Column 3',\r\n    col4: 'Column 4',\r\n    col5: 'Column 5',\r\n    col6: 'Column 6',\r\n    col7: 'Column 7',\r\n    col8: 'Column 8',\r\n    col9: 'Column 9',\r\n    col10: 'Column 10',\r\n    col11: 'Column 11',\r\n    col12: 'Column 12',\r\n    col13: 'Column 13',\r\n    col14: 'Column 14',\r\n    col15: 'Column 15',\r\n    col16: 'Column 16',\r\n    col17: 'Column 17',\r\n    col18: 'Column 18',\r\n    col19: 'Column 19',\r\n    col20: 'Column 20',\r\n  },\r\n  {\r\n    id: 'row3',\r\n    col1: 'Column 1',\r\n    col2: 'Column 2',\r\n    col3: 'Column 3',\r\n    col4: 'Column 4',\r\n    col5: 'Column 5',\r\n    col6: 'Column 6',\r\n    col7: 'Column 7',\r\n    col8: 'Column 8',\r\n    col9: 'Column 9',\r\n    col10: 'Column 10',\r\n    col11: 'Column 11',\r\n    col12: 'Column 12',\r\n    col13: 'Column 13',\r\n    col14: 'Column 14',\r\n    col15: 'Column 15',\r\n    col16: 'Column 16',\r\n    col17: 'Column 17',\r\n    col18: 'Column 18',\r\n    col19: 'Column 19',\r\n    col20: 'Column 20',\r\n  },\r\n  {\r\n    id: 'row4',\r\n    col1: 'Column 1',\r\n    col2: 'Column 2',\r\n    col3: 'Column 3',\r\n    col4: 'Column 4',\r\n    col5: 'Column 5',\r\n    col6: 'Column 6',\r\n    col7: 'Column 7',\r\n    col8: 'Column 8',\r\n    col9: 'Column 9',\r\n    col10: 'Column 10',\r\n    col11: 'Column 11',\r\n    col12: 'Column 12',\r\n    col13: 'Column 13',\r\n    col14: 'Column 14',\r\n    col15: 'Column 15',\r\n    col16: 'Column 16',\r\n    col17: 'Column 17',\r\n    col18: 'Column 18',\r\n    col19: 'Column 19',\r\n    col20: 'Column 20',\r\n  },\r\n  {\r\n    id: 'row5',\r\n    col1: 'Column 1',\r\n    col2: 'Column 2',\r\n    col3: 'Column 3',\r\n    col4: 'Column 4',\r\n    col5: 'Column 5',\r\n    col6: 'Column 6',\r\n    col7: 'Column 7',\r\n    col8: 'Column 8',\r\n    col9: 'Column 9',\r\n    col10: 'Column 10',\r\n    col11: 'Column 11',\r\n    col12: 'Column 12',\r\n    col13: 'Column 13',\r\n    col14: 'Column 14',\r\n    col15: 'Column 15',\r\n    col16: 'Column 16',\r\n    col17: 'Column 17',\r\n    col18: 'Column 18',\r\n    col19: 'Column 19',\r\n    col20: 'Column 20',\r\n  },\r\n]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sortByFName",
          "declaration": {
            "name": "sortByFName",
            "module": "src/components/reusable/table/story-helpers/ultils.ts"
          }
        },
        {
          "kind": "js",
          "name": "sortByLName",
          "declaration": {
            "name": "sortByLName",
            "module": "src/components/reusable/table/story-helpers/ultils.ts"
          }
        },
        {
          "kind": "js",
          "name": "sortById",
          "declaration": {
            "name": "sortById",
            "module": "src/components/reusable/table/story-helpers/ultils.ts"
          }
        },
        {
          "kind": "js",
          "name": "sortByAge",
          "declaration": {
            "name": "sortByAge",
            "module": "src/components/reusable/table/story-helpers/ultils.ts"
          }
        },
        {
          "kind": "js",
          "name": "sortByDate",
          "declaration": {
            "name": "sortByDate",
            "module": "src/components/reusable/table/story-helpers/ultils.ts"
          }
        },
        {
          "kind": "js",
          "name": "extractData",
          "declaration": {
            "name": "extractData",
            "module": "src/components/reusable/table/story-helpers/ultils.ts"
          }
        },
        {
          "kind": "js",
          "name": "characters",
          "declaration": {
            "name": "characters",
            "module": "src/components/reusable/table/story-helpers/ultils.ts"
          }
        },
        {
          "kind": "js",
          "name": "dataForColumns",
          "declaration": {
            "name": "dataForColumns",
            "module": "src/components/reusable/table/story-helpers/ultils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/sample/gridstack.newWidget.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "New Widget sample.",
          "name": "NewWidgetSample",
          "members": [
            {
              "kind": "method",
              "name": "_handleInit",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "new-widget-sample",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NewWidgetSample",
          "declaration": {
            "name": "NewWidgetSample",
            "module": "src/components/reusable/widget/sample/gridstack.newWidget.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "new-widget-sample",
          "declaration": {
            "name": "NewWidgetSample",
            "module": "src/components/reusable/widget/sample/gridstack.newWidget.ts"
          }
        }
      ]
    }
  ]
}
