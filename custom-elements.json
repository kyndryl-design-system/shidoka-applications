{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Header component.",
          "name": "Header",
          "slots": [
            {
              "description": "The default slot for all empty space right of the logo/title.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the logo, will overwrite the default logo.",
              "name": "logo"
            },
            {
              "description": "Slot left of the logo, intended for the header nav.",
              "name": "left"
            },
            {
              "description": "Slot between logo/title and right flyouts.",
              "name": "center"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the header logo link. Should target the application home page.",
              "attribute": "rootUrl"
            },
            {
              "kind": "field",
              "name": "appTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "App title text next to logo.  Hidden on smaller screens.",
              "attribute": "appTitle"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleRootLinkClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleNavToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleFlyoutsToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the menu toggle click event and emits the menu open state in the detail.",
              "name": "on-menu-toggle"
            },
            {
              "description": "Captures the logo link click event and emits the original event details.",
              "name": "on-root-link-click"
            }
          ],
          "attributes": [
            {
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the header logo link. Should target the application home page.",
              "fieldName": "rootUrl"
            },
            {
              "name": "appTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "App title text next to logo.  Hidden on smaller screens.",
              "fieldName": "appTitle"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "src/components/global/header/header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header",
          "declaration": {
            "name": "Header",
            "module": "src/components/global/header/header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerCategory.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header link category",
          "name": "HeaderCategory",
          "slots": [
            {
              "description": "Slot for links.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "heading"
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "heading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-category",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderCategory",
          "declaration": {
            "name": "HeaderCategory",
            "module": "src/components/global/header/headerCategory.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-category",
          "declaration": {
            "name": "HeaderCategory",
            "module": "src/components/global/header/headerCategory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerDivider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header divider",
          "name": "HeaderDivider",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-divider",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderDivider",
          "declaration": {
            "name": "HeaderDivider",
            "module": "src/components/global/header/headerDivider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-divider",
          "declaration": {
            "name": "HeaderDivider",
            "module": "src/components/global/header/headerDivider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerFlyout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for header flyout items.",
          "name": "HeaderFlyout",
          "slots": [
            {
              "description": "Slot for flyout menu content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for button/toggle content.",
              "name": "button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flyout open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "anchorLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchor flyout menu to the left edge of the button instead of the right edge.",
              "attribute": "anchorLeft"
            },
            {
              "kind": "field",
              "name": "hideArrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the arrow.",
              "attribute": "hideArrow"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Menu & button label.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "hideMenuLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the label at the top of the flyout menu.",
              "attribute": "hideMenuLabel"
            },
            {
              "kind": "field",
              "name": "hideButtonLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the label in the mobile button.",
              "attribute": "hideButtonLabel"
            },
            {
              "kind": "field",
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "DEPRECATED. Use `label` instead.\nButton assistive text, title + aria-label.",
              "attribute": "assistiveText"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Turns the button into a link.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "attribute": "backText"
            },
            {
              "kind": "method",
              "name": "_handleBack",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleOverlayClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flyout open state.",
              "fieldName": "open"
            },
            {
              "name": "anchorLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchor flyout menu to the left edge of the button instead of the right edge.",
              "fieldName": "anchorLeft"
            },
            {
              "name": "hideArrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the arrow.",
              "fieldName": "hideArrow"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Menu & button label.",
              "fieldName": "label"
            },
            {
              "name": "hideMenuLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the label at the top of the flyout menu.",
              "fieldName": "hideMenuLabel"
            },
            {
              "name": "hideButtonLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the label in the mobile button.",
              "fieldName": "hideButtonLabel"
            },
            {
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "DEPRECATED. Use `label` instead.\nButton assistive text, title + aria-label.",
              "fieldName": "assistiveText"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Turns the button into a link.",
              "fieldName": "href"
            },
            {
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "fieldName": "backText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-flyout",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "src/components/global/header/headerFlyout.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-flyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "src/components/global/header/headerFlyout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerFlyouts.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header-flyout components.",
          "name": "HeaderFlyouts",
          "slots": [
            {
              "description": "Slot for header-flyout components.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "open"
            },
            {
              "kind": "method",
              "name": "_toggleOpen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-flyouts",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "src/components/global/header/headerFlyouts.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-flyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "src/components/global/header/headerFlyouts.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for navigation links within the Header.",
          "name": "HeaderLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for sublinks (up to two levels).",
              "name": "links"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link active state, for example when URL path matches link href.",
              "attribute": "isActive"
            },
            {
              "kind": "field",
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "DEPRECATED. Adds a 1px shadow to the bottom of the link.",
              "attribute": "divider"
            },
            {
              "kind": "field",
              "name": "searchLabel",
              "type": {
                "text": "string"
              },
              "default": "'Search'",
              "description": "Label for sub-menu link search input, which is visible with > 5 sub-links.",
              "attribute": "searchLabel"
            },
            {
              "kind": "field",
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "attribute": "backText"
            },
            {
              "kind": "field",
              "name": "_searchTerm",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Text for mobile \"Back\" button."
            },
            {
              "kind": "method",
              "name": "_handleSearch",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_searchFilter",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleBack",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleLinksSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerLeave",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "determineLevel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_positionMenu",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link open state.",
              "fieldName": "open"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            },
            {
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link active state, for example when URL path matches link href.",
              "fieldName": "isActive"
            },
            {
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "DEPRECATED. Adds a 1px shadow to the bottom of the link.",
              "fieldName": "divider"
            },
            {
              "name": "searchLabel",
              "type": {
                "text": "string"
              },
              "default": "'Search'",
              "description": "Label for sub-menu link search input, which is visible with > 5 sub-links.",
              "fieldName": "searchLabel"
            },
            {
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "fieldName": "backText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "src/components/global/header/headerLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-link",
          "declaration": {
            "name": "HeaderLink",
            "module": "src/components/global/header/headerLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header navigation links.",
          "name": "HeaderNav",
          "slots": [
            {
              "description": "This element has a slot.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "slot",
              "type": {
                "text": "string"
              },
              "default": "'left'",
              "description": "Force correct slot",
              "attribute": "slot",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "_toggleMenuOpen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleOverlayClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "slot",
              "type": {
                "text": "string"
              },
              "default": "'left'",
              "description": "Force correct slot",
              "fieldName": "slot"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "src/components/global/header/headerNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-nav",
          "declaration": {
            "name": "HeaderNav",
            "module": "src/components/global/header/headerNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerNotificationPanel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for notification panel within the Header.",
          "name": "HeaderNotificationPanel",
          "slots": [
            {
              "description": "Slot for panel menu",
              "name": "menu-slot"
            },
            {
              "description": "Slot for notification content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "panelTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification panel Title.",
              "attribute": "panelTitle"
            },
            {
              "kind": "field",
              "name": "panelFooterBtnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification panel footer button text.",
              "attribute": "panelFooterBtnText"
            },
            {
              "kind": "field",
              "name": "hidePanelFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide notification panel footer",
              "attribute": "hidePanelFooter"
            },
            {
              "kind": "method",
              "name": "_handlefooterBtnEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the panel footer button event.",
              "name": "on-footer-btn-click"
            }
          ],
          "attributes": [
            {
              "name": "panelTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification panel Title.",
              "fieldName": "panelTitle"
            },
            {
              "name": "panelFooterBtnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification panel footer button text.",
              "fieldName": "panelFooterBtnText"
            },
            {
              "name": "hidePanelFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide notification panel footer",
              "fieldName": "hidePanelFooter"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-notification-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderNotificationPanel",
          "declaration": {
            "name": "HeaderNotificationPanel",
            "module": "src/components/global/header/headerNotificationPanel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-notification-panel",
          "declaration": {
            "name": "HeaderNotificationPanel",
            "module": "src/components/global/header/headerNotificationPanel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerPanelLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header fly-out panel link.",
          "name": "HeaderPanelLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-panel-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderPanelLink",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "src/components/global/header/headerPanelLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-panel-link",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "src/components/global/header/headerPanelLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerUserProfile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Header user profile.",
          "name": "HeaderUserProfile",
          "slots": [
            {
              "description": "Slot for the profile picture img.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "subtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's job title, or subtext.",
              "attribute": "subtitle"
            },
            {
              "kind": "field",
              "name": "email",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's email address.",
              "attribute": "email"
            },
            {
              "kind": "field",
              "name": "profileLink",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "View profile link URL.",
              "attribute": "profileLink"
            },
            {
              "kind": "field",
              "name": "profileLinkText",
              "type": {
                "text": "string"
              },
              "default": "'View Profile'",
              "description": "View Profile link text.",
              "attribute": "profileLinkText"
            },
            {
              "kind": "method",
              "name": "_handleProfileClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the view profile link click event and emits the original event details.",
              "name": "on-profile-link-click"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's name.",
              "fieldName": "name"
            },
            {
              "name": "subtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's job title, or subtext.",
              "fieldName": "subtitle"
            },
            {
              "name": "email",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The user's email address.",
              "fieldName": "email"
            },
            {
              "name": "profileLink",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "View profile link URL.",
              "fieldName": "profileLink"
            },
            {
              "name": "profileLinkText",
              "type": {
                "text": "string"
              },
              "default": "'View Profile'",
              "description": "View Profile link text.",
              "fieldName": "profileLinkText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-user-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderUserProfile",
          "declaration": {
            "name": "HeaderUserProfile",
            "module": "src/components/global/header/headerUserProfile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-user-profile",
          "declaration": {
            "name": "HeaderUserProfile",
            "module": "src/components/global/header/headerUserProfile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "./header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "./headerNav"
          }
        },
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "./headerLink"
          }
        },
        {
          "kind": "js",
          "name": "HeaderCategory",
          "declaration": {
            "name": "HeaderCategory",
            "module": "./headerCategory"
          }
        },
        {
          "kind": "js",
          "name": "HeaderDivider",
          "declaration": {
            "name": "HeaderDivider",
            "module": "./headerDivider"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "./headerFlyouts"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "./headerFlyout"
          }
        },
        {
          "kind": "js",
          "name": "HeaderUserProfile",
          "declaration": {
            "name": "HeaderUserProfile",
            "module": "./headerUserProfile"
          }
        },
        {
          "kind": "js",
          "name": "HeaderPanelLink",
          "declaration": {
            "name": "HeaderPanelLink",
            "module": "./headerPanelLink"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNotificationPanel",
          "declaration": {
            "name": "HeaderNotificationPanel",
            "module": "./headerNotificationPanel"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Footer component.",
          "name": "Footer",
          "slots": [
            {
              "description": "Default slot, for links.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the logo, will overwrite the default logo.",
              "name": "logo"
            },
            {
              "description": "Slot for the copyright text.",
              "name": "copyright"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the footer logo link. Should target the application home page.",
              "attribute": "rootUrl"
            },
            {
              "kind": "method",
              "name": "handleRootLinkClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the logo link click event and emits the original event.",
              "name": "on-root-link-click"
            }
          ],
          "attributes": [
            {
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the footer logo link. Should target the application home page.",
              "fieldName": "rootUrl"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "src/components/global/footer/footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer",
          "declaration": {
            "name": "Footer",
            "module": "src/components/global/footer/footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "./footer"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/uiShell/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "UiShell",
          "declaration": {
            "name": "UiShell",
            "module": "./uiShell"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/uiShell/uiShell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container to help with positioning and padding of the global elements such as: adds padding for the fixed Header and Local Nav, adds main content gutters, and makes Footer sticky. This takes the onus off of the consuming app to configure these values.",
          "name": "UiShell",
          "slots": [
            {
              "description": "Slot for global elements.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-ui-shell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UiShell",
          "declaration": {
            "name": "UiShell",
            "module": "src/components/global/uiShell/uiShell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-ui-shell",
          "declaration": {
            "name": "UiShell",
            "module": "src/components/global/uiShell/uiShell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNav",
          "declaration": {
            "name": "LocalNav",
            "module": "./localNav"
          }
        },
        {
          "kind": "js",
          "name": "LocalNavLink",
          "declaration": {
            "name": "LocalNavLink",
            "module": "./localNavLink"
          }
        },
        {
          "kind": "js",
          "name": "LocalNavDivider",
          "declaration": {
            "name": "LocalNavDivider",
            "module": "./localNavDivider"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/localNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Side Navigation component.",
          "name": "LocalNav",
          "slots": [
            {
              "description": "The default slot, for local nav links.",
              "name": "unnamed"
            },
            {
              "description": "Slot for a search input",
              "name": "search"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "pinned",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Local nav pinned state.",
              "attribute": "pinned"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  pin: 'Pin',\n  unpin: 'Unpin',\n  toggleMenu: 'Toggle Menu',\n  collapse: 'Collapse',\n  menu: 'Menu',\n}",
              "description": "Text string customization.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "_handleNavToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleMobileNavToggle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePointerLeave",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleLinkActive",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the pinned state and original event details.",
              "name": "on-toggle"
            }
          ],
          "attributes": [
            {
              "name": "pinned",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Local nav pinned state.",
              "fieldName": "pinned"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-local-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNav",
          "declaration": {
            "name": "LocalNav",
            "module": "src/components/global/localNav/localNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-local-nav",
          "declaration": {
            "name": "LocalNav",
            "module": "src/components/global/localNav/localNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/localNavDivider.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Local Nav divider",
          "name": "LocalNavDivider",
          "members": [
            {
              "kind": "field",
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional heading text.",
              "attribute": "heading"
            }
          ],
          "attributes": [
            {
              "name": "heading",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional heading text.",
              "fieldName": "heading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-local-nav-divider",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNavDivider",
          "declaration": {
            "name": "LocalNavDivider",
            "module": "src/components/global/localNav/localNavDivider.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-local-nav-divider",
          "declaration": {
            "name": "LocalNavDivider",
            "module": "src/components/global/localNav/localNavDivider.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/localNav/localNavLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Link component for use in the global Side Navigation component.",
          "name": "LocalNavLink",
          "slots": [
            {
              "description": "The default slot, for the link text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for an icon. Use 16px size.",
              "name": "icon"
            },
            {
              "description": "Slot for the next level of links, supports three levels.",
              "name": "links"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expanded state.",
              "attribute": "expanded"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Active state.",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "attribute": "backText"
            },
            {
              "kind": "method",
              "name": "_handleTextSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_getSlotText",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleLinksSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleBack",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event, level, and if default was prevented.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expanded state.",
              "fieldName": "expanded"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Active state.",
              "fieldName": "active"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "backText",
              "type": {
                "text": "string"
              },
              "default": "'Back'",
              "description": "Text for mobile \"Back\" button.",
              "fieldName": "backText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-local-nav-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalNavLink",
          "declaration": {
            "name": "LocalNavLink",
            "module": "src/components/global/localNav/localNavLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-local-nav-link",
          "declaration": {
            "name": "LocalNavLink",
            "module": "src/components/global/localNav/localNavLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/accordion/accordion.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Accordion component.",
          "name": "Accordion",
          "slots": [
            {
              "description": "Holds Accordion Items (kyn-accordion-item) that make up the accordion",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "showNumbers",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether to show numbers on the list items.",
              "attribute": "showNumbers"
            },
            {
              "kind": "field",
              "name": "startNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Specifies the number to start at if the list has numbers.",
              "attribute": "startNumber"
            },
            {
              "kind": "field",
              "name": "filledHeaders",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether to show the accordion items with filled headers.",
              "attribute": "filledHeaders"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Display the accordion as compact or the default large size.",
              "attribute": "compact"
            },
            {
              "kind": "field",
              "name": "expandLabel",
              "type": {
                "text": "string"
              },
              "default": "'Expand all items'",
              "description": "The string that displays on the toggle to expand all the accordion items.",
              "attribute": "expandLabel"
            },
            {
              "kind": "field",
              "name": "collapseLabel",
              "type": {
                "text": "string"
              },
              "default": "'Collapse all items'",
              "description": "The string that displays on the toggle to collapse all the accordion items.",
              "attribute": "collapseLabel"
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_openAllItems",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_closeAllItems",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_toggleExpandAll",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_checkOpenItems",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "showNumbers",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether to show numbers on the list items.",
              "fieldName": "showNumbers"
            },
            {
              "name": "startNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Specifies the number to start at if the list has numbers.",
              "fieldName": "startNumber"
            },
            {
              "name": "filledHeaders",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies whether to show the accordion items with filled headers.",
              "fieldName": "filledHeaders"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Display the accordion as compact or the default large size.",
              "fieldName": "compact"
            },
            {
              "name": "expandLabel",
              "type": {
                "text": "string"
              },
              "default": "'Expand all items'",
              "description": "The string that displays on the toggle to expand all the accordion items.",
              "fieldName": "expandLabel"
            },
            {
              "name": "collapseLabel",
              "type": {
                "text": "string"
              },
              "default": "'Collapse all items'",
              "description": "The string that displays on the toggle to collapse all the accordion items.",
              "fieldName": "collapseLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-accordion",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Accordion",
          "declaration": {
            "name": "Accordion",
            "module": "src/components/reusable/accordion/accordion.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-accordion",
          "declaration": {
            "name": "Accordion",
            "module": "src/components/reusable/accordion/accordion.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/accordion/accordionItem.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "AccordionItem component. *",
          "name": "AccordionItem",
          "slots": [
            {
              "description": "Optional leading icon",
              "name": "icon"
            },
            {
              "description": "Body of the accordion item",
              "name": "body"
            },
            {
              "description": "Title of the accordion item",
              "name": "title"
            },
            {
              "description": "Optional subtitle of the accordion item",
              "name": "subtitle"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Accordion item opened state.",
              "attribute": "opened"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Accordion item disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "setIndex",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setShowNumbers",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setFilledHeader",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setCompact",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "open"
            },
            {
              "kind": "method",
              "name": "close"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleKeypress",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_toggleOpenState",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_emitToggleEvent",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits the `opened` state when the accordion item opens/closes.",
              "name": "on-toggle"
            }
          ],
          "attributes": [
            {
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Accordion item opened state.",
              "fieldName": "opened"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Accordion item disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-accordion-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AccordionItem",
          "declaration": {
            "name": "AccordionItem",
            "module": "src/components/reusable/accordion/accordionItem.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-accordion-item",
          "declaration": {
            "name": "AccordionItem",
            "module": "src/components/reusable/accordion/accordionItem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/accordion/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Accordion",
          "declaration": {
            "name": "Accordion",
            "module": "./accordion"
          }
        },
        {
          "kind": "js",
          "name": "AccordionItem",
          "declaration": {
            "name": "AccordionItem",
            "module": "./accordionItem"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/blockCodeView/blockCodeView.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`<kyn-block-code-view>` component to display `<code>` snippets as standalone single-/multi-line block elements.",
          "name": "BlockCodeView",
          "members": [
            {
              "kind": "field",
              "name": "darkTheme",
              "type": {
                "text": "'light' | 'dark' | 'default'"
              },
              "default": "'default'",
              "description": "Sets background and text theming.",
              "attribute": "darkTheme"
            },
            {
              "kind": "field",
              "name": "language",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "If empty string, attempt language syntax auto-detection. Setting a value will override auto-detection and manually configure desired language.",
              "attribute": "language"
            },
            {
              "kind": "field",
              "name": "maxHeight",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "description": "Customizable max-height setting for code snippet container.",
              "attribute": "maxHeight"
            },
            {
              "kind": "field",
              "name": "codeViewLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optionally displayed label above code snippet container.",
              "attribute": "codeViewLabel"
            },
            {
              "kind": "field",
              "name": "copyOptionVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally display button to copy code snippet.",
              "attribute": "copyOptionVisible"
            },
            {
              "kind": "field",
              "name": "codeViewExpandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally display button to expand code snippet container.",
              "attribute": "codeViewExpandable"
            },
            {
              "kind": "field",
              "name": "copyButtonText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets copy code button text (optional).",
              "attribute": "copyButtonText"
            },
            {
              "kind": "field",
              "name": "copyButtonDescriptionAttr",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets copy button description attr value.",
              "attribute": "copyButtonDescriptionAttr"
            },
            {
              "kind": "field",
              "name": "codeSnippet",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets code snippet for display -- NOTE: original formatting is preserved.",
              "attribute": "codeSnippet"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  collapsed: 'Collapsed',\n  expanded: 'Expanded',\n}",
              "description": "Text string customization.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "getContainerClasses",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderCopyButton",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderExpandButton",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "highlightCode",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "detectLanguage",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "code",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "calculateRelevance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "tokens",
                  "type": {
                    "text": "(string | Prism.Token)[]"
                  }
                },
                {
                  "name": "language",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getTokenRelevance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "token",
                  "type": {
                    "text": "Prism.Token"
                  }
                },
                {
                  "name": "language",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isLanguageSpecificToken",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "token",
                  "type": {
                    "text": "Prism.Token"
                  }
                },
                {
                  "name": "language",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "determineMarkupLanguage",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "code",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkOverflow",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "removeLeadingWhitespace",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "code",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "formatExampleCode",
              "privacy": "private",
              "parameters": [
                {
                  "name": "code",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "copyCode",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getContainerStyle",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "expandCodeView",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleKeypress",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "on-copy",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Emits when the copy button is clicked."
            }
          ],
          "attributes": [
            {
              "name": "darkTheme",
              "type": {
                "text": "'light' | 'dark' | 'default'"
              },
              "default": "'default'",
              "description": "Sets background and text theming.",
              "fieldName": "darkTheme"
            },
            {
              "name": "language",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "If empty string, attempt language syntax auto-detection. Setting a value will override auto-detection and manually configure desired language.",
              "fieldName": "language"
            },
            {
              "name": "maxHeight",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "description": "Customizable max-height setting for code snippet container.",
              "fieldName": "maxHeight"
            },
            {
              "name": "codeViewLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optionally displayed label above code snippet container.",
              "fieldName": "codeViewLabel"
            },
            {
              "name": "copyOptionVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally display button to copy code snippet.",
              "fieldName": "copyOptionVisible"
            },
            {
              "name": "codeViewExpandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally display button to expand code snippet container.",
              "fieldName": "codeViewExpandable"
            },
            {
              "name": "copyButtonText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets copy code button text (optional).",
              "fieldName": "copyButtonText"
            },
            {
              "name": "copyButtonDescriptionAttr",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets copy button description attr value.",
              "fieldName": "copyButtonDescriptionAttr"
            },
            {
              "name": "codeSnippet",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets code snippet for display -- NOTE: original formatting is preserved.",
              "fieldName": "codeSnippet"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-block-code-view",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BlockCodeView",
          "declaration": {
            "name": "BlockCodeView",
            "module": "src/components/reusable/blockCodeView/blockCodeView.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-block-code-view",
          "declaration": {
            "name": "BlockCodeView",
            "module": "src/components/reusable/blockCodeView/blockCodeView.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/blockCodeView/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "BlockCodeView",
          "declaration": {
            "name": "BlockCodeView",
            "module": "./blockCodeView"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/breadcrumbs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Breadcrumbs Component.",
          "name": "Breadcrumbs",
          "slots": [
            {
              "description": "Slot for inserting links.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-breadcrumbs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "src/components/reusable/breadcrumbs/breadcrumbs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "src/components/reusable/breadcrumbs/breadcrumbs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/breadcrumbs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Breadcrumbs",
          "declaration": {
            "name": "Breadcrumbs",
            "module": "./breadcrumbs"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/button/button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Button component.",
          "name": "Button",
          "slots": [
            {
              "description": "Slot for button text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for an icon.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ARIA label for the button for accessibility.",
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "BUTTON_TYPES"
              },
              "description": "Type for the &lt;button&gt; element.",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "kind",
              "type": {
                "text": "BUTTON_KINDS"
              },
              "description": "Specifies the visual appearance/kind of the button.",
              "attribute": "kind"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Converts the button to an &lt;a&gt; tag if specified.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "BUTTON_SIZES"
              },
              "description": "Specifies the size of the button.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "iconPosition",
              "type": {
                "text": "BUTTON_ICON_POSITION"
              },
              "description": "Specifies the position of the icon relative to any button text.",
              "attribute": "iconPosition"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the button is disabled.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the button indicates a destructive action.",
              "attribute": "destructive",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "outlineOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if only the button outline is to be shown",
              "attribute": "outlineOnly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ghost",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Ghost style button",
              "attribute": "ghost",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Button value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Button name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "isFloating",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the button is Floatable",
              "attribute": "isFloating"
            },
            {
              "kind": "field",
              "name": "showOnScroll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Show button after scrolling to 50% of the page",
              "attribute": "showOnScroll"
            },
            {
              "kind": "field",
              "name": "formmethod",
              "type": {
                "text": "any"
              },
              "description": "Button formmethod.",
              "attribute": "formmethod"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_testIconOnly",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits the original click event.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ARIA label for the button for accessibility.",
              "fieldName": "description"
            },
            {
              "name": "type",
              "type": {
                "text": "BUTTON_TYPES"
              },
              "description": "Type for the &lt;button&gt; element.",
              "fieldName": "type"
            },
            {
              "name": "kind",
              "type": {
                "text": "BUTTON_KINDS"
              },
              "description": "Specifies the visual appearance/kind of the button.",
              "fieldName": "kind"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Converts the button to an &lt;a&gt; tag if specified.",
              "fieldName": "href"
            },
            {
              "name": "size",
              "type": {
                "text": "BUTTON_SIZES"
              },
              "description": "Specifies the size of the button.",
              "fieldName": "size"
            },
            {
              "name": "iconPosition",
              "type": {
                "text": "BUTTON_ICON_POSITION"
              },
              "description": "Specifies the position of the icon relative to any button text.",
              "fieldName": "iconPosition"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the button is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the button indicates a destructive action.",
              "fieldName": "destructive"
            },
            {
              "name": "outlineOnly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if only the button outline is to be shown",
              "fieldName": "outlineOnly"
            },
            {
              "name": "ghost",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Ghost style button",
              "fieldName": "ghost"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Button value.",
              "fieldName": "value"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Button name.",
              "fieldName": "name"
            },
            {
              "name": "isFloating",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the button is Floatable",
              "fieldName": "isFloating"
            },
            {
              "name": "showOnScroll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Show button after scrolling to 50% of the page",
              "fieldName": "showOnScroll"
            },
            {
              "name": "formmethod",
              "type": {
                "text": "any"
              },
              "description": "Button formmethod.",
              "fieldName": "formmethod"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Button",
            "module": "src/components/reusable/button/button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-button",
          "declaration": {
            "name": "Button",
            "module": "src/components/reusable/button/button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/button/defs.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/button/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Button",
            "module": "./button"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/card/card.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Card.",
          "name": "Card",
          "slots": [
            {
              "description": "Slot for card contents.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'normal'",
              "description": "Card Type. `'normal'` & `'clickable'`",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Card link url for clickable cards.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Use for Card type `'clickable'`. Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship.",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "any"
              },
              "default": "'_self'",
              "description": "Defines a target attribute for where to load the URL in case of clickable card. Possible options include `'_self'` (deafult), `'_blank'`, `'_parent`', `'_top'`",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "hideBorder",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide card border. Useful when clickable card use inside `<kyn-notification>` component.",
              "attribute": "hideBorder"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event of clickable card and emits the original event details. Use `e.stopPropogation()` / `e.preventDefault()` for any internal clickable elements when card type is `'clickable'` to stop bubbling / prevent event.",
              "name": "on-card-click"
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'normal'",
              "description": "Card Type. `'normal'` & `'clickable'`",
              "fieldName": "type"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Card link url for clickable cards.",
              "fieldName": "href"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Use for Card type `'clickable'`. Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship.",
              "fieldName": "rel"
            },
            {
              "name": "target",
              "type": {
                "text": "any"
              },
              "default": "'_self'",
              "description": "Defines a target attribute for where to load the URL in case of clickable card. Possible options include `'_self'` (deafult), `'_blank'`, `'_parent`', `'_top'`",
              "fieldName": "target"
            },
            {
              "name": "hideBorder",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide card border. Useful when clickable card use inside `<kyn-notification>` component.",
              "fieldName": "hideBorder"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-card",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Card",
          "declaration": {
            "name": "Card",
            "module": "src/components/reusable/card/card.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-card",
          "declaration": {
            "name": "Card",
            "module": "src/components/reusable/card/card.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/card/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Card",
          "declaration": {
            "name": "Card",
            "module": "./card"
          }
        },
        {
          "kind": "js",
          "name": "VitalCardSkeleton",
          "declaration": {
            "name": "VitalCardSkeleton",
            "module": "./vitalCard.skeleton"
          }
        },
        {
          "kind": "js",
          "name": "InformationalCardSkeleton",
          "declaration": {
            "name": "InformationalCardSkeleton",
            "module": "./informationalCard.skeleton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/card/informationalCard.skeleton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-info-card-skeleton` Web Component.\nA skeleton loading state for the informational card component that mirrors its structure.",
          "name": "InformationalCardSkeleton",
          "members": [
            {
              "kind": "field",
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Sets the number of body/description lines to show in the skeleton pattern example.",
              "attribute": "lines"
            },
            {
              "kind": "field",
              "name": "thumbnailVisible",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Sets show or hide thumbnail element.",
              "attribute": "thumbnailVisible"
            }
          ],
          "attributes": [
            {
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Sets the number of body/description lines to show in the skeleton pattern example.",
              "fieldName": "lines"
            },
            {
              "name": "thumbnailVisible",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "description": "Sets show or hide thumbnail element.",
              "fieldName": "thumbnailVisible"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-info-card-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InformationalCardSkeleton",
          "declaration": {
            "name": "InformationalCardSkeleton",
            "module": "src/components/reusable/card/informationalCard.skeleton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-info-card-skeleton",
          "declaration": {
            "name": "InformationalCardSkeleton",
            "module": "src/components/reusable/card/informationalCard.skeleton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/card/vitalCard.skeleton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-vital-card-skeleton` Web Component.\nA skeleton loading state for the vital card component that mirrors its structure.",
          "name": "VitalCardSkeleton",
          "members": [
            {
              "kind": "field",
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Sets the number of body/description lines to show in the skeleton pattern example.",
              "attribute": "lines"
            }
          ],
          "attributes": [
            {
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Sets the number of body/description lines to show in the skeleton pattern example.",
              "fieldName": "lines"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-vital-card-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VitalCardSkeleton",
          "declaration": {
            "name": "VitalCardSkeleton",
            "module": "src/components/reusable/card/vitalCard.skeleton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-vital-card-skeleton",
          "declaration": {
            "name": "VitalCardSkeleton",
            "module": "src/components/reusable/card/vitalCard.skeleton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkbox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox.",
          "name": "Checkbox",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state, inherited from the parent group.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the label should be hidden from visual view but remain accessible\nto screen readers for accessibility purposes.",
              "attribute": "visiblyHidden"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "attribute": "indeterminate"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-checkbox-change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox value.",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state, inherited from the parent group.",
              "fieldName": "disabled"
            },
            {
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the label should be hidden from visual view but remain accessible\nto screen readers for accessibility purposes.",
              "fieldName": "visiblyHidden"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "fieldName": "indeterminate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/components/reusable/checkbox/checkbox.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/components/reusable/checkbox/checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkboxGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox group container.",
          "name": "CheckboxGroup",
          "slots": [
            {
              "description": "Slot for individual checkboxes.",
              "name": "unnamed"
            },
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            },
            {
              "description": "Slot for description text.",
              "name": "description"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Array<any>"
              },
              "default": "[]",
              "description": "Checkbox group selected values.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes a single selection required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "horizontal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group horizontal style.",
              "attribute": "horizontal"
            },
            {
              "kind": "field",
              "name": "selectAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a \"Select All\" checkbox to the top of the group.",
              "attribute": "selectAll"
            },
            {
              "kind": "field",
              "name": "hideLegend",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the group legend/label visually.",
              "attribute": "hideLegend"
            },
            {
              "kind": "field",
              "name": "filterable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a search input to enable filtering of checkboxes.",
              "attribute": "filterable"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "limitCheckboxes",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Limits visible checkboxes behind a \"Show all\" button.",
              "attribute": "limitCheckboxes"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  selectAll: 'Select all',\n  showMore: 'Show more',\n  showLess: 'Show less',\n  search: 'Search',\n  required: 'Required',\n  error: 'Error',\n}",
              "description": "Text string customization.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "field",
              "name": "checkboxes",
              "type": {
                "text": "Array<any>"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "filteredCheckboxes",
              "type": {
                "text": "Array<any>"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "_updateCheckboxStates",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCheckboxChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitChangeEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleFilter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_toggleRevealed",
              "privacy": "private",
              "parameters": [
                {
                  "name": "revealed",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleSubgroupChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected values.",
              "name": "on-checkbox-group-change"
            },
            {
              "description": "Captures the search input event and emits the search term.",
              "name": "on-search"
            },
            {
              "description": "Captures the show more/less click and emits the expanded state.",
              "name": "on-limit-toggle"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "Array<any>"
              },
              "default": "[]",
              "description": "Checkbox group selected values.",
              "fieldName": "value"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes a single selection required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "horizontal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group horizontal style.",
              "fieldName": "horizontal"
            },
            {
              "name": "selectAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a \"Select All\" checkbox to the top of the group.",
              "fieldName": "selectAll"
            },
            {
              "name": "hideLegend",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the group legend/label visually.",
              "fieldName": "hideLegend"
            },
            {
              "name": "filterable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a search input to enable filtering of checkboxes.",
              "fieldName": "filterable"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "limitCheckboxes",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Limits visible checkboxes behind a \"Show all\" button.",
              "fieldName": "limitCheckboxes"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/components/reusable/checkbox/checkboxGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox-group",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/components/reusable/checkbox/checkboxGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkboxSubgroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox subgroup",
          "name": "CheckboxSubgroup",
          "slots": [
            {
              "description": "Slot for child kyn-checkboxes.",
              "name": "unnamed"
            },
            {
              "description": "Slot for parent kyn-checkbox.",
              "name": "parent"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "_handleSlotchange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_syncParent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCheckboxChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox-subgroup",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckboxSubgroup",
          "declaration": {
            "name": "CheckboxSubgroup",
            "module": "src/components/reusable/checkbox/checkboxSubgroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox-subgroup",
          "declaration": {
            "name": "CheckboxSubgroup",
            "module": "src/components/reusable/checkbox/checkboxSubgroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "./checkbox"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "./checkboxGroup"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxSubgroup",
          "declaration": {
            "name": "CheckboxSubgroup",
            "module": "./checkboxSubgroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/datePicker/datepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Datepicker: uses Flatpickr's datetime picker library -- `https://flatpickr.js.org`",
          "name": "DatePicker",
          "slots": [
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "locale",
              "type": {
                "text": "SupportedLocale"
              },
              "default": "'en'",
              "attribute": "locale"
            },
            {
              "kind": "field",
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "default": "'Y-m-d'",
              "description": "Sets flatpickr value to define how the date will be displayed in the input box (ex: `Y-m-d H:i`).",
              "attribute": "dateFormat"
            },
            {
              "kind": "field",
              "name": "defaultDate",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "null",
              "description": "Sets the initial selected date(s). For multiple mode, provide an array of date strings matching dateFormat.",
              "attribute": "defaultDate"
            },
            {
              "kind": "field",
              "name": "defaultErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets default error message.",
              "attribute": "defaultErrorMessage"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets datepicker form input value to required/required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Date | Date[] | null"
              },
              "default": "null",
              "description": "Sets pre-selected date/time value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets validation warning messaging.",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "disable",
              "type": {
                "text": "(string | number | Date)[]"
              },
              "default": "[]",
              "description": "Sets flatpickr options setting to disable specific dates.",
              "attribute": "disable"
            },
            {
              "kind": "field",
              "name": "enable",
              "type": {
                "text": "(string | number | Date)[]"
              },
              "default": "[]",
              "description": "Sets flatpickr options setting to enable specific dates.",
              "attribute": "enable"
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "'single' | 'multiple'"
              },
              "default": "'single'",
              "description": "Sets flatpickr mode to select single (default), multiple dates.",
              "attribute": "mode"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets caption to be displayed under primary date picker elements.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "datePickerDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets entire datepicker form element to enabled/disabled.",
              "attribute": "datePickerDisabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "twentyFourHourFormat",
              "type": {
                "text": "boolean | null"
              },
              "default": "null",
              "description": "Sets 24 hour formatting true/false.\nDefaults to 12H for all `en-*` locales and 24H for all other locales.",
              "attribute": "twentyFourHourFormat"
            },
            {
              "kind": "field",
              "name": "minDate",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets lower boundary of datepicker date selection.",
              "attribute": "minDate"
            },
            {
              "kind": "field",
              "name": "maxDate",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets upper boundary of datepicker date selection.",
              "attribute": "maxDate"
            },
            {
              "kind": "field",
              "name": "errorAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for error message.",
              "attribute": "errorAriaLabel"
            },
            {
              "kind": "field",
              "name": "errorTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for error message.",
              "attribute": "errorTitle"
            },
            {
              "kind": "field",
              "name": "warningAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for warning message.",
              "attribute": "warningAriaLabel"
            },
            {
              "kind": "field",
              "name": "warningTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for warning message.",
              "attribute": "warningTitle"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  requiredText: 'Required',\n  clearAll: 'Clear',\n}",
              "description": "Customizable text strings.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "renderValidationMessage",
              "privacy": "private",
              "parameters": [
                {
                  "name": "errorId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "warningId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDatepickerClasses"
            },
            {
              "kind": "field",
              "name": "_initialized",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "reinitializeFlatpickr",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setupAnchor",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeFlatpickr",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "updateFlatpickrOptions",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "setInitialDates",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "getComponentFlatpickrOptions",
              "return": {
                "type": {
                  "text": "Promise<Partial<BaseOptions>>"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleOpen",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleClose",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleDateChange",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "selectedDates",
                  "type": {
                    "text": "Date[]"
                  }
                },
                {
                  "name": "dateStr",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setShouldFlatpickrOpen",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "closeFlatpickr",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "preventFlatpickrOpen",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInputClickEvent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleInputFocusEvent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleFormReset",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "locale",
              "type": {
                "text": "SupportedLocale"
              },
              "default": "'en'",
              "fieldName": "locale"
            },
            {
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "default": "'Y-m-d'",
              "description": "Sets flatpickr value to define how the date will be displayed in the input box (ex: `Y-m-d H:i`).",
              "fieldName": "dateFormat"
            },
            {
              "name": "defaultDate",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "null",
              "description": "Sets the initial selected date(s). For multiple mode, provide an array of date strings matching dateFormat.",
              "fieldName": "defaultDate"
            },
            {
              "name": "defaultErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets default error message.",
              "fieldName": "defaultErrorMessage"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets datepicker form input value to required/required.",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "Date | Date[] | null"
              },
              "default": "null",
              "description": "Sets pre-selected date/time value.",
              "fieldName": "value"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets validation warning messaging.",
              "fieldName": "warnText"
            },
            {
              "name": "disable",
              "type": {
                "text": "(string | number | Date)[]"
              },
              "default": "[]",
              "description": "Sets flatpickr options setting to disable specific dates.",
              "fieldName": "disable"
            },
            {
              "name": "enable",
              "type": {
                "text": "(string | number | Date)[]"
              },
              "default": "[]",
              "description": "Sets flatpickr options setting to enable specific dates.",
              "fieldName": "enable"
            },
            {
              "name": "mode",
              "type": {
                "text": "'single' | 'multiple'"
              },
              "default": "'single'",
              "description": "Sets flatpickr mode to select single (default), multiple dates.",
              "fieldName": "mode"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets caption to be displayed under primary date picker elements.",
              "fieldName": "caption"
            },
            {
              "name": "datePickerDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets entire datepicker form element to enabled/disabled.",
              "fieldName": "datePickerDisabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "fieldName": "readonly"
            },
            {
              "name": "twentyFourHourFormat",
              "type": {
                "text": "boolean | null"
              },
              "default": "null",
              "description": "Sets 24 hour formatting true/false.\nDefaults to 12H for all `en-*` locales and 24H for all other locales.",
              "fieldName": "twentyFourHourFormat"
            },
            {
              "name": "minDate",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets lower boundary of datepicker date selection.",
              "fieldName": "minDate"
            },
            {
              "name": "maxDate",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets upper boundary of datepicker date selection.",
              "fieldName": "maxDate"
            },
            {
              "name": "errorAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for error message.",
              "fieldName": "errorAriaLabel"
            },
            {
              "name": "errorTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for error message.",
              "fieldName": "errorTitle"
            },
            {
              "name": "warningAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for warning message.",
              "fieldName": "warningAriaLabel"
            },
            {
              "name": "warningTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for warning message.",
              "fieldName": "warningTitle"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Customizable text strings.",
              "fieldName": "textStrings"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-date-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "src/components/reusable/datePicker/datepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-date-picker",
          "declaration": {
            "name": "DatePicker",
            "module": "src/components/reusable/datePicker/datepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/datePicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "DatePicker",
          "declaration": {
            "name": "DatePicker",
            "module": "./datepicker"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/daterangepicker/daterangepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Date Range Picker: uses Flatpickr library, range picker implementation -- `https://flatpickr.js.org/examples/#range-calendar`",
          "name": "DateRangePicker",
          "slots": [
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "locale",
              "type": {
                "text": "SupportedLocale"
              },
              "default": "'en'",
              "description": "Sets and dynamically imports specific l10n calendar localization.",
              "attribute": "locale"
            },
            {
              "kind": "field",
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "default": "'Y-m-d'",
              "description": "Sets flatpickr value to define how the date will be displayed in the input box (ex: `Y-m-d H:i`).",
              "attribute": "dateFormat"
            },
            {
              "kind": "field",
              "name": "defaultDate",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "null",
              "description": "Sets the initial selected date(s). For range mode, provide an array of date strings matching dateFormat (e.g. [\"2024-01-01\", \"2024-01-07\"]).",
              "attribute": "defaultDate"
            },
            {
              "kind": "field",
              "name": "defaultErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets default error message.",
              "attribute": "defaultErrorMessage"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "[Date | null, Date | null]"
              },
              "default": "[null, null]",
              "description": "Sets date/time range value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets validation warning messaging.",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "disable",
              "type": {
                "text": "(string | number | Date)[]"
              },
              "default": "[]",
              "description": "Sets flatpickr options setting to disable specific dates.",
              "attribute": "disable"
            },
            {
              "kind": "field",
              "name": "enable",
              "type": {
                "text": "(string | number | Date)[]"
              },
              "default": "[]",
              "description": "Sets flatpickr options setting to enable specific dates.",
              "attribute": "enable"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets caption to be displayed under primary date picker elements.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets date range picker form input value to required/required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "dateRangePickerDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets entire date range picker form element to enabled/disabled.",
              "attribute": "dateRangePickerDisabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "twentyFourHourFormat",
              "type": {
                "text": "boolean | null"
              },
              "default": "null",
              "description": "Sets 24 hour formatting true/false.\nDefaults to 12H for all `en-` locales and 24H for all other locales.",
              "attribute": "twentyFourHourFormat"
            },
            {
              "kind": "field",
              "name": "minDate",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets lower boundary of date range picker date selection.",
              "attribute": "minDate"
            },
            {
              "kind": "field",
              "name": "maxDate",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets upper boundary of date range picker date selection.",
              "attribute": "maxDate"
            },
            {
              "kind": "field",
              "name": "errorAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for error message.",
              "attribute": "errorAriaLabel"
            },
            {
              "kind": "field",
              "name": "errorTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for error message.",
              "attribute": "errorTitle"
            },
            {
              "kind": "field",
              "name": "warningAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for warning message.",
              "attribute": "warningAriaLabel"
            },
            {
              "kind": "field",
              "name": "warningTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for warning message.",
              "attribute": "warningTitle"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  requiredText: 'Required',\n  clearAll: 'Clear',\n}",
              "description": "Customizable text strings.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "renderValidationMessage",
              "privacy": "private",
              "parameters": [
                {
                  "name": "errorId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "warningId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDateRangePickerClasses"
            },
            {
              "kind": "method",
              "name": "setupAnchor",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "initializeFlatpickr",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getComponentFlatpickrOptions",
              "return": {
                "type": {
                  "text": "Promise<Partial<BaseOptions>>"
                }
              }
            },
            {
              "kind": "method",
              "name": "updateFlatpickrOptions"
            },
            {
              "kind": "method",
              "name": "setInitialDates",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleOpen",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleDateChange",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "selectedDates",
                  "type": {
                    "text": "Date[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClose"
            },
            {
              "kind": "method",
              "name": "updateSelectedDateRangeAria",
              "parameters": [
                {
                  "name": "selectedDates",
                  "type": {
                    "text": "Date[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setShouldFlatpickrOpen",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "closeFlatpickr",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "preventFlatpickrOpen",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInputClickEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInputFocusEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleFormReset",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "locale",
              "type": {
                "text": "SupportedLocale"
              },
              "default": "'en'",
              "description": "Sets and dynamically imports specific l10n calendar localization.",
              "fieldName": "locale"
            },
            {
              "name": "dateFormat",
              "type": {
                "text": "string"
              },
              "default": "'Y-m-d'",
              "description": "Sets flatpickr value to define how the date will be displayed in the input box (ex: `Y-m-d H:i`).",
              "fieldName": "dateFormat"
            },
            {
              "name": "defaultDate",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "null",
              "description": "Sets the initial selected date(s). For range mode, provide an array of date strings matching dateFormat (e.g. [\"2024-01-01\", \"2024-01-07\"]).",
              "fieldName": "defaultDate"
            },
            {
              "name": "defaultErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets default error message.",
              "fieldName": "defaultErrorMessage"
            },
            {
              "name": "value",
              "type": {
                "text": "[Date | null, Date | null]"
              },
              "default": "[null, null]",
              "description": "Sets date/time range value.",
              "fieldName": "value"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets validation warning messaging.",
              "fieldName": "warnText"
            },
            {
              "name": "disable",
              "type": {
                "text": "(string | number | Date)[]"
              },
              "default": "[]",
              "description": "Sets flatpickr options setting to disable specific dates.",
              "fieldName": "disable"
            },
            {
              "name": "enable",
              "type": {
                "text": "(string | number | Date)[]"
              },
              "default": "[]",
              "description": "Sets flatpickr options setting to enable specific dates.",
              "fieldName": "enable"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets caption to be displayed under primary date picker elements.",
              "fieldName": "caption"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets date range picker form input value to required/required.",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "dateRangePickerDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets entire date range picker form element to enabled/disabled.",
              "fieldName": "dateRangePickerDisabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "fieldName": "readonly"
            },
            {
              "name": "twentyFourHourFormat",
              "type": {
                "text": "boolean | null"
              },
              "default": "null",
              "description": "Sets 24 hour formatting true/false.\nDefaults to 12H for all `en-` locales and 24H for all other locales.",
              "fieldName": "twentyFourHourFormat"
            },
            {
              "name": "minDate",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets lower boundary of date range picker date selection.",
              "fieldName": "minDate"
            },
            {
              "name": "maxDate",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets upper boundary of date range picker date selection.",
              "fieldName": "maxDate"
            },
            {
              "name": "errorAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for error message.",
              "fieldName": "errorAriaLabel"
            },
            {
              "name": "errorTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for error message.",
              "fieldName": "errorTitle"
            },
            {
              "name": "warningAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for warning message.",
              "fieldName": "warningAriaLabel"
            },
            {
              "name": "warningTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for warning message.",
              "fieldName": "warningTitle"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Customizable text strings.",
              "fieldName": "textStrings"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-date-range-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "src/components/reusable/daterangepicker/daterangepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-date-range-picker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "src/components/reusable/daterangepicker/daterangepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/daterangepicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "DateRangePicker",
          "declaration": {
            "name": "DateRangePicker",
            "module": "./daterangepicker"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/dropdown.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown, single select.",
          "name": "Dropdown",
          "slots": [
            {
              "description": "Slot for dropdown options.",
              "name": "unnamed"
            },
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Dropdown size/height. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown inline style type.",
              "attribute": "inline"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Listbox/drawer open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "searchable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown searchable.",
              "attribute": "searchable"
            },
            {
              "kind": "field",
              "name": "filterSearch",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Searchable variant filters results.",
              "attribute": "filterSearch"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enabled multi-select functionality.",
              "attribute": "multiple"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "attribute": "hideLabel"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "hideTags",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the tags below multi-select.",
              "attribute": "hideTags"
            },
            {
              "kind": "field",
              "name": "selectAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a \"Select all\" option to the top of a multi-select dropdown.",
              "attribute": "selectAll"
            },
            {
              "kind": "field",
              "name": "selectAllText",
              "type": {
                "text": "string"
              },
              "default": "'Select all'",
              "description": "\"Select all\" text customization.",
              "attribute": "selectAllText"
            },
            {
              "kind": "field",
              "name": "menuMinWidth",
              "type": {
                "text": "string"
              },
              "default": "'initial'",
              "description": "Menu CSS min-width value.",
              "attribute": "menuMinWidth"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  title: 'Dropdown',\n  selectedOptions: 'List of selected options',\n  requiredText: 'Required',\n  errorText: 'Error',\n  clearAll: 'Clear all',\n}",
              "description": "Text string customization.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "field",
              "name": "searchText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Search input value.",
              "attribute": "searchText"
            },
            {
              "kind": "method",
              "name": "renderHelperContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleLabelClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleButtonKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "keyCode",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClearMultiple",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTagClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleButtonBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateSelectedOptions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "selected",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emitValue",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_emitSearch",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateTags",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateOptions",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-change"
            },
            {
              "description": "Capture the search input event and emits the search text.",
              "name": "on-search"
            },
            {
              "description": "Captures the the multi-select clear all button click event and emits the value.",
              "name": "on-clear-all"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Dropdown size/height. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown inline style type.",
              "fieldName": "inline"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Dropdown placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Listbox/drawer open state.",
              "fieldName": "open"
            },
            {
              "name": "searchable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown searchable.",
              "fieldName": "searchable"
            },
            {
              "name": "filterSearch",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Searchable variant filters results.",
              "fieldName": "filterSearch"
            },
            {
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enabled multi-select functionality.",
              "fieldName": "multiple"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the dropdown required.",
              "fieldName": "required"
            },
            {
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "fieldName": "hideLabel"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dropdown disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "fieldName": "readonly"
            },
            {
              "name": "hideTags",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide the tags below multi-select.",
              "fieldName": "hideTags"
            },
            {
              "name": "selectAll",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a \"Select all\" option to the top of a multi-select dropdown.",
              "fieldName": "selectAll"
            },
            {
              "name": "selectAllText",
              "type": {
                "text": "string"
              },
              "default": "'Select all'",
              "description": "\"Select all\" text customization.",
              "fieldName": "selectAllText"
            },
            {
              "name": "menuMinWidth",
              "type": {
                "text": "string"
              },
              "default": "'initial'",
              "description": "Menu CSS min-width value.",
              "fieldName": "menuMinWidth"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            },
            {
              "name": "searchText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Search input value.",
              "fieldName": "searchText"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-dropdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "src/components/reusable/dropdown/dropdown.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "src/components/reusable/dropdown/dropdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/dropdownCategory.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown category.",
          "name": "DropdownCategory",
          "slots": [
            {
              "description": "Slot for category title text.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-dropdown-category",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DropdownCategory",
          "declaration": {
            "name": "DropdownCategory",
            "module": "src/components/reusable/dropdown/dropdownCategory.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-dropdown-category",
          "declaration": {
            "name": "DropdownCategory",
            "module": "src/components/reusable/dropdown/dropdownCategory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/dropdownOption.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dropdown option.",
          "name": "DropdownOption",
          "slots": [
            {
              "description": "Slot for option text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Option value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "attribute": "indeterminate",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the option details to the parent dropdown.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Option value.",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the checkbox is in an indeterminate state.",
              "fieldName": "indeterminate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-dropdown-option",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DropdownOption",
          "declaration": {
            "name": "DropdownOption",
            "module": "src/components/reusable/dropdown/dropdownOption.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-dropdown-option",
          "declaration": {
            "name": "DropdownOption",
            "module": "src/components/reusable/dropdown/dropdownOption.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/dropdown/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Dropdown",
          "declaration": {
            "name": "Dropdown",
            "module": "./dropdown"
          }
        },
        {
          "kind": "js",
          "name": "DropdownOption",
          "declaration": {
            "name": "DropdownOption",
            "module": "./dropdownOption"
          }
        },
        {
          "kind": "js",
          "name": "DropdownCategory",
          "declaration": {
            "name": "DropdownCategory",
            "module": "./dropdownCategory"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/errorBlock/errorBlock.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Error block.",
          "name": "ErrorBlock",
          "slots": [
            {
              "description": "Slot for the error description.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the error image.",
              "name": "image"
            },
            {
              "description": "Slot for the action buttons.",
              "name": "actions"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title text",
              "attribute": "titleText"
            }
          ],
          "attributes": [
            {
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title text",
              "fieldName": "titleText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-error-block",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorBlock",
          "declaration": {
            "name": "ErrorBlock",
            "module": "src/components/reusable/errorBlock/errorBlock.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-error-block",
          "declaration": {
            "name": "ErrorBlock",
            "module": "src/components/reusable/errorBlock/errorBlock.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/errorBlock/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorBlock",
          "declaration": {
            "name": "ErrorBlock",
            "module": "./errorBlock"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/floatingContainer/floatingContainer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Floating Container.",
          "name": "FloatingContainer",
          "slots": [
            {
              "description": "Slot for kyn-button options.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-button-float-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FloatingContainer",
          "declaration": {
            "name": "FloatingContainer",
            "module": "src/components/reusable/floatingContainer/floatingContainer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-button-float-container",
          "declaration": {
            "name": "FloatingContainer",
            "module": "src/components/reusable/floatingContainer/floatingContainer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/floatingContainer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "FloatingContainer",
          "declaration": {
            "name": "FloatingContainer",
            "module": "./floatingContainer"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/globalFilter/globalFilter.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Global Filter bar.",
          "name": "GlobalFilter",
          "slots": [
            {
              "description": "Left slot, intended for search input and modal.",
              "name": "unnamed"
            },
            {
              "description": "Right slot, intended for action buttons and overflow menu.",
              "name": "actions"
            },
            {
              "description": "Slot below the filter bar, for tag group.",
              "name": "tags"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-global-filter",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlobalFilter",
          "declaration": {
            "name": "GlobalFilter",
            "module": "src/components/reusable/globalFilter/globalFilter.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-global-filter",
          "declaration": {
            "name": "GlobalFilter",
            "module": "src/components/reusable/globalFilter/globalFilter.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/globalFilter/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "GlobalFilter",
          "declaration": {
            "name": "GlobalFilter",
            "module": "./globalFilter"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/inlineCodeView/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "InlineCodeView",
          "declaration": {
            "name": "InlineCodeView",
            "module": "./inlineCodeView"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/inlineCodeView/inlineCodeView.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`<kyn-inline-code-view>` component to display code snippets inline within HTML content.",
          "name": "InlineCodeView",
          "slots": [
            {
              "description": "inline code snippet slot.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "darkTheme",
              "type": {
                "text": "'light' | 'dark' | 'default'"
              },
              "default": "'default'",
              "description": "Sets background and text theming.",
              "attribute": "darkTheme"
            },
            {
              "kind": "field",
              "name": "snippetFontSize",
              "type": {
                "text": "number"
              },
              "default": "14",
              "description": "Font size value (px) to match code snippet font-size of surrounding text (min, default 14px).",
              "attribute": "snippetFontSize"
            }
          ],
          "attributes": [
            {
              "name": "darkTheme",
              "type": {
                "text": "'light' | 'dark' | 'default'"
              },
              "default": "'default'",
              "description": "Sets background and text theming.",
              "fieldName": "darkTheme"
            },
            {
              "name": "snippetFontSize",
              "type": {
                "text": "number"
              },
              "default": "14",
              "description": "Font size value (px) to match code snippet font-size of surrounding text (min, default 14px).",
              "fieldName": "snippetFontSize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-inline-code-view",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InlineCodeView",
          "declaration": {
            "name": "InlineCodeView",
            "module": "src/components/reusable/inlineCodeView/inlineCodeView.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-inline-code-view",
          "declaration": {
            "name": "InlineCodeView",
            "module": "src/components/reusable/inlineCodeView/inlineCodeView.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/link/defs.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/link/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Link",
          "declaration": {
            "name": "Link",
            "module": "./link"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/link/link.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for navigation links.",
          "name": "Link",
          "slots": [
            {
              "description": "Slot for link text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for an icon.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "LINK_TARGETS"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "kind",
              "type": {
                "text": "LINK_TYPES"
              },
              "description": "The Link type. Primary(App) or Secondary(Web).",
              "attribute": "kind"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the link is disabled.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "standalone",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether you want the standalone Link. By default false. Use this prop. (true) with icon with link variant.",
              "attribute": "standalone"
            },
            {
              "kind": "field",
              "name": "iconLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Positions icon on the left.",
              "attribute": "iconLeft"
            },
            {
              "kind": "field",
              "name": "shade",
              "description": "Determines the shade of the link. By default `auto`.\nSet this prop to `dark` manually when the link needs to have a better contrast for visibility on light backgroud, irrespective of the theme.\n**NOTE**: Applicable only for **primary** link.",
              "attribute": "shade"
            },
            {
              "kind": "method",
              "name": "returnClassMap",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "type": {
                "text": "LINK_TARGETS"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (default), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "kind",
              "type": {
                "text": "LINK_TYPES"
              },
              "description": "The Link type. Primary(App) or Secondary(Web).",
              "fieldName": "kind"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the link is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "standalone",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether you want the standalone Link. By default false. Use this prop. (true) with icon with link variant.",
              "fieldName": "standalone"
            },
            {
              "name": "iconLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Positions icon on the left.",
              "fieldName": "iconLeft"
            },
            {
              "name": "shade",
              "description": "Determines the shade of the link. By default `auto`.\nSet this prop to `dark` manually when the link needs to have a better contrast for visibility on light backgroud, irrespective of the theme.\n**NOTE**: Applicable only for **primary** link.",
              "fieldName": "shade"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Link",
          "declaration": {
            "name": "Link",
            "module": "src/components/reusable/link/link.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-link",
          "declaration": {
            "name": "Link",
            "module": "src/components/reusable/link/link.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/loaders/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Loader",
          "declaration": {
            "name": "Loader",
            "module": "./loader"
          }
        },
        {
          "kind": "js",
          "name": "LoaderInline",
          "declaration": {
            "name": "LoaderInline",
            "module": "./inline"
          }
        },
        {
          "kind": "js",
          "name": "Skeleton",
          "declaration": {
            "name": "Skeleton",
            "module": "./skeleton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/loaders/inline.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Inline Loader.",
          "name": "LoaderInline",
          "slots": [
            {
              "description": "Slot for text/description.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "string"
              },
              "default": "'active'",
              "description": "Status. Can be `active`, `inactive`, `success`, `error`.",
              "attribute": "status"
            },
            {
              "kind": "method",
              "name": "_emitStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_emitStop",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits when the loader been started.",
              "name": "on-start"
            },
            {
              "description": "Emits when the loader has been stopped and all animations have completed.",
              "name": "on-stop"
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "string"
              },
              "default": "'active'",
              "description": "Status. Can be `active`, `inactive`, `success`, `error`.",
              "fieldName": "status"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-loader-inline",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LoaderInline",
          "declaration": {
            "name": "LoaderInline",
            "module": "src/components/reusable/loaders/inline.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-loader-inline",
          "declaration": {
            "name": "LoaderInline",
            "module": "src/components/reusable/loaders/inline.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/loaders/loader.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Loader.",
          "name": "Loader",
          "members": [
            {
              "kind": "field",
              "name": "stopped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Animation stopped state",
              "attribute": "stopped"
            },
            {
              "kind": "field",
              "name": "overlay",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Display the loader as an overlay",
              "attribute": "overlay"
            },
            {
              "kind": "method",
              "name": "_emitStart",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_emitStop",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits when the loader been started.",
              "name": "on-start"
            },
            {
              "description": "Emits when the loader has been stopped and all animations have completed.",
              "name": "on-stop"
            }
          ],
          "attributes": [
            {
              "name": "stopped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Animation stopped state",
              "fieldName": "stopped"
            },
            {
              "name": "overlay",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Display the loader as an overlay",
              "fieldName": "overlay"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-loader",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Loader",
          "declaration": {
            "name": "Loader",
            "module": "src/components/reusable/loaders/loader.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-loader",
          "declaration": {
            "name": "Loader",
            "module": "src/components/reusable/loaders/loader.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/loaders/skeleton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Skeleton",
          "members": [
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "'rectangle' | 'circle'"
              },
              "default": "'rectangle'",
              "description": "Defines the shape of the skeleton element.",
              "attribute": "shape",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large' | undefined"
              },
              "description": "Optional: Predefined size (small, medium, large).",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string | undefined"
              },
              "description": "Optional: Custom width (overrides size if provided).",
              "attribute": "width"
            },
            {
              "kind": "field",
              "name": "height",
              "type": {
                "text": "string | undefined"
              },
              "description": "Optional: Custom height (overrides size if provided).",
              "attribute": "height"
            },
            {
              "kind": "field",
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Sets the number of skeleton lines to display.",
              "attribute": "lines"
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets whether to display inline or block.",
              "attribute": "inline"
            },
            {
              "kind": "field",
              "name": "shade",
              "type": {
                "text": "'light' | 'dark' | string"
              },
              "default": "'light'",
              "description": "Defines the shade of the skeleton.",
              "attribute": "shade"
            }
          ],
          "attributes": [
            {
              "name": "shape",
              "type": {
                "text": "'rectangle' | 'circle'"
              },
              "default": "'rectangle'",
              "description": "Defines the shape of the skeleton element.",
              "fieldName": "shape"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large' | undefined"
              },
              "description": "Optional: Predefined size (small, medium, large).",
              "fieldName": "size"
            },
            {
              "name": "width",
              "type": {
                "text": "string | undefined"
              },
              "description": "Optional: Custom width (overrides size if provided).",
              "fieldName": "width"
            },
            {
              "name": "height",
              "type": {
                "text": "string | undefined"
              },
              "description": "Optional: Custom height (overrides size if provided).",
              "fieldName": "height"
            },
            {
              "name": "lines",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Sets the number of skeleton lines to display.",
              "fieldName": "lines"
            },
            {
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets whether to display inline or block.",
              "fieldName": "inline"
            },
            {
              "name": "shade",
              "type": {
                "text": "'light' | 'dark' | string"
              },
              "default": "'light'",
              "description": "Defines the shade of the skeleton.",
              "fieldName": "shade"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Skeleton",
          "declaration": {
            "name": "Skeleton",
            "module": "src/components/reusable/loaders/skeleton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-skeleton",
          "declaration": {
            "name": "Skeleton",
            "module": "src/components/reusable/loaders/skeleton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/modal/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Modal",
          "declaration": {
            "name": "Modal",
            "module": "./modal"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/modal/modal.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Modal.",
          "name": "Modal",
          "slots": [
            {
              "description": "Slot for modal body content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the anchor button content.",
              "name": "anchor"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Modal open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'auto'",
              "description": "Modal size. `'auto'`, `'md'`, or `'lg'`.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title/heading text, required.",
              "attribute": "titleText"
            },
            {
              "kind": "field",
              "name": "labelText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text, optional.",
              "attribute": "labelText"
            },
            {
              "kind": "field",
              "name": "okText",
              "type": {
                "text": "string"
              },
              "default": "'OK'",
              "description": "OK button text.",
              "attribute": "okText"
            },
            {
              "kind": "field",
              "name": "cancelText",
              "type": {
                "text": "string"
              },
              "default": "'Cancel'",
              "description": "Cancel button text.",
              "attribute": "cancelText"
            },
            {
              "kind": "field",
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Changes the primary button styles to indicate the action is destructive.",
              "attribute": "destructive"
            },
            {
              "kind": "field",
              "name": "okDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the primary button.",
              "attribute": "okDisabled"
            },
            {
              "kind": "field",
              "name": "secondaryDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the secondary button.",
              "attribute": "secondaryDisabled"
            },
            {
              "kind": "field",
              "name": "hideFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the footer/action buttons to create a passive modal.",
              "attribute": "hideFooter"
            },
            {
              "kind": "field",
              "name": "secondaryButtonText",
              "type": {
                "text": "string"
              },
              "default": "'Secondary'",
              "description": "Secondary button text.",
              "attribute": "secondaryButtonText"
            },
            {
              "kind": "field",
              "name": "showSecondaryButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the secondary button.",
              "attribute": "showSecondaryButton"
            },
            {
              "kind": "field",
              "name": "hideCancelButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the cancel button.",
              "attribute": "hideCancelButton"
            },
            {
              "kind": "field",
              "name": "beforeClose",
              "type": {
                "text": "Function"
              },
              "description": "Function to execute before the modal can close. Useful for running checks or validations before closing. Exposes `returnValue` (`'ok'` or `'cancel'`). Must return `true` or `false`."
            },
            {
              "kind": "field",
              "name": "closeText",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Close button text.",
              "attribute": "closeText"
            },
            {
              "kind": "method",
              "name": "_openModal",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_closeModal",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "returnValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitCloseEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitOpenEvent",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits the modal close event with `returnValue` (`'ok'` or `'cancel'`).",
              "name": "on-close"
            },
            {
              "description": "Emits the modal open event.",
              "name": "on-open"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Modal open state.",
              "fieldName": "open"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'auto'",
              "description": "Modal size. `'auto'`, `'md'`, or `'lg'`.",
              "fieldName": "size"
            },
            {
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title/heading text, required.",
              "fieldName": "titleText"
            },
            {
              "name": "labelText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text, optional.",
              "fieldName": "labelText"
            },
            {
              "name": "okText",
              "type": {
                "text": "string"
              },
              "default": "'OK'",
              "description": "OK button text.",
              "fieldName": "okText"
            },
            {
              "name": "cancelText",
              "type": {
                "text": "string"
              },
              "default": "'Cancel'",
              "description": "Cancel button text.",
              "fieldName": "cancelText"
            },
            {
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Changes the primary button styles to indicate the action is destructive.",
              "fieldName": "destructive"
            },
            {
              "name": "okDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the primary button.",
              "fieldName": "okDisabled"
            },
            {
              "name": "secondaryDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the secondary button.",
              "fieldName": "secondaryDisabled"
            },
            {
              "name": "hideFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the footer/action buttons to create a passive modal.",
              "fieldName": "hideFooter"
            },
            {
              "name": "secondaryButtonText",
              "type": {
                "text": "string"
              },
              "default": "'Secondary'",
              "description": "Secondary button text.",
              "fieldName": "secondaryButtonText"
            },
            {
              "name": "showSecondaryButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the secondary button.",
              "fieldName": "showSecondaryButton"
            },
            {
              "name": "hideCancelButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the cancel button.",
              "fieldName": "hideCancelButton"
            },
            {
              "name": "closeText",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Close button text.",
              "fieldName": "closeText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-modal",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Modal",
          "declaration": {
            "name": "Modal",
            "module": "src/components/reusable/modal/modal.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-modal",
          "declaration": {
            "name": "Modal",
            "module": "src/components/reusable/modal/modal.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/notification/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Notification",
          "declaration": {
            "name": "Notification",
            "module": "./notification"
          }
        },
        {
          "kind": "js",
          "name": "NotificationContainer",
          "declaration": {
            "name": "NotificationContainer",
            "module": "./notificationContainer"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/notification/notification.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Notification component.",
          "name": "Notification",
          "slots": [
            {
              "description": "Slot for notification message body.",
              "name": "unnamed"
            },
            {
              "description": "Slot for menu.",
              "name": "actions"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "notificationTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification Title (Required).",
              "attribute": "notificationTitle"
            },
            {
              "kind": "field",
              "name": "notificationSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification subtitle.(optional)",
              "attribute": "notificationSubtitle"
            },
            {
              "kind": "field",
              "name": "timeStamp",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Timestamp of notification.\nIt is recommended to add the context along with the timestamp. Example: `Updated 2 mins ago`.",
              "attribute": "timeStamp"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Card href link",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "tagStatus",
              "type": {
                "text": "string"
              },
              "default": "'default'",
              "description": "Notification status / tag type. `'default'`, `'info'`, `'warning'`, `'success'` & `'error'`.",
              "attribute": "tagStatus"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'normal'",
              "description": "Notification type. `'normal'`, `'inline'`, `'toast'` and `'clickable'`. Clickable type can be use inside notification panel",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "type": {
                "text": "any"
              },
              "default": "{\n    success: 'Success',\n    warning: 'Warning',\n    info: 'Info',\n    error: 'Error',\n  }",
              "description": "Customizable text strings.",
              "attribute": "textStrings"
            },
            {
              "kind": "field",
              "name": "closeBtnDescription",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Close button description (Required to support accessibility).",
              "attribute": "closeBtnDescription"
            },
            {
              "kind": "field",
              "name": "assistiveNotificationTypeText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Assistive text for notification type.\nRequired for `'clickable'`, `'inline'` and `'toast'` notification types.",
              "attribute": "assistiveNotificationTypeText"
            },
            {
              "kind": "field",
              "name": "notificationRole",
              "type": {
                "text": "'alert' | 'log' | 'status' | undefined"
              },
              "description": "Notification role (Required to support accessibility).",
              "attribute": "notificationRole"
            },
            {
              "kind": "field",
              "name": "statusLabel",
              "type": {
                "text": "string"
              },
              "default": "'Status'",
              "description": "Status label (Required to support accessibility).\nAssign the localized string value for the word **Status**.",
              "attribute": "statusLabel"
            },
            {
              "kind": "field",
              "name": "unRead",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set notification mark read prop. Required ony for `type: 'clickable'`.",
              "attribute": "unRead",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hideCloseButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide close (x) button. Useful only for `type='toast'`. This required `timeout > 0` otherwise toast remain as it is when `hideCloseButton` is set true.",
              "attribute": "hideCloseButton"
            },
            {
              "kind": "field",
              "name": "timeout",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "Timeout (Default 8 seconds for Toast). Specify an optional duration the toast notification should be closed in. Only apply with `type = 'toast'`",
              "attribute": "timeout"
            },
            {
              "kind": "method",
              "name": "renderInnerUI",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_close",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClose",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleCardClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emit event for clickable notification.",
              "name": "on-notification-click"
            },
            {
              "description": "Emits when an inline/toast notification closes.",
              "name": "on-close"
            }
          ],
          "attributes": [
            {
              "name": "notificationTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification Title (Required).",
              "fieldName": "notificationTitle"
            },
            {
              "name": "notificationSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Notification subtitle.(optional)",
              "fieldName": "notificationSubtitle"
            },
            {
              "name": "timeStamp",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Timestamp of notification.\nIt is recommended to add the context along with the timestamp. Example: `Updated 2 mins ago`.",
              "fieldName": "timeStamp"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Card href link",
              "fieldName": "href"
            },
            {
              "name": "tagStatus",
              "type": {
                "text": "string"
              },
              "default": "'default'",
              "description": "Notification status / tag type. `'default'`, `'info'`, `'warning'`, `'success'` & `'error'`.",
              "fieldName": "tagStatus"
            },
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'normal'",
              "description": "Notification type. `'normal'`, `'inline'`, `'toast'` and `'clickable'`. Clickable type can be use inside notification panel",
              "fieldName": "type"
            },
            {
              "name": "textStrings",
              "type": {
                "text": "any"
              },
              "default": "{\n    success: 'Success',\n    warning: 'Warning',\n    info: 'Info',\n    error: 'Error',\n  }",
              "description": "Customizable text strings.",
              "fieldName": "textStrings"
            },
            {
              "name": "closeBtnDescription",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Close button description (Required to support accessibility).",
              "fieldName": "closeBtnDescription"
            },
            {
              "name": "assistiveNotificationTypeText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Assistive text for notification type.\nRequired for `'clickable'`, `'inline'` and `'toast'` notification types.",
              "fieldName": "assistiveNotificationTypeText"
            },
            {
              "name": "notificationRole",
              "type": {
                "text": "'alert' | 'log' | 'status' | undefined"
              },
              "description": "Notification role (Required to support accessibility).",
              "fieldName": "notificationRole"
            },
            {
              "name": "statusLabel",
              "type": {
                "text": "string"
              },
              "default": "'Status'",
              "description": "Status label (Required to support accessibility).\nAssign the localized string value for the word **Status**.",
              "fieldName": "statusLabel"
            },
            {
              "name": "unRead",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set notification mark read prop. Required ony for `type: 'clickable'`.",
              "fieldName": "unRead"
            },
            {
              "name": "hideCloseButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hide close (x) button. Useful only for `type='toast'`. This required `timeout > 0` otherwise toast remain as it is when `hideCloseButton` is set true.",
              "fieldName": "hideCloseButton"
            },
            {
              "name": "timeout",
              "type": {
                "text": "number"
              },
              "default": "8",
              "description": "Timeout (Default 8 seconds for Toast). Specify an optional duration the toast notification should be closed in. Only apply with `type = 'toast'`",
              "fieldName": "timeout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-notification",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Notification",
          "declaration": {
            "name": "Notification",
            "module": "src/components/reusable/notification/notification.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-notification",
          "declaration": {
            "name": "Notification",
            "module": "src/components/reusable/notification/notification.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/notification/notificationContainer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Notification container component for Toast notification.\nUsage is limited for <kyn-notification type=\"toast\">..</kyn-notification>",
          "name": "NotificationContainer",
          "slots": [
            {
              "description": "Slot for <kyn-notification type=\"toast\"> component.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-notification-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NotificationContainer",
          "declaration": {
            "name": "NotificationContainer",
            "module": "src/components/reusable/notification/notificationContainer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-notification-container",
          "declaration": {
            "name": "NotificationContainer",
            "module": "src/components/reusable/notification/notificationContainer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/numberInput/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "NumberInput",
          "declaration": {
            "name": "NumberInput",
            "module": "./numberInput"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/numberInput/numberInput.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Number input.",
          "name": "NumberInput",
          "slots": [
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "description": "Maximum value.",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "description": "Minimum value.",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Step value.",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "attribute": "hideLabel"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  requiredText: 'Required',\n  subtract: 'Subtract',\n  add: 'Add',\n  error: 'Error',\n}",
              "description": "Customizable text strings.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "_sizeMap",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "'small' | 'medium' | 'large'"
                }
              },
              "parameters": [
                {
                  "name": "size",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSubtract",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleAdd",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "fieldName": "readonly"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "max",
              "type": {
                "text": "number"
              },
              "description": "Maximum value.",
              "fieldName": "max"
            },
            {
              "name": "min",
              "type": {
                "text": "number"
              },
              "description": "Minimum value.",
              "fieldName": "min"
            },
            {
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Step value.",
              "fieldName": "step"
            },
            {
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "fieldName": "hideLabel"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Customizable text strings.",
              "fieldName": "textStrings"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-number-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NumberInput",
          "declaration": {
            "name": "NumberInput",
            "module": "src/components/reusable/numberInput/numberInput.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-number-input",
          "declaration": {
            "name": "NumberInput",
            "module": "src/components/reusable/numberInput/numberInput.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/overflowMenu/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "OverflowMenu",
          "declaration": {
            "name": "OverflowMenu",
            "module": "./overflowMenu"
          }
        },
        {
          "kind": "js",
          "name": "OverflowMenuItem",
          "declaration": {
            "name": "OverflowMenuItem",
            "module": "./overflowMenuItem"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/overflowMenu/overflowMenu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Overflow Menu.",
          "name": "OverflowMenu",
          "slots": [
            {
              "description": "Slot for overflow menu items.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Menu open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "anchorRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchors the menu to the right of the button.",
              "attribute": "anchorRight"
            },
            {
              "kind": "field",
              "name": "verticalDots",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "3 dots vertical orientation.",
              "attribute": "verticalDots"
            },
            {
              "kind": "field",
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Use fixed instead of absolute position. Useful when placed within elements with overflow scroll.",
              "attribute": "fixed"
            },
            {
              "kind": "field",
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "'Toggle Menu'",
              "description": "Button assistive text..",
              "attribute": "assistiveText"
            },
            {
              "kind": "method",
              "name": "_emitToggleEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "toggleMenu",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_positionMenu",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClickOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleEscapePress",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMenuItems"
            },
            {
              "kind": "method",
              "name": "getMenu"
            }
          ],
          "events": [
            {
              "description": "Capture the open/close event and emits the new state.",
              "name": "on-toggle"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Menu open state.",
              "fieldName": "open"
            },
            {
              "name": "anchorRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchors the menu to the right of the button.",
              "fieldName": "anchorRight"
            },
            {
              "name": "verticalDots",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "3 dots vertical orientation.",
              "fieldName": "verticalDots"
            },
            {
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Use fixed instead of absolute position. Useful when placed within elements with overflow scroll.",
              "fieldName": "fixed"
            },
            {
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "'Toggle Menu'",
              "description": "Button assistive text..",
              "fieldName": "assistiveText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-overflow-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverflowMenu",
          "declaration": {
            "name": "OverflowMenu",
            "module": "src/components/reusable/overflowMenu/overflowMenu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-overflow-menu",
          "declaration": {
            "name": "OverflowMenu",
            "module": "src/components/reusable/overflowMenu/overflowMenu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/overflowMenu/overflowMenuItem.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Overflow Menu.",
          "name": "OverflowMenuItem",
          "slots": [
            {
              "description": "Slot for item text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Makes the item a link.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds destructive styles.",
              "attribute": "destructive"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Item disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Item description text for screen reader's",
              "attribute": "description"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkOverflow",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Makes the item a link.",
              "fieldName": "href"
            },
            {
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds destructive styles.",
              "fieldName": "destructive"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Item disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Item description text for screen reader's",
              "fieldName": "description"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-overflow-menu-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverflowMenuItem",
          "declaration": {
            "name": "OverflowMenuItem",
            "module": "src/components/reusable/overflowMenu/overflowMenuItem.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-overflow-menu-item",
          "declaration": {
            "name": "OverflowMenuItem",
            "module": "src/components/reusable/overflowMenu/overflowMenuItem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagetitle/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PageTitle",
          "declaration": {
            "name": "PageTitle",
            "module": "./pageTitle"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagetitle/pageTitle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Page Title",
          "name": "PageTitle",
          "slots": [
            {
              "description": "Slot for icon. Use size 56 * 56 as per UX guidelines.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "headLine",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Headline text.",
              "attribute": "headLine"
            },
            {
              "kind": "field",
              "name": "pageTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Page title text (required).",
              "attribute": "pageTitle"
            },
            {
              "kind": "field",
              "name": "subTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Page subtitle text.",
              "attribute": "subTitle"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'primary'",
              "description": "Type of page title `'primary'` & `'secondary'`.",
              "attribute": "type"
            }
          ],
          "attributes": [
            {
              "name": "headLine",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Headline text.",
              "fieldName": "headLine"
            },
            {
              "name": "pageTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Page title text (required).",
              "fieldName": "pageTitle"
            },
            {
              "name": "subTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Page subtitle text.",
              "fieldName": "subTitle"
            },
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'primary'",
              "description": "Type of page title `'primary'` & `'secondary'`.",
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-page-title",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PageTitle",
          "declaration": {
            "name": "PageTitle",
            "module": "src/components/reusable/pagetitle/pageTitle.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-page-title",
          "declaration": {
            "name": "PageTitle",
            "module": "src/components/reusable/pagetitle/pageTitle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/Pagination.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination` Web Component.\n\nA component that provides pagination functionality, enabling the user to\nnavigate through large datasets by splitting them into discrete chunks.\nIntegrates with other utility components like items range display, page size dropdown,\nand navigation buttons.",
          "name": "Pagination",
          "members": [
            {
              "kind": "field",
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items that need pagination.",
              "attribute": "count",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current active page number.",
              "attribute": "pageNumber",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "attribute": "pageSize",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSizeOptions",
              "type": {
                "text": "number[]"
              },
              "default": "[5, 10, 20, 30, 40, 50, 100]",
              "description": "Available options for the page size.",
              "attribute": "pageSizeOptions"
            },
            {
              "kind": "field",
              "name": "_numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Number of pages."
            },
            {
              "kind": "field",
              "name": "pageSizeDropdownLabel",
              "default": "PAGE_SIZE_LABEL",
              "description": "Label for the page size dropdown. Required for accessibility.",
              "attribute": "pageSizeDropdownLabel"
            },
            {
              "kind": "field",
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "attribute": "hideItemsRange"
            },
            {
              "kind": "field",
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "attribute": "hidePageSizeDropdown"
            },
            {
              "kind": "field",
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "attribute": "hideNavigationButtons"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\n    showing: 'Showing',\n    of: 'of',\n    items: 'items',\n    pages: 'pages',\n    itemsPerPage: 'Items per page:',\n    previousPage: 'Previous page',\n    nextPage: 'Next page',\n  }",
              "description": "Customizable text strings",
              "attribute": "textStrings"
            },
            {
              "kind": "method",
              "name": "handlePageSizeChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The emitted custom event with the selected page size."
                }
              ],
              "description": "Handler for the event when the page size is changed by the user.\nUpdates the `pageSize` and resets the `pageNumber` to 1."
            },
            {
              "kind": "method",
              "name": "handlePageNumberChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The emitted custom event with the selected page number."
                }
              ],
              "description": "Handler for the event when the page number is changed by the user.\nUpdates the `pageNumber`."
            }
          ],
          "events": [
            {
              "description": "Dispatched when the page size changes.",
              "name": "on-page-size-change"
            },
            {
              "description": "Dispatched when the currently active page changes.",
              "name": "on-page-number-change"
            }
          ],
          "attributes": [
            {
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items that need pagination.",
              "fieldName": "count"
            },
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current active page number.",
              "fieldName": "pageNumber"
            },
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "fieldName": "pageSize"
            },
            {
              "name": "pageSizeOptions",
              "type": {
                "text": "number[]"
              },
              "default": "[5, 10, 20, 30, 40, 50, 100]",
              "description": "Available options for the page size.",
              "fieldName": "pageSizeOptions"
            },
            {
              "name": "pageSizeDropdownLabel",
              "default": "PAGE_SIZE_LABEL",
              "description": "Label for the page size dropdown. Required for accessibility.",
              "fieldName": "pageSizeDropdownLabel"
            },
            {
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "fieldName": "hideItemsRange"
            },
            {
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "fieldName": "hidePageSizeDropdown"
            },
            {
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "fieldName": "hideNavigationButtons"
            },
            {
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\n    showing: 'Showing',\n    of: 'of',\n    items: 'items',\n    pages: 'pages',\n    itemsPerPage: 'Items per page:',\n    previousPage: 'Previous page',\n    nextPage: 'Next page',\n  }",
              "description": "Customizable text strings",
              "fieldName": "textStrings"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "src/components/reusable/pagination/Pagination.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination",
          "declaration": {
            "name": "Pagination",
            "module": "src/components/reusable/pagination/Pagination.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Pagination",
          "declaration": {
            "name": "Pagination",
            "module": "./Pagination"
          }
        },
        {
          "kind": "js",
          "name": "PaginationItemsRange",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "./pagination-items-range"
          }
        },
        {
          "kind": "js",
          "name": "PaginationPageSizeDropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "./pagination-page-size-dropdown"
          }
        },
        {
          "kind": "js",
          "name": "PaginationNavigationButtons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "./pagination-navigation-buttons"
          }
        },
        {
          "kind": "js",
          "name": "PaginationSkeleton",
          "declaration": {
            "name": "PaginationSkeleton",
            "module": "./pagination.skeleton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-items-range.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-items-range` Web Component.\n\nThis component is responsible for displaying the range of items being displayed\nin the context of pagination. It shows which items (by number) are currently visible\nand the total number of items.",
          "name": "PaginationItemsRange",
          "members": [
            {
              "kind": "field",
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items.",
              "attribute": "count",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current page number being displayed.",
              "attribute": "pageNumber",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "attribute": "pageSize",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "itemsRangeText",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "isMobile",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Total number of items.",
              "fieldName": "count"
            },
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "Current page number being displayed.",
              "fieldName": "pageNumber"
            },
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of items displayed per page.",
              "fieldName": "pageSize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-items-range",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationItemsRange",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "src/components/reusable/pagination/pagination-items-range.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-items-range",
          "declaration": {
            "name": "PaginationItemsRange",
            "module": "src/components/reusable/pagination/pagination-items-range.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-navigation-buttons.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-navigation-buttons` Web Component.\n\nThis component provides navigational controls for pagination.\nIt includes back and next buttons, along with displaying the current page and total pages.",
          "name": "PaginationNavigationButtons",
          "members": [
            {
              "kind": "field",
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "pageNumber",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "numberOfPages",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "SMALLEST_PAGE_NUMBER",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1"
            },
            {
              "kind": "method",
              "name": "handleButtonClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "next",
                  "type": {
                    "text": "boolean"
                  },
                  "description": "If true, will move to the next page, otherwise to the previous page"
                }
              ],
              "description": "Handles the button click event, either moving to the next page or previous page"
            }
          ],
          "events": [
            {
              "name": "on-page-number-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the page number is changed."
            }
          ],
          "attributes": [
            {
              "name": "pageNumber",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "pageNumber"
            },
            {
              "name": "numberOfPages",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "numberOfPages"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-navigation-buttons",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationNavigationButtons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "src/components/reusable/pagination/pagination-navigation-buttons.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-navigation-buttons",
          "declaration": {
            "name": "PaginationNavigationButtons",
            "module": "src/components/reusable/pagination/pagination-navigation-buttons.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination-page-size-dropdown.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-page-size-dropdown` Web Component.\n\nThis component provides a dropdown to select the page size for pagination.\nIt emits events when the selected page size changes.",
          "name": "PaginationPageSizeDropdown",
          "members": [
            {
              "kind": "field",
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Current page size.",
              "attribute": "pageSize",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pageSizeOptions",
              "type": {
                "text": "Array<number>"
              },
              "default": "[5, 10, 20, 30, 40, 50]",
              "description": "Available options for the page size.",
              "attribute": "pageSizeOptions"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The dropdown change event."
                }
              ],
              "description": "Handles the dropdown change event."
            }
          ],
          "events": [
            {
              "name": "on-page-size-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "The event fired when the page size changes."
            }
          ],
          "attributes": [
            {
              "name": "pageSize",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Current page size.",
              "fieldName": "pageSize"
            },
            {
              "name": "pageSizeOptions",
              "type": {
                "text": "Array<number>"
              },
              "default": "[5, 10, 20, 30, 40, 50]",
              "description": "Available options for the page size.",
              "fieldName": "pageSizeOptions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-page-size-dropdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationPageSizeDropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "src/components/reusable/pagination/pagination-page-size-dropdown.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-page-size-dropdown",
          "declaration": {
            "name": "PaginationPageSizeDropdown",
            "module": "src/components/reusable/pagination/pagination-page-size-dropdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/pagination/pagination.skeleton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-pagination-skeleton` Web Component.",
          "name": "PaginationSkeleton",
          "members": [
            {
              "kind": "field",
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "attribute": "hideItemsRange"
            },
            {
              "kind": "field",
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "attribute": "hidePageSizeDropdown"
            },
            {
              "kind": "field",
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "attribute": "hideNavigationButtons"
            }
          ],
          "attributes": [
            {
              "name": "hideItemsRange",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the items range display.",
              "fieldName": "hideItemsRange"
            },
            {
              "name": "hidePageSizeDropdown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the page size dropdown.",
              "fieldName": "hidePageSizeDropdown"
            },
            {
              "name": "hideNavigationButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to hide the navigation buttons.",
              "fieldName": "hideNavigationButtons"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-pagination-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaginationSkeleton",
          "declaration": {
            "name": "PaginationSkeleton",
            "module": "src/components/reusable/pagination/pagination.skeleton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-pagination-skeleton",
          "declaration": {
            "name": "PaginationSkeleton",
            "module": "src/components/reusable/pagination/pagination.skeleton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/progressBar/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ProgressBar",
          "declaration": {
            "name": "ProgressBar",
            "module": "./progressBar"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/progressBar/progressBar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`<kyn-progress-bar>` -- progress bar status indicator component.",
          "name": "ProgressBar",
          "slots": [
            {
              "description": "Slot for tooltip text content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "showInlineLoadStatus",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets visibility of optional inline load status spinner.",
              "attribute": "showInlineLoadStatus"
            },
            {
              "kind": "field",
              "name": "showActiveHelperText",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Controls whether to show default helper text for active state.",
              "attribute": "showActiveHelperText"
            },
            {
              "kind": "field",
              "name": "progressBarId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets progress bar html id property for accessibility (ex: `example-progress-bar`).",
              "attribute": "progressBarId"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'active' | 'success' | 'error'"
              },
              "default": "'active'",
              "description": "Sets progress bar status mode.",
              "attribute": "status"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "description": "Sets initial progress bar value (optionally hard-coded).",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "100",
              "description": "Sets manual max value (default = 100).",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets optional progress bar label.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "helperText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets optional helper text that appears underneath progress bar element.",
              "attribute": "helperText"
            },
            {
              "kind": "field",
              "name": "unit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets the unit for progress measurement (ex: 'MB', 'GB', '%')",
              "attribute": "unit"
            },
            {
              "kind": "field",
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "attribute": "hideLabel"
            },
            {
              "kind": "method",
              "name": "renderProgressBar",
              "privacy": "private",
              "parameters": [
                {
                  "name": "currentStatus",
                  "type": {
                    "text": "ProgressStatus"
                  }
                },
                {
                  "name": "currentValue",
                  "type": {
                    "text": "number | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderProgressBarLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "currentStatus",
                  "type": {
                    "text": "ProgressStatus"
                  }
                },
                {
                  "name": "currentValue",
                  "type": {
                    "text": "number | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStatusIconOrLoader",
              "privacy": "private",
              "parameters": [
                {
                  "name": "currentStatus",
                  "type": {
                    "text": "ProgressStatus"
                  }
                },
                {
                  "name": "currentValue",
                  "type": {
                    "text": "number | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getProgressBarClasses",
              "privacy": "private",
              "parameters": [
                {
                  "name": "status",
                  "type": {
                    "text": "ProgressStatus"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getHelperText",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getCurrentStatus",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "ProgressStatus"
                }
              },
              "parameters": [
                {
                  "name": "currentValue",
                  "type": {
                    "text": "number | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "startProgress",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "cancelAnimation",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "showInlineLoadStatus",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets visibility of optional inline load status spinner.",
              "fieldName": "showInlineLoadStatus"
            },
            {
              "name": "showActiveHelperText",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Controls whether to show default helper text for active state.",
              "fieldName": "showActiveHelperText"
            },
            {
              "name": "progressBarId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets progress bar html id property for accessibility (ex: `example-progress-bar`).",
              "fieldName": "progressBarId"
            },
            {
              "name": "status",
              "type": {
                "text": "'active' | 'success' | 'error'"
              },
              "default": "'active'",
              "description": "Sets progress bar status mode.",
              "fieldName": "status"
            },
            {
              "name": "value",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "description": "Sets initial progress bar value (optionally hard-coded).",
              "fieldName": "value"
            },
            {
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "100",
              "description": "Sets manual max value (default = 100).",
              "fieldName": "max"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets optional progress bar label.",
              "fieldName": "label"
            },
            {
              "name": "helperText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets optional helper text that appears underneath progress bar element.",
              "fieldName": "helperText"
            },
            {
              "name": "unit",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets the unit for progress measurement (ex: 'MB', 'GB', '%')",
              "fieldName": "unit"
            },
            {
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "fieldName": "hideLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-progress-bar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProgressBar",
          "declaration": {
            "name": "ProgressBar",
            "module": "src/components/reusable/progressBar/progressBar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-progress-bar",
          "declaration": {
            "name": "ProgressBar",
            "module": "src/components/reusable/progressBar/progressBar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "./radioButton"
          }
        },
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "./radioButtonGroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/radioButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio button.",
          "name": "RadioButton",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button disabled state, inherited from the parent group.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-radio-change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button value.",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button disabled state, inherited from the parent group.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-radio-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "src/components/reusable/radioButton/radioButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-radio-button",
          "declaration": {
            "name": "RadioButton",
            "module": "src/components/reusable/radioButton/radioButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/radioButtonGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio button group container.",
          "name": "RadioButtonGroup",
          "slots": [
            {
              "description": "Slot for individual radio buttons.",
              "name": "unnamed"
            },
            {
              "description": "Slot for description text.",
              "name": "description"
            },
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "horizontal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group horizontal layout.",
              "attribute": "horizontal"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  required: 'Required',\n  error: 'Error',\n}",
              "description": "Text string customization.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleRadioChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value.",
              "name": "on-radio-group-change"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text",
              "fieldName": "label"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "horizontal",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group horizontal layout.",
              "fieldName": "horizontal"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-radio-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "src/components/reusable/radioButton/radioButtonGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-radio-button-group",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "src/components/reusable/radioButton/radioButtonGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/search/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Search",
          "declaration": {
            "name": "Search",
            "module": "./search"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/search/search.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Search",
          "name": "Search",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'Search'",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expandable style search.",
              "attribute": "expandable"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input & button size.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "suggestions",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "description": "Auto-suggest array of strings that should match the current value. Update this array externally after on-input.",
              "attribute": "suggestions"
            },
            {
              "kind": "field",
              "name": "expandableSearchBtnDescription",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Expandable style search button description (Required to support accessibility).",
              "attribute": "expandableSearchBtnDescription"
            },
            {
              "kind": "field",
              "name": "assistiveTextStrings",
              "default": "{\n  searchSuggestions: 'Search suggestions.',\n  noMatches: 'No matches found for',\n  selected: 'Selected',\n  found: 'Found',\n}",
              "description": "Assistive text strings.",
              "attribute": "assistiveTextStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "_buttonSizeMap",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleButtonClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSuggestionClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "suggestion",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSuggestionWithMouseUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "suggestion",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSuggestionWithMouseDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSearchKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "keyCode",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_checkForMatchingSuggestions",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits the value on text input/clear.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'Search'",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Expandable style search.",
              "fieldName": "expandable"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input & button size.",
              "fieldName": "size"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "fieldName": "readonly"
            },
            {
              "name": "suggestions",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "description": "Auto-suggest array of strings that should match the current value. Update this array externally after on-input.",
              "fieldName": "suggestions"
            },
            {
              "name": "expandableSearchBtnDescription",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Expandable style search button description (Required to support accessibility).",
              "fieldName": "expandableSearchBtnDescription"
            },
            {
              "name": "assistiveTextStrings",
              "default": "_defaultTextStrings",
              "description": "Assistive text strings.",
              "fieldName": "assistiveTextStrings"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-search",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Search",
          "declaration": {
            "name": "Search",
            "module": "src/components/reusable/search/search.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-search",
          "declaration": {
            "name": "Search",
            "module": "src/components/reusable/search/search.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/sideDrawer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "SideDrawer",
          "declaration": {
            "name": "SideDrawer",
            "module": "./sideDrawer"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/sideDrawer/sideDrawer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Side Drawer.",
          "name": "SideDrawer",
          "slots": [
            {
              "description": "Slot for drawer body content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for the anchor button content.",
              "name": "anchor"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Drawer open state.",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Drawer size. `'md'`, or `'sm'`.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title / Heading text, required.",
              "attribute": "titleText"
            },
            {
              "kind": "field",
              "name": "labelText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text, optional.",
              "attribute": "labelText"
            },
            {
              "kind": "field",
              "name": "submitBtnText",
              "type": {
                "text": "string"
              },
              "default": "'Ok'",
              "description": "Submit button text.",
              "attribute": "submitBtnText"
            },
            {
              "kind": "field",
              "name": "cancelBtnText",
              "type": {
                "text": "string"
              },
              "default": "'Cancel'",
              "description": "Cancel button text.",
              "attribute": "cancelBtnText"
            },
            {
              "kind": "field",
              "name": "closeBtnDescription",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Close button description (Required to support accessibility).",
              "attribute": "closeBtnDescription"
            },
            {
              "kind": "field",
              "name": "submitBtnDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the primary button.",
              "attribute": "submitBtnDisabled"
            },
            {
              "kind": "field",
              "name": "hideFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine whether needs footer",
              "attribute": "hideFooter"
            },
            {
              "kind": "field",
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Changes the primary button styles to indicate the action is destructive.",
              "attribute": "destructive"
            },
            {
              "kind": "field",
              "name": "secondaryButtonText",
              "type": {
                "text": "string"
              },
              "default": "'Secondary'",
              "description": "Secondary button text.",
              "attribute": "secondaryButtonText"
            },
            {
              "kind": "field",
              "name": "showSecondaryButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the secondary button.",
              "attribute": "showSecondaryButton"
            },
            {
              "kind": "field",
              "name": "hideCancelButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the cancel button.",
              "attribute": "hideCancelButton"
            },
            {
              "kind": "field",
              "name": "beforeClose",
              "type": {
                "text": "Function"
              },
              "description": "Function to execute before the Drawer can close. Useful for running checks or validations before closing. Exposes `returnValue` (`'ok'` or `'cancel'`). Must return `true` or `false`."
            },
            {
              "kind": "method",
              "name": "_openDrawer",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_closeDrawer",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                },
                {
                  "name": "returnValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitCloseEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitOpenEvent",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits the drawer close event with `returnValue` (`'ok'` or `'cancel'`).",
              "name": "on-close"
            },
            {
              "description": "Emits the drawer open event.",
              "name": "on-open"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Drawer open state.",
              "fieldName": "open"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Drawer size. `'md'`, or `'sm'`.",
              "fieldName": "size"
            },
            {
              "name": "titleText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Title / Heading text, required.",
              "fieldName": "titleText"
            },
            {
              "name": "labelText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text, optional.",
              "fieldName": "labelText"
            },
            {
              "name": "submitBtnText",
              "type": {
                "text": "string"
              },
              "default": "'Ok'",
              "description": "Submit button text.",
              "fieldName": "submitBtnText"
            },
            {
              "name": "cancelBtnText",
              "type": {
                "text": "string"
              },
              "default": "'Cancel'",
              "description": "Cancel button text.",
              "fieldName": "cancelBtnText"
            },
            {
              "name": "closeBtnDescription",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Close button description (Required to support accessibility).",
              "fieldName": "closeBtnDescription"
            },
            {
              "name": "submitBtnDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the primary button.",
              "fieldName": "submitBtnDisabled"
            },
            {
              "name": "hideFooter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine whether needs footer",
              "fieldName": "hideFooter"
            },
            {
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Changes the primary button styles to indicate the action is destructive.",
              "fieldName": "destructive"
            },
            {
              "name": "secondaryButtonText",
              "type": {
                "text": "string"
              },
              "default": "'Secondary'",
              "description": "Secondary button text.",
              "fieldName": "secondaryButtonText"
            },
            {
              "name": "showSecondaryButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the secondary button.",
              "fieldName": "showSecondaryButton"
            },
            {
              "name": "hideCancelButton",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the cancel button.",
              "fieldName": "hideCancelButton"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-side-drawer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SideDrawer",
          "declaration": {
            "name": "SideDrawer",
            "module": "src/components/reusable/sideDrawer/sideDrawer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-side-drawer",
          "declaration": {
            "name": "SideDrawer",
            "module": "src/components/reusable/sideDrawer/sideDrawer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/splitButton/defs.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/splitButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "SplitButton",
          "declaration": {
            "name": "SplitButton",
            "module": "./splitButton"
          }
        },
        {
          "kind": "js",
          "name": "SplitButtonOption",
          "declaration": {
            "name": "SplitButtonOption",
            "module": "./splitButtonOption"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/splitButton/splitButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Split Button",
          "name": "SplitButton",
          "slots": [
            {
              "description": "Slot for split button options.",
              "name": "unnamed"
            },
            {
              "description": "Slot for an icon (optional).",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ARIA label for the buttons for accessibility.",
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Split button name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "kind",
              "type": {
                "text": "SPLIT_BTN_KINDS"
              },
              "description": "Specifies the visual appearance/kind of the split button.",
              "attribute": "kind"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "SPLIT_BTN_SIZES"
              },
              "description": "Specifies the size of the split button.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "iconPosition",
              "type": {
                "text": "SPLIIT_BTN_ICON_POSITION"
              },
              "description": "Specifies the position of the icon relative to any split button text. Default `'left'`. This is optional and work with icon slot.",
              "attribute": "iconPosition"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Split button text (required)",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the split button is disabled.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the split button indicates a destructive action.",
              "attribute": "destructive",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "menuMinWidth",
              "type": {
                "text": "string"
              },
              "default": "'initial'",
              "description": "Menu CSS min-width value.",
              "attribute": "menuMinWidth"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Listbox/menu open state.",
              "attribute": "open"
            },
            {
              "kind": "method",
              "name": "handleListBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleButtonKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleListKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "keyCode",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "toggleDropdown",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClickOut",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleBlur",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handlePrimaryClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emitValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the event and emits the selected value and original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ARIA label for the buttons for accessibility.",
              "fieldName": "description"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Split button name.",
              "fieldName": "name"
            },
            {
              "name": "kind",
              "type": {
                "text": "SPLIT_BTN_KINDS"
              },
              "description": "Specifies the visual appearance/kind of the split button.",
              "fieldName": "kind"
            },
            {
              "name": "size",
              "type": {
                "text": "SPLIT_BTN_SIZES"
              },
              "description": "Specifies the size of the split button.",
              "fieldName": "size"
            },
            {
              "name": "iconPosition",
              "type": {
                "text": "SPLIIT_BTN_ICON_POSITION"
              },
              "description": "Specifies the position of the icon relative to any split button text. Default `'left'`. This is optional and work with icon slot.",
              "fieldName": "iconPosition"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Split button text (required)",
              "fieldName": "label"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the split button is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "destructive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the split button indicates a destructive action.",
              "fieldName": "destructive"
            },
            {
              "name": "menuMinWidth",
              "type": {
                "text": "string"
              },
              "default": "'initial'",
              "description": "Menu CSS min-width value.",
              "fieldName": "menuMinWidth"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Listbox/menu open state.",
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-split-btn",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SplitButton",
          "declaration": {
            "name": "SplitButton",
            "module": "src/components/reusable/splitButton/splitButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-split-btn",
          "declaration": {
            "name": "SplitButton",
            "module": "src/components/reusable/splitButton/splitButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/splitButton/splitButtonOption.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Split button option.",
          "name": "SplitButtonOption",
          "slots": [
            {
              "description": "Slot for option text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Split button option value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Split button option selected state.",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Split button menu option disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Emits the option details to the parent split button.",
              "name": "on-action-click"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Split button option value.",
              "fieldName": "value"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Split button option selected state.",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Split button menu option disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-splitbutton-option",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SplitButtonOption",
          "declaration": {
            "name": "SplitButtonOption",
            "module": "src/components/reusable/splitButton/splitButtonOption.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-splitbutton-option",
          "declaration": {
            "name": "SplitButtonOption",
            "module": "src/components/reusable/splitButton/splitButtonOption.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/stepper/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Stepper",
          "declaration": {
            "name": "Stepper",
            "module": "./stepper"
          }
        },
        {
          "kind": "js",
          "name": "StepperItem",
          "declaration": {
            "name": "StepperItem",
            "module": "./stepperItem"
          }
        },
        {
          "kind": "js",
          "name": "StepperItemChild",
          "declaration": {
            "name": "StepperItemChild",
            "module": "./stepperItemChild"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/stepper/stepper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Stepper",
          "name": "Stepper",
          "slots": [
            {
              "description": "Slot for step items.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "stepperType",
              "type": {
                "text": "string"
              },
              "default": "'procedure'",
              "description": "Stepper type `'procedure'` & `'status'`.\n\nprocedure: Allows a user to move through a series of steps that need to be completed, such as filling out a series of forms. The user can therefore know where they are in the sequence, and can go back to previous steps if needed. Procedure should use the `'large'` size stepper.\n\nstatus: Should not allow the user navigate to previous steps for ex: sequential forms, payment gateway etc. Should use the `'small'` size to avoid unnecessary clutter.\n\nNote: Read the stepper guidelines for more info.",
              "attribute": "stepperType"
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Wheter the stepper is in vertical type.",
              "attribute": "vertical"
            },
            {
              "kind": "field",
              "name": "stepperSize",
              "type": {
                "text": "string"
              },
              "default": "'large'",
              "description": "Stepper size `'large'` & `'small'`.",
              "attribute": "stepperSize"
            },
            {
              "kind": "field",
              "name": "currentIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Curent index of stepper. Usefull for navigation logic like next, prev etc.",
              "attribute": "currentIndex"
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_determineFirstLastSteps",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleStepClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the event and emits the active step and original event details when click on any step title. This is only for procedure type stepper. Status stepper doesn't emit this event.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "stepperType",
              "type": {
                "text": "string"
              },
              "default": "'procedure'",
              "description": "Stepper type `'procedure'` & `'status'`.\n\nprocedure: Allows a user to move through a series of steps that need to be completed, such as filling out a series of forms. The user can therefore know where they are in the sequence, and can go back to previous steps if needed. Procedure should use the `'large'` size stepper.\n\nstatus: Should not allow the user navigate to previous steps for ex: sequential forms, payment gateway etc. Should use the `'small'` size to avoid unnecessary clutter.\n\nNote: Read the stepper guidelines for more info.",
              "fieldName": "stepperType"
            },
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Wheter the stepper is in vertical type.",
              "fieldName": "vertical"
            },
            {
              "name": "stepperSize",
              "type": {
                "text": "string"
              },
              "default": "'large'",
              "description": "Stepper size `'large'` & `'small'`.",
              "fieldName": "stepperSize"
            },
            {
              "name": "currentIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Curent index of stepper. Usefull for navigation logic like next, prev etc.",
              "fieldName": "currentIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-stepper",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Stepper",
          "declaration": {
            "name": "Stepper",
            "module": "src/components/reusable/stepper/stepper.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-stepper",
          "declaration": {
            "name": "Stepper",
            "module": "src/components/reusable/stepper/stepper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/stepper/stepperItem.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Stepper Item.",
          "name": "StepperItem",
          "slots": [
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            },
            {
              "description": "Children slot. Used for nested children in vertical stepper. Visible only when step state is active. Do not use inside stepperType `'status'`.",
              "name": "child"
            },
            {
              "description": "Optional slot for content in vertical stepper. Visible only when step state is active.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the stepper is in vertical type.",
              "attribute": "vertical"
            },
            {
              "kind": "field",
              "name": "stepSize",
              "type": {
                "text": "string"
              },
              "default": "'large'",
              "description": "Stepper size `'large'` & `'small'`.",
              "attribute": "stepSize"
            },
            {
              "kind": "field",
              "name": "stepName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Step name.",
              "attribute": "stepName"
            },
            {
              "kind": "field",
              "name": "stepTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Step title.",
              "attribute": "stepTitle"
            },
            {
              "kind": "field",
              "name": "stepLink",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Step link.",
              "attribute": "stepLink"
            },
            {
              "kind": "field",
              "name": "stepState",
              "type": {
                "text": "string"
              },
              "default": "'pending'",
              "description": "Step state. `'pending'`, `'active'`, `'completed'`, `'excluded'`, `'warning'` & `'destructive'`.\n\n`'pending'`, `'active'` and `'completed'` / `'excluded'` states has 0%, 50% & 100% progress set internally.",
              "attribute": "stepState"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable step.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "showCounter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optional. Show counter for vertical stepper when stepState is `'pending'`.",
              "attribute": "showCounter"
            },
            {
              "kind": "method",
              "name": "_handleChildToggle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleStepClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleChildSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getProgressValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            }
          ],
          "events": [
            {
              "description": "Emits the step details to the parent stepper component when click on step title.",
              "name": "on-step-click"
            }
          ],
          "attributes": [
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the stepper is in vertical type.",
              "fieldName": "vertical"
            },
            {
              "name": "stepSize",
              "type": {
                "text": "string"
              },
              "default": "'large'",
              "description": "Stepper size `'large'` & `'small'`.",
              "fieldName": "stepSize"
            },
            {
              "name": "stepName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Step name.",
              "fieldName": "stepName"
            },
            {
              "name": "stepTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Step title.",
              "fieldName": "stepTitle"
            },
            {
              "name": "stepLink",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Step link.",
              "fieldName": "stepLink"
            },
            {
              "name": "stepState",
              "type": {
                "text": "string"
              },
              "default": "'pending'",
              "description": "Step state. `'pending'`, `'active'`, `'completed'`, `'excluded'`, `'warning'` & `'destructive'`.\n\n`'pending'`, `'active'` and `'completed'` / `'excluded'` states has 0%, 50% & 100% progress set internally.",
              "fieldName": "stepState"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable step.",
              "fieldName": "disabled"
            },
            {
              "name": "showCounter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optional. Show counter for vertical stepper when stepState is `'pending'`.",
              "fieldName": "showCounter"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-stepper-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StepperItem",
          "declaration": {
            "name": "StepperItem",
            "module": "src/components/reusable/stepper/stepperItem.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-stepper-item",
          "declaration": {
            "name": "StepperItem",
            "module": "src/components/reusable/stepper/stepperItem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/stepper/stepperItemChild.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Stepper Item child.",
          "name": "StepperItemChild",
          "slots": [
            {
              "description": "Slot for other elements.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "childTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Child Title. Required for nested child inside step.",
              "attribute": "childTitle"
            },
            {
              "kind": "field",
              "name": "childLink",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Child link.",
              "attribute": "childLink"
            },
            {
              "kind": "field",
              "name": "childSubTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional Child Subtitle.",
              "attribute": "childSubTitle"
            },
            {
              "kind": "field",
              "name": "childState",
              "type": {
                "text": "string"
              },
              "default": "'pending'",
              "description": "Child State. `'pending'`, `'active'` & `'completed'`.",
              "attribute": "childState"
            },
            {
              "kind": "method",
              "name": "_handleChildStepClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getProgressValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            }
          ],
          "events": [
            {
              "description": "Emits event on child click. Only for vertical mode.",
              "name": "on-child-click"
            }
          ],
          "attributes": [
            {
              "name": "childTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Child Title. Required for nested child inside step.",
              "fieldName": "childTitle"
            },
            {
              "name": "childLink",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Child link.",
              "fieldName": "childLink"
            },
            {
              "name": "childSubTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional Child Subtitle.",
              "fieldName": "childSubTitle"
            },
            {
              "name": "childState",
              "type": {
                "text": "string"
              },
              "default": "'pending'",
              "description": "Child State. `'pending'`, `'active'` & `'completed'`.",
              "fieldName": "childState"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-stepper-item-child",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StepperItemChild",
          "declaration": {
            "name": "StepperItemChild",
            "module": "src/components/reusable/stepper/stepperItemChild.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-stepper-item-child",
          "declaration": {
            "name": "StepperItemChild",
            "module": "src/components/reusable/stepper/stepperItemChild.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tabs/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Tabs",
          "declaration": {
            "name": "Tabs",
            "module": "./tabs"
          }
        },
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "./tab"
          }
        },
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "./tabPanel"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tabs/tab.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tabs.",
          "name": "Tab",
          "slots": [
            {
              "description": "Slot for tab button text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Tab ID, required.",
              "attribute": "id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab selected state. Must match Tab Panel visible state.",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "_handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  },
                  "description": "The parameter \"e\" is an event object that represents the event that triggered the\nclick event handler."
                }
              ],
              "description": "Dispatches a custom event called 'tab-activated' with the original event and tabId as details,\nif the tab is not selected."
            }
          ],
          "attributes": [
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Tab ID, required.",
              "fieldName": "id"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab selected state. Must match Tab Panel visible state.",
              "fieldName": "selected"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tab",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tab",
          "declaration": {
            "name": "Tab",
            "module": "src/components/reusable/tabs/tab.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tab",
          "declaration": {
            "name": "Tab",
            "module": "src/components/reusable/tabs/tab.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tabs/tabPanel.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tabs.",
          "name": "TabPanel",
          "slots": [
            {
              "description": "Slot for tab content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Matching Tab ID, required.",
              "attribute": "tabId"
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab Panel visible state.  Must match Tab selected state.",
              "attribute": "visible",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "noPadding",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Remove side padding (left/right) on tab panel.",
              "attribute": "noPadding"
            }
          ],
          "attributes": [
            {
              "name": "tabId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Matching Tab ID, required.",
              "fieldName": "tabId"
            },
            {
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tab Panel visible state.  Must match Tab selected state.",
              "fieldName": "visible"
            },
            {
              "name": "noPadding",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Remove side padding (left/right) on tab panel.",
              "fieldName": "noPadding"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabPanel",
          "declaration": {
            "name": "TabPanel",
            "module": "src/components/reusable/tabs/tabPanel.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tab-panel",
          "declaration": {
            "name": "TabPanel",
            "module": "src/components/reusable/tabs/tabPanel.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tabs/tabs.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tabs.",
          "name": "Tabs",
          "slots": [
            {
              "description": "Slot for kyn-tab-panel components.",
              "name": "unnamed"
            },
            {
              "description": "Slot for kyn-tab components.",
              "name": "tabs"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabStyle",
              "type": {
                "text": "string"
              },
              "default": "'contained'",
              "description": "Tab style. `'contained'` or `'line'`.",
              "attribute": "tabStyle"
            },
            {
              "kind": "field",
              "name": "tabSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tab buttons, `'sm'` or `'md'`. Icon size: 16px.",
              "attribute": "tabSize"
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Vertical orientation.",
              "attribute": "vertical"
            },
            {
              "kind": "field",
              "name": "disableAutoFocusUpdate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enables tab content change on focus with keyboard navigation/assistive technologies.",
              "attribute": "disableAutoFocusUpdate"
            },
            {
              "kind": "method",
              "name": "_handleSlotChangeTabs",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  },
                  "description": "The parameter \"e\" is an event object that contains information about the event\nthat triggered the handleChange function."
                }
              ],
              "description": "Updates children and emits a change event based on the provided\nevent details when a child kyn-tab is clicked."
            },
            {
              "kind": "method",
              "name": "_updateChildrenSelection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "selectedTabId",
                  "type": {
                    "text": "string"
                  },
                  "description": "The selectedTabId parameter is a string that represents the ID of\nthe tab that is currently selected."
                },
                {
                  "name": "updatePanel",
                  "default": "true"
                }
              ],
              "description": "Updates the selected property of tabs and the visible property of tab panels based on\nthe selected tab ID."
            },
            {
              "kind": "method",
              "name": "_emitChangeEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "origEvent",
                  "type": {
                    "text": "any"
                  },
                  "description": "The origEvent parameter is the original event object that triggered the\nchange event. It could be any type of event object, such as a click event or a keydown event."
                },
                {
                  "name": "selectedTabId",
                  "type": {
                    "text": "string"
                  },
                  "description": "The selectedTabId parameter is a string that represents the ID of\nthe selected tab."
                }
              ],
              "description": "Creates and dispatches a custom event called 'on-change' with the provided original event and\nselected tab ID as details."
            },
            {
              "kind": "method",
              "name": "_handleKeyboard",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  },
                  "description": "The parameter `e` is an event object that represents the keyboard event. It\ncontains information about the keyboard event, such as the key code of the pressed key."
                }
              ],
              "description": "Handles keyboard events for navigating between tabs.",
              "return": {
                "type": {
                  "text": ""
                }
              }
            }
          ],
          "events": [
            {
              "description": "Emits the new selected Tab ID when switching tabs.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "tabStyle",
              "type": {
                "text": "string"
              },
              "default": "'contained'",
              "description": "Tab style. `'contained'` or `'line'`.",
              "fieldName": "tabStyle"
            },
            {
              "name": "tabSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tab buttons, `'sm'` or `'md'`. Icon size: 16px.",
              "fieldName": "tabSize"
            },
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Vertical orientation.",
              "fieldName": "vertical"
            },
            {
              "name": "disableAutoFocusUpdate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enables tab content change on focus with keyboard navigation/assistive technologies.",
              "fieldName": "disableAutoFocusUpdate"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tabs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tabs",
          "declaration": {
            "name": "Tabs",
            "module": "src/components/reusable/tabs/tabs.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tabs",
          "declaration": {
            "name": "Tabs",
            "module": "src/components/reusable/tabs/tabs.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/defs.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Table",
          "declaration": {
            "name": "Table",
            "module": "./table"
          }
        },
        {
          "kind": "js",
          "name": "TableCell",
          "declaration": {
            "name": "TableCell",
            "module": "./table-cell"
          }
        },
        {
          "kind": "js",
          "name": "TableRow",
          "declaration": {
            "name": "TableRow",
            "module": "./table-row"
          }
        },
        {
          "kind": "js",
          "name": "TableBody",
          "declaration": {
            "name": "TableBody",
            "module": "./table-body"
          }
        },
        {
          "kind": "js",
          "name": "TableHead",
          "declaration": {
            "name": "TableHead",
            "module": "./table-head"
          }
        },
        {
          "kind": "js",
          "name": "TableHeader",
          "declaration": {
            "name": "TableHeader",
            "module": "./table-header"
          }
        },
        {
          "kind": "js",
          "name": "TableFoot",
          "declaration": {
            "name": "TableFoot",
            "module": "./table-foot"
          }
        },
        {
          "kind": "js",
          "name": "TableFooter",
          "declaration": {
            "name": "TableFooter",
            "module": "./table-footer"
          }
        },
        {
          "kind": "js",
          "name": "TableLegend",
          "declaration": {
            "name": "TableLegend",
            "module": "./table-legend"
          }
        },
        {
          "kind": "js",
          "name": "TableLegendItem",
          "declaration": {
            "name": "TableLegendItem",
            "module": "./table-legend-item"
          }
        },
        {
          "kind": "js",
          "name": "TableToolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "./table-toolbar"
          }
        },
        {
          "kind": "js",
          "name": "TableContainer",
          "declaration": {
            "name": "TableContainer",
            "module": "./table-container"
          }
        },
        {
          "kind": "js",
          "name": "TableHeaderRow",
          "declaration": {
            "name": "TableHeaderRow",
            "module": "./table-header-row"
          }
        },
        {
          "kind": "js",
          "name": "TableExpandedRow",
          "declaration": {
            "name": "TableExpandedRow",
            "module": "./table-expanded-row"
          }
        },
        {
          "kind": "js",
          "name": "TableSkeleton",
          "declaration": {
            "name": "TableSkeleton",
            "module": "./table.skeleton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-body.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tbody` Web Component.\n\nRepresents the body section of Shidoka's design system tables. Designed to provide\na consistent look and feel, and can offer striped rows for enhanced readability.",
          "name": "TableBody",
          "slots": [
            {
              "description": "The content slot for adding rows (`<kyn-tr>`) within the table body.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the rows in the table body should be striped.",
              "attribute": "striped",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the row's striped property when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "on-rows-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the rows in the table body change."
            }
          ],
          "attributes": [
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the rows in the table body should be striped.",
              "fieldName": "striped"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tbody",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableBody",
          "declaration": {
            "name": "TableBody",
            "module": "src/components/reusable/table/table-body.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tbody",
          "declaration": {
            "name": "TableBody",
            "module": "src/components/reusable/table/table-body.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-cell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-td` Web Component.\n\nRepresents a table cell (data cell) within Shidoka's design system tables.\nAllows customization of alignment and can reflect the sort direction when\nused within sortable columns.",
          "name": "TableCell",
          "slots": [
            {
              "description": "The content slot for adding table data inside the cell.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "dense",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Determines the text alignment of the table cell's content.",
              "attribute": "align",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "width",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "maxWidth",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "minWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a minimum width for the cell;\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "minWidth",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the cell.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dim the cell.",
              "attribute": "dimmed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the cell's dense properties when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Determines the text alignment of the table cell's content.",
              "fieldName": "align"
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "width"
            },
            {
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "maxWidth"
            },
            {
              "name": "minWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a minimum width for the cell;\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "minWidth"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the cell.",
              "fieldName": "disabled"
            },
            {
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Dim the cell.",
              "fieldName": "dimmed"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-td",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableCell",
          "declaration": {
            "name": "TableCell",
            "module": "src/components/reusable/table/table-cell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-td",
          "declaration": {
            "name": "TableCell",
            "module": "src/components/reusable/table/table-cell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table-container` Web Component.\n\nProvides a container for Shidoka's design system tables. It's designed to encapsulate\nand apply styles uniformly across the table elements.",
          "name": "TableContainer",
          "slots": [
            {
              "description": "The content slot for adding table and related elements.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "tabIndex",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableContainer",
          "declaration": {
            "name": "TableContainer",
            "module": "src/components/reusable/table/table-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-container",
          "declaration": {
            "name": "TableContainer",
            "module": "src/components/reusable/table/table-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "tableContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "tableContext",
          "declaration": {
            "name": "tableContext",
            "module": "src/components/reusable/table/table-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-expanded-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "\n`kyn-expanded-tr` Web Component.\n\nDesigned to display additional details for a row in a table.\nThe row is expandable and can be expanded/collapsed by toggling the plus/minus icons.",
          "name": "TableExpandedRow",
          "slots": [
            {
              "description": "The slot for adding content to the expandable details section.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "colSpan",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The number of columns that the expanded row should span.\nReflects the `colspan` attribute.",
              "attribute": "colspan"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "`true` if the table row should be expanded.",
              "attribute": "expanded",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "colspan",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "The number of columns that the expanded row should span.\nReflects the `colspan` attribute.",
              "fieldName": "colSpan"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "`true` if the table row should be expanded.",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-expanded-tr",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableExpandedRow",
          "declaration": {
            "name": "TableExpandedRow",
            "module": "src/components/reusable/table/table-expanded-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-expanded-tr",
          "declaration": {
            "name": "TableExpandedRow",
            "module": "src/components/reusable/table/table-expanded-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-foot.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tfoot` Web Component.\n\nRepresents a custom table foot (`<tfoot>`) for Shidoka's design system tables.\nDesigned to contain and style table footer rows (`<tr>`) and footer cells (`<td>`).",
          "name": "TableFoot",
          "slots": [
            {
              "description": "The content slot for adding table foot rows.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tfoot",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableFoot",
          "declaration": {
            "name": "TableFoot",
            "module": "src/components/reusable/table/table-foot.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tfoot",
          "declaration": {
            "name": "TableFoot",
            "module": "src/components/reusable/table/table-foot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Table Footer\n\nIntended to contain Legend and Pagination.",
          "name": "TableFooter",
          "slots": [
            {
              "description": "Default slot.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-footer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableFooter",
          "declaration": {
            "name": "TableFooter",
            "module": "src/components/reusable/table/table-footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-footer",
          "declaration": {
            "name": "TableFooter",
            "module": "src/components/reusable/table/table-footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-head.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-thead` Web Component.\n\nRepresents a custom table head (`<thead>`) for Shidoka's design system tables.\nDesigned to contain and style table header rows (`<tr>`) and header cells (`<th>`).",
          "name": "TableHead",
          "slots": [
            {
              "description": "The content slot for adding table header rows (`<kyn-header-tr>`).",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "stickyHeader",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Update the stickyHeader property when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChildSort",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "stickyHeader"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-thead",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableHead",
          "declaration": {
            "name": "TableHead",
            "module": "src/components/reusable/table/table-head.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-thead",
          "declaration": {
            "name": "TableHead",
            "module": "src/components/reusable/table/table-head.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-header-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-header-tr` Web Component.\n\nThe `<kyn-header-tr>` component is designed to function as the\nheader row within a table that's part of Shidoka's design system.",
          "name": "TableHeaderRow",
          "members": [
            {
              "kind": "field",
              "name": "expandableColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "expandableColumnWidth: The width of the expandable column.",
              "attribute": "expandableColumnWidth"
            },
            {
              "kind": "field",
              "name": "multiSelectColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "multiSelectColumnWidth: The width of the multi-select column.",
              "attribute": "multiSelectColumnWidth"
            },
            {
              "kind": "method",
              "name": "handleToggleSelectionAll",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Toggles the selection state of all rows in the table."
            },
            {
              "kind": "method",
              "name": "updateHeaderCheckboxState",
              "parameters": [
                {
                  "name": "indeterminate",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Updates the state of the header checkbox based on the number of\nselected rows."
            },
            {
              "kind": "field",
              "name": "rowId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "rowId: String - Unique identifier for the row.",
              "attribute": "rowId",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "selected: Boolean indicating whether the row is selected.\nReflects the `selected` attribute.",
              "attribute": "selected",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\nselectable using checkboxes.",
              "attribute": "checkboxSelection",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\nin dense mode.",
              "attribute": "dense",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "unread",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Unread row state.",
              "attribute": "unread",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "locked: Boolean indicating whether the row is locked.\nIf a row is selected before it is locked, it remains selected even after being locked.\nA row can be selected and disabled/locked simultaneously.",
              "attribute": "locked",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expandable: Boolean indicating whether the row is expandable.",
              "attribute": "expandable",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expanded: Boolean indicating whether the row is expanded.",
              "attribute": "expanded",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disabled: Boolean indicating whether the row is disabled.\nA disabled row is not allowed to have any user interactions.\nA row can be selected and disabled/locked simultaneously.",
              "attribute": "disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "preventHighlight: Boolean indicating whether the row should not be highlighted.",
              "attribute": "preventHighlight",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dimmed: Boolean indicating whether the row is dimmed.\nA row should not be selected and dimmed simultaneously.",
              "attribute": "dimmed",
              "reflects": true,
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  expanded: 'Expanded',\n  collapsed: 'Collapsed',\n}",
              "description": "Text string customization.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              },
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the cell's dense and ellipsis properties when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleRowSelectionChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of selection state for a specific row.",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleUserInitiatedToggleExpando",
              "parameters": [
                {
                  "name": "expanded",
                  "default": "!this.expanded"
                }
              ],
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleExpanding",
              "privacy": "private",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            }
          ],
          "events": [
            {
              "name": "on-header-checkbox-toggle",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "on-row-select",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "table-row-expando-beingtoggled",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "table-row-expando-toggled",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "expandableColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "expandableColumnWidth: The width of the expandable column.",
              "fieldName": "expandableColumnWidth"
            },
            {
              "name": "multiSelectColumnWidth",
              "type": {
                "text": "string"
              },
              "default": "'64px'",
              "description": "multiSelectColumnWidth: The width of the multi-select column.",
              "fieldName": "multiSelectColumnWidth"
            },
            {
              "name": "rowId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "rowId: String - Unique identifier for the row.",
              "fieldName": "rowId",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "selected: Boolean indicating whether the row is selected.\nReflects the `selected` attribute.",
              "fieldName": "selected",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\nselectable using checkboxes.",
              "fieldName": "checkboxSelection",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\nin dense mode.",
              "fieldName": "dense",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "unread",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Unread row state.",
              "fieldName": "unread",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "locked: Boolean indicating whether the row is locked.\nIf a row is selected before it is locked, it remains selected even after being locked.\nA row can be selected and disabled/locked simultaneously.",
              "fieldName": "locked",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expandable: Boolean indicating whether the row is expandable.",
              "fieldName": "expandable",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expanded: Boolean indicating whether the row is expanded.",
              "fieldName": "expanded",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disabled: Boolean indicating whether the row is disabled.\nA disabled row is not allowed to have any user interactions.\nA row can be selected and disabled/locked simultaneously.",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "preventHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "preventHighlight: Boolean indicating whether the row should not be highlighted.",
              "fieldName": "preventHighlight",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dimmed: Boolean indicating whether the row is dimmed.\nA row should not be selected and dimmed simultaneously.",
              "fieldName": "dimmed",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Text string customization.",
              "fieldName": "textStrings",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            }
          ],
          "superclass": {
            "name": "TableRow",
            "module": "/src/components/reusable/table/table-row"
          },
          "tagName": "kyn-header-tr",
          "customElement": true,
          "slots": [
            {
              "description": "The content slot for adding table cells (`kyn-td` or other relevant cells).",
              "name": "unnamed",
              "inheritedFrom": {
                "name": "TableRow",
                "module": "src/components/reusable/table/table-row.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableHeaderRow",
          "declaration": {
            "name": "TableHeaderRow",
            "module": "src/components/reusable/table/table-header-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-tr",
          "declaration": {
            "name": "TableHeaderRow",
            "module": "src/components/reusable/table/table-header-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-th` Web Component.\n\nRepresents a custom table header cell (`<th>`) for Shidoka's design system tables.\nProvides sorting functionality when enabled and allows alignment customization.",
          "name": "TableHeader",
          "slots": [
            {
              "description": "The content slot for adding header text or content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the cell should have a denser layout.",
              "attribute": "dense",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the cell's dense properties when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Specifies the alignment of the content within the table header.\nOptions: 'left', 'center', 'right'",
              "attribute": "align",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies if the column is sortable.\nIf set to true, an arrow icon will be displayed unpon hover,\nallowing the user to toggle sort directions.",
              "attribute": "sortable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              },
              "description": "Specifies the direction of sorting applied to the column.",
              "attribute": "sortDirection",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "headerLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The textual content associated with this component.\nRepresents the primary content or label that will be displayed.",
              "attribute": "headerLabel"
            },
            {
              "kind": "field",
              "name": "sortKey",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The unique identifier representing this column header.\nUsed to distinguish between different sortable columns and\nto ensure that only one column is sorted at a time.",
              "attribute": "sortKey"
            },
            {
              "kind": "field",
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the content should be hidden from visual view but remain accessible\nto screen readers for accessibility purposes. When set to `true`, the content\nwill not be visibly shown, but its content can still be read by screen readers.\nThis is especially useful for providing additional context or information to\nassistive technologies without cluttering the visual UI.",
              "attribute": "visiblyHidden"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "width",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "maxWidth",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "minWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a minimum width for the cell;\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "attribute": "minWidth",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "resetSort",
              "description": "Resets the sorting direction of the component to its default state.\nUseful for initializing or clearing any applied sorting on the element."
            },
            {
              "kind": "method",
              "name": "toggleSortDirection",
              "privacy": "private",
              "description": "Toggles the sort direction between ascending, descending, and default states.\nIt also dispatches an event to notify parent components of the sorting change."
            },
            {
              "kind": "method",
              "name": "getTextContent"
            }
          ],
          "events": [
            {
              "name": "on-sort-changed",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the sort direction is changed."
            }
          ],
          "attributes": [
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines if the cell should have a denser layout.",
              "fieldName": "dense"
            },
            {
              "name": "align",
              "type": {
                "text": "TABLE_CELL_ALIGN"
              },
              "description": "Specifies the alignment of the content within the table header.\nOptions: 'left', 'center', 'right'",
              "fieldName": "align"
            },
            {
              "name": "sortable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specifies if the column is sortable.\nIf set to true, an arrow icon will be displayed unpon hover,\nallowing the user to toggle sort directions.",
              "fieldName": "sortable"
            },
            {
              "name": "sortDirection",
              "type": {
                "text": "SORT_DIRECTION"
              },
              "description": "Specifies the direction of sorting applied to the column.",
              "fieldName": "sortDirection"
            },
            {
              "name": "headerLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The textual content associated with this component.\nRepresents the primary content or label that will be displayed.",
              "fieldName": "headerLabel"
            },
            {
              "name": "sortKey",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The unique identifier representing this column header.\nUsed to distinguish between different sortable columns and\nto ensure that only one column is sorted at a time.",
              "fieldName": "sortKey"
            },
            {
              "name": "visiblyHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determines whether the content should be hidden from visual view but remain accessible\nto screen readers for accessibility purposes. When set to `true`, the content\nwill not be visibly shown, but its content can still be read by screen readers.\nThis is especially useful for providing additional context or information to\nassistive technologies without cluttering the visual UI.",
              "fieldName": "visiblyHidden"
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a fixed width for the cell.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "width"
            },
            {
              "name": "maxWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a maximum width for the cell; contents exceeding this limit will be truncated with ellipsis.\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "maxWidth"
            },
            {
              "name": "minWidth",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets a minimum width for the cell;\nAccepts standard CSS width values (e.g., '150px', '50%').",
              "fieldName": "minWidth"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-th",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableHeader",
          "declaration": {
            "name": "TableHeader",
            "module": "src/components/reusable/table/table-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-th",
          "declaration": {
            "name": "TableHeader",
            "module": "src/components/reusable/table/table-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-legend-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Table Legend Item",
          "name": "TableLegendItem",
          "slots": [
            {
              "description": "Default slot for icon and text.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-legend-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableLegendItem",
          "declaration": {
            "name": "TableLegendItem",
            "module": "src/components/reusable/table/table-legend-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-legend-item",
          "declaration": {
            "name": "TableLegendItem",
            "module": "src/components/reusable/table/table-legend-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-legend.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Table Legend",
          "name": "TableLegend",
          "slots": [
            {
              "description": "Default slot for Legend Items.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-legend",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableLegend",
          "declaration": {
            "name": "TableLegend",
            "module": "src/components/reusable/table/table-legend.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-legend",
          "declaration": {
            "name": "TableLegend",
            "module": "src/components/reusable/table/table-legend.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-tr` Web Component.\n\nRepresents a table row (`<tr>`) equivalent for custom tables created with Shidoka's design system.\nIt primarily acts as a container for individual table cells and behaves similarly to a native `<tr>` element.",
          "name": "TableRow",
          "slots": [
            {
              "description": "The content slot for adding table cells (`kyn-td` or other relevant cells).",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rowId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "rowId: String - Unique identifier for the row.",
              "attribute": "rowId",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "selected: Boolean indicating whether the row is selected.\nReflects the `selected` attribute.",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\nselectable using checkboxes.",
              "attribute": "checkboxSelection",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\nin dense mode.",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "unread",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Unread row state.",
              "attribute": "unread"
            },
            {
              "kind": "field",
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "locked: Boolean indicating whether the row is locked.\nIf a row is selected before it is locked, it remains selected even after being locked.\nA row can be selected and disabled/locked simultaneously.",
              "attribute": "locked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expandable: Boolean indicating whether the row is expandable.",
              "attribute": "expandable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expanded: Boolean indicating whether the row is expanded.",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disabled: Boolean indicating whether the row is disabled.\nA disabled row is not allowed to have any user interactions.\nA row can be selected and disabled/locked simultaneously.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "preventHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "preventHighlight: Boolean indicating whether the row should not be highlighted.",
              "attribute": "preventHighlight",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dimmed: Boolean indicating whether the row is dimmed.\nA row should not be selected and dimmed simultaneously.",
              "attribute": "dimmed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  expanded: 'Expanded',\n  collapsed: 'Collapsed',\n}",
              "description": "Text string customization.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "field",
              "name": "handleContextChange",
              "description": "Updates the cell's dense and ellipsis properties when the context changes.",
              "parameters": [
                {
                  "description": "The updated context.",
                  "name": "context",
                  "type": {
                    "text": "TableContextType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleRowSelectionChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of selection state for a specific row."
            },
            {
              "kind": "method",
              "name": "_handleUserInitiatedToggleExpando",
              "parameters": [
                {
                  "name": "expanded",
                  "default": "!this.expanded"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleExpanding",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "on-row-select",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "table-row-expando-beingtoggled",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "table-row-expando-toggled",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "rowId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "rowId: String - Unique identifier for the row.",
              "fieldName": "rowId"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "selected: Boolean indicating whether the row is selected.\nReflects the `selected` attribute.",
              "fieldName": "selected"
            },
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "checkboxSelection: Boolean indicating whether rows should be\nselectable using checkboxes.",
              "fieldName": "checkboxSelection"
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dense: Boolean indicating whether the table should be displayed\nin dense mode.",
              "fieldName": "dense"
            },
            {
              "name": "unread",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Unread row state.",
              "fieldName": "unread"
            },
            {
              "name": "locked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "locked: Boolean indicating whether the row is locked.\nIf a row is selected before it is locked, it remains selected even after being locked.\nA row can be selected and disabled/locked simultaneously.",
              "fieldName": "locked"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expandable: Boolean indicating whether the row is expandable.",
              "fieldName": "expandable"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "expanded: Boolean indicating whether the row is expanded.",
              "fieldName": "expanded"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disabled: Boolean indicating whether the row is disabled.\nA disabled row is not allowed to have any user interactions.\nA row can be selected and disabled/locked simultaneously.",
              "fieldName": "disabled"
            },
            {
              "name": "preventHighlight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "preventHighlight: Boolean indicating whether the row should not be highlighted.",
              "fieldName": "preventHighlight"
            },
            {
              "name": "dimmed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "dimmed: Boolean indicating whether the row is dimmed.\nA row should not be selected and dimmed simultaneously.",
              "fieldName": "dimmed"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tr",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableRow",
          "declaration": {
            "name": "TableRow",
            "module": "src/components/reusable/table/table-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tr",
          "declaration": {
            "name": "TableRow",
            "module": "src/components/reusable/table/table-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table-toolbar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table-toolbar` Web Component.\n\nThis component provides a toolbar for tables, primarily featuring a title and additional content.\nThe title is rendered prominently, while the slot can be used for controls, buttons, or other interactive elements.",
          "name": "TableToolbar",
          "slots": [
            {
              "description": "The primary content slot for controls, buttons, or other toolbar content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The title for the toolbar",
              "attribute": "tableTitle"
            },
            {
              "kind": "field",
              "name": "tableSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The subtitle for the toolbar",
              "attribute": "tableSubtitle"
            }
          ],
          "attributes": [
            {
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The title for the toolbar",
              "fieldName": "tableTitle"
            },
            {
              "name": "tableSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The subtitle for the toolbar",
              "fieldName": "tableSubtitle"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-toolbar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableToolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "src/components/reusable/table/table-toolbar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-toolbar",
          "declaration": {
            "name": "TableToolbar",
            "module": "src/components/reusable/table/table-toolbar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table.skeleton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table-skeleton` Web Component.\nA skeleton loading state for the table component that mirrors its structure.",
          "name": "TableSkeleton",
          "members": [
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of skeleton rows to display.",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "showPagination",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Shows/hides pagination skeleton.",
              "attribute": "showPagination"
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets dense mode value.",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets striped rows value.",
              "attribute": "striped"
            },
            {
              "kind": "field",
              "name": "hideTableTitles",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Show/hide table header.",
              "attribute": "hideTableTitles"
            },
            {
              "kind": "field",
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Fixed layout boolean.",
              "attribute": "fixedLayout"
            },
            {
              "kind": "field",
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title to display in the table toolbar.",
              "attribute": "tableTitle"
            },
            {
              "kind": "field",
              "name": "tableSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets subtitle to display in the table toolbar.",
              "attribute": "tableSubtitle"
            },
            {
              "kind": "field",
              "name": "showGlobalFilter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Shows/hides golbal filter skeleton.",
              "attribute": "showGlobalFilter"
            },
            {
              "kind": "method",
              "name": "renderSkeletonCell",
              "privacy": "private",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "'thead' | 'tbody'"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "rows",
              "type": {
                "text": "number"
              },
              "default": "5",
              "description": "Number of skeleton rows to display.",
              "fieldName": "rows"
            },
            {
              "name": "showPagination",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Shows/hides pagination skeleton.",
              "fieldName": "showPagination"
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets dense mode value.",
              "fieldName": "dense"
            },
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets striped rows value.",
              "fieldName": "striped"
            },
            {
              "name": "hideTableTitles",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Show/hide table header.",
              "fieldName": "hideTableTitles"
            },
            {
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Fixed layout boolean.",
              "fieldName": "fixedLayout"
            },
            {
              "name": "tableTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title to display in the table toolbar.",
              "fieldName": "tableTitle"
            },
            {
              "name": "tableSubtitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets subtitle to display in the table toolbar.",
              "fieldName": "tableSubtitle"
            },
            {
              "name": "showGlobalFilter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Shows/hides golbal filter skeleton.",
              "fieldName": "showGlobalFilter"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TableSkeleton",
          "declaration": {
            "name": "TableSkeleton",
            "module": "src/components/reusable/table/table.skeleton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table-skeleton",
          "declaration": {
            "name": "TableSkeleton",
            "module": "src/components/reusable/table/table.skeleton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/table/table.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`kyn-table` Web Component.\nThis component provides a table with sorting, pagination, and selection capabilities.\nIt is designed to be used with the `kyn-table-toolbar` and `kyn-table-container` components.",
          "name": "Table",
          "members": [
            {
              "kind": "field",
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "description": "checkboxSelection: Boolean indicating whether rows should be\nselectable using checkboxes.",
              "default": "false",
              "attribute": "checkboxSelection"
            },
            {
              "kind": "field",
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "description": "striped: Boolean indicating whether rows should have alternate\ncoloring.",
              "default": "false",
              "attribute": "striped"
            },
            {
              "kind": "field",
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "description": "stickyHeader: Boolean indicating whether the table header\nshould be sticky.",
              "default": "false",
              "attribute": "stickyHeader"
            },
            {
              "kind": "field",
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "description": "dense: Boolean indicating whether the table should be displayed\nin dense mode.",
              "default": "false",
              "attribute": "dense"
            },
            {
              "kind": "field",
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "description": "fixedLayout: Boolean indicating whether the table should have a fixed layout.\nThis will set the table's layout to fixed, which means the table and column widths\nwill be determined by the width of the columns and not by the content of the cells.\nThis can be useful when you want to have a consistent column width across multiple tables.",
              "default": "false",
              "attribute": "fixedLayout"
            },
            {
              "kind": "method",
              "name": "_updateHeaderCheckbox",
              "privacy": "private",
              "description": "Updates the state of the header checkbox based on the number of\nselected rows."
            },
            {
              "kind": "method",
              "name": "_handleRowSelectionChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the change of selection state for a specific row."
            },
            {
              "kind": "method",
              "name": "_toggleSelectionAll",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Toggles the selection state of all rows in the table."
            },
            {
              "kind": "method",
              "name": "updateAfterExternalChanges",
              "privacy": "public",
              "description": "Resets the selection state of all rows in the table.\nThis method is called when the table is reset or cleared.",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "getSelectedRows",
              "privacy": "public",
              "description": "Returns the selected rows in the table.",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "_handleRowsChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The custom event containing the updated rows."
                }
              ],
              "description": "Handles the change of rows in the table body."
            },
            {
              "kind": "method",
              "name": "_updateSelectionStates",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "on-row-selection-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the selection state of a row is toggled."
            },
            {
              "name": "on-all-rows-selection-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when the selection state of all rows is toggled."
            }
          ],
          "attributes": [
            {
              "name": "checkboxSelection",
              "type": {
                "text": "boolean"
              },
              "description": "checkboxSelection: Boolean indicating whether rows should be\nselectable using checkboxes.",
              "default": "false",
              "fieldName": "checkboxSelection"
            },
            {
              "name": "striped",
              "type": {
                "text": "boolean"
              },
              "description": "striped: Boolean indicating whether rows should have alternate\ncoloring.",
              "default": "false",
              "fieldName": "striped"
            },
            {
              "name": "stickyHeader",
              "type": {
                "text": "boolean"
              },
              "description": "stickyHeader: Boolean indicating whether the table header\nshould be sticky.",
              "default": "false",
              "fieldName": "stickyHeader"
            },
            {
              "name": "dense",
              "type": {
                "text": "boolean"
              },
              "description": "dense: Boolean indicating whether the table should be displayed\nin dense mode.",
              "default": "false",
              "fieldName": "dense"
            },
            {
              "name": "fixedLayout",
              "type": {
                "text": "boolean"
              },
              "description": "fixedLayout: Boolean indicating whether the table should have a fixed layout.\nThis will set the table's layout to fixed, which means the table and column widths\nwill be determined by the width of the columns and not by the content of the cells.\nThis can be useful when you want to have a consistent column width across multiple tables.",
              "default": "false",
              "fieldName": "fixedLayout"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Table",
          "declaration": {
            "name": "Table",
            "module": "src/components/reusable/table/table.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-table",
          "declaration": {
            "name": "Table",
            "module": "src/components/reusable/table/table.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tag/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Tag",
          "declaration": {
            "name": "Tag",
            "module": "./tag"
          }
        },
        {
          "kind": "js",
          "name": "TagGroup",
          "declaration": {
            "name": "TagGroup",
            "module": "./tagGroup"
          }
        },
        {
          "kind": "js",
          "name": "TagSkeleton",
          "declaration": {
            "name": "TagSkeleton",
            "module": "./tag.skeleton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tag/tag.skeleton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TagSkeleton",
          "members": [
            {
              "kind": "field",
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'sm'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "attribute": "tagSize"
            }
          ],
          "attributes": [
            {
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'sm'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "fieldName": "tagSize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tag-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TagSkeleton",
          "declaration": {
            "name": "TagSkeleton",
            "module": "src/components/reusable/tag/tag.skeleton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tag-skeleton",
          "declaration": {
            "name": "TagSkeleton",
            "module": "src/components/reusable/tag/tag.skeleton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tag/tag.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tag.",
          "name": "Tag",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Tag name (Required).",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "attribute": "tagSize"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specify if the Tag is disabled.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine if Tag state is filter.",
              "attribute": "filter"
            },
            {
              "kind": "field",
              "name": "noTruncation",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Removes label text truncation.",
              "attribute": "noTruncation"
            },
            {
              "kind": "field",
              "name": "clickable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine if Tag is clickable.",
              "attribute": "clickable"
            },
            {
              "kind": "field",
              "name": "tagColor",
              "type": {
                "text": "string"
              },
              "default": "'spruce'",
              "description": "Color variants. Default spruce",
              "attribute": "tagColor"
            },
            {
              "kind": "field",
              "name": "clearTagText",
              "type": {
                "text": "string"
              },
              "default": "'Clear Tag'",
              "description": "Clear Tag Text to improve accessibility",
              "attribute": "clearTagText"
            },
            {
              "kind": "method",
              "name": "handleTagClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTagClearPress",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTagClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTagPress",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the close event and emits the Tag value. Works with filterable tags.",
              "name": "on-close"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Tag name (Required).",
              "fieldName": "label"
            },
            {
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "fieldName": "tagSize"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Specify if the Tag is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine if Tag state is filter.",
              "fieldName": "filter"
            },
            {
              "name": "noTruncation",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Removes label text truncation.",
              "fieldName": "noTruncation"
            },
            {
              "name": "clickable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determine if Tag is clickable.",
              "fieldName": "clickable"
            },
            {
              "name": "tagColor",
              "type": {
                "text": "string"
              },
              "default": "'spruce'",
              "description": "Color variants. Default spruce",
              "fieldName": "tagColor"
            },
            {
              "name": "clearTagText",
              "type": {
                "text": "string"
              },
              "default": "'Clear Tag'",
              "description": "Clear Tag Text to improve accessibility",
              "fieldName": "clearTagText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tag",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tag",
          "declaration": {
            "name": "Tag",
            "module": "src/components/reusable/tag/tag.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tag",
          "declaration": {
            "name": "Tag",
            "module": "src/components/reusable/tag/tag.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tag/tagGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tag & Tag Group",
          "name": "TagGroup",
          "slots": [
            {
              "description": "Slot for individual tags and tagsskeleton.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\n    showAll: 'Show all',\n    showLess: 'Show less',\n  }",
              "description": "Text string customization.",
              "attribute": "textStrings"
            },
            {
              "kind": "field",
              "name": "limitTags",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Limits visible tags (5) behind a \"Show all\" button. Use only if having more than 5 tags.",
              "attribute": "limitTags"
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tag group filter",
              "attribute": "filter"
            },
            {
              "kind": "field",
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "attribute": "tagSize"
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_toggleRevealed",
              "privacy": "private",
              "parameters": [
                {
                  "name": "revealed",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "textStrings",
              "type": {
                "text": "object"
              },
              "default": "{\n    showAll: 'Show all',\n    showLess: 'Show less',\n  }",
              "description": "Text string customization.",
              "fieldName": "textStrings"
            },
            {
              "name": "limitTags",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Limits visible tags (5) behind a \"Show all\" button. Use only if having more than 5 tags.",
              "fieldName": "limitTags"
            },
            {
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Tag group filter",
              "fieldName": "filter"
            },
            {
              "name": "tagSize",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Size of the tag, `'md'` (default) or `'sm'`. Icon size: 16px.",
              "fieldName": "tagSize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tag-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TagGroup",
          "declaration": {
            "name": "TagGroup",
            "module": "src/components/reusable/tag/tagGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tag-group",
          "declaration": {
            "name": "TagGroup",
            "module": "src/components/reusable/tag/tagGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textArea/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "./textArea"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textArea/textArea.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Text area.",
          "name": "TextArea",
          "slots": [
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "description": "Maximum number of characters.",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "description": "Minimum number of characters.",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number"
              },
              "description": "textarea rows attribute. The number of visible text lines.",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  requiredText: 'Required',\n  errorText: 'Error',\n}",
              "description": "Customizable text strings.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "fieldName": "readonly"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "description": "Maximum number of characters.",
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "description": "Minimum number of characters.",
              "fieldName": "minLength"
            },
            {
              "name": "rows",
              "type": {
                "text": "number"
              },
              "description": "textarea rows attribute. The number of visible text lines.",
              "fieldName": "rows"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Customizable text strings.",
              "fieldName": "textStrings"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-text-area",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "src/components/reusable/textArea/textArea.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-text-area",
          "declaration": {
            "name": "TextArea",
            "module": "src/components/reusable/textArea/textArea.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textInput/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "./textInput"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textInput/textInput.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Text input.",
          "name": "TextInput",
          "slots": [
            {
              "description": "Slot for contextual icon.",
              "name": "icon"
            },
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'text' | 'password' | 'email' | 'search' | 'tel' | 'url'"
              },
              "default": "'text'",
              "description": "Input type, limited to options that are \"text like\".",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "description": "RegEx pattern to validate.",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "description": "Maximum number of characters.",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "description": "Minimum number of characters.",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "iconRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Place icon on the right.",
              "attribute": "iconRight"
            },
            {
              "kind": "field",
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "attribute": "hideLabel"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  requiredText: 'Required',\n  clearAll: 'Clear all',\n  errorText: 'Error',\n}",
              "description": "Customizable text strings.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "_handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleClear",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_emitValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "determineIfSlotted",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "type",
              "type": {
                "text": "'text' | 'password' | 'email' | 'search' | 'tel' | 'url'"
              },
              "default": "'text'",
              "description": "Input type, limited to options that are \"text like\".",
              "fieldName": "type"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "fieldName": "readonly"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "description": "RegEx pattern to validate.",
              "fieldName": "pattern"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "description": "Maximum number of characters.",
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "description": "Minimum number of characters.",
              "fieldName": "minLength"
            },
            {
              "name": "iconRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Place icon on the right.",
              "fieldName": "iconRight"
            },
            {
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Visually hide the label.",
              "fieldName": "hideLabel"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Customizable text strings.",
              "fieldName": "textStrings"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-text-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "src/components/reusable/textInput/textInput.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-text-input",
          "declaration": {
            "name": "TextInput",
            "module": "src/components/reusable/textInput/textInput.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/timepicker/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TimePicker",
          "declaration": {
            "name": "TimePicker",
            "module": "./timepicker"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/timepicker/timepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Timepicker: uses Flatpickr library,time picker implementation  -- `https://flatpickr.js.org/examples/#time-picker`",
          "name": "TimePicker",
          "slots": [
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "locale",
              "type": {
                "text": "SupportedLocale"
              },
              "default": "'en'",
              "description": "Sets desired locale and, if supported, dynamically loads language lib",
              "attribute": "locale"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Date | null"
              },
              "default": "null",
              "description": "Sets date/time value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "defaultDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets default time value.",
              "attribute": "defaultDate"
            },
            {
              "kind": "field",
              "name": "defaultHour",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "description": "Sets initial value of the hour element.",
              "attribute": "defaultHour"
            },
            {
              "kind": "field",
              "name": "defaultMinute",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "description": "Sets initial value of the minute element.",
              "attribute": "defaultMinute"
            },
            {
              "kind": "field",
              "name": "defaultErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets default error message.",
              "attribute": "defaultErrorMessage"
            },
            {
              "kind": "field",
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets validation warning messaging.",
              "attribute": "warnText"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets caption to be displayed under primary date picker elements.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets datepicker form input value to required/required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "timepickerDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets entire datepicker form element to enabled/disabled.",
              "attribute": "timepickerDisabled"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "attribute": "readonly"
            },
            {
              "kind": "field",
              "name": "twentyFourHourFormat",
              "type": {
                "text": "boolean | null"
              },
              "default": "null",
              "description": "Sets 24 hour formatting true/false.\nDefaults to 12H for all `en-*` locales and 24H for all other locales.",
              "attribute": "twentyFourHourFormat"
            },
            {
              "kind": "field",
              "name": "minTime",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets lower boundary of datepicker date selection.",
              "attribute": "minTime"
            },
            {
              "kind": "field",
              "name": "maxTime",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets upper boundary of datepicker date selection.",
              "attribute": "maxTime"
            },
            {
              "kind": "field",
              "name": "errorAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for error message.",
              "attribute": "errorAriaLabel"
            },
            {
              "kind": "field",
              "name": "errorTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for error message.",
              "attribute": "errorTitle"
            },
            {
              "kind": "field",
              "name": "warningAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for warning message.",
              "attribute": "warningAriaLabel"
            },
            {
              "kind": "field",
              "name": "warningTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for warning message.",
              "attribute": "warningTitle"
            },
            {
              "kind": "field",
              "name": "textStrings",
              "default": "{\n  requiredText: 'Required',\n  clearAll: 'Clear',\n}",
              "description": "Customizable text strings.",
              "attribute": "textStrings",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "method",
              "name": "renderValidationMessage",
              "privacy": "private",
              "parameters": [
                {
                  "name": "errorId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "warningId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getTimepickerClasses"
            },
            {
              "kind": "method",
              "name": "_handleClear",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setupAnchor",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "initializeFlatpickr",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "updateFlatpickrOptions",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getComponentFlatpickrOptions",
              "return": {
                "type": {
                  "text": "Promise<Partial<BaseOptions>>"
                }
              }
            },
            {
              "kind": "method",
              "name": "setInitialDates",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "instance",
                  "type": {
                    "text": "flatpickr.Instance"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOpen",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleClose",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleTimeChange",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "selectedDates",
                  "type": {
                    "text": "Date[]"
                  }
                },
                {
                  "name": "dateStr",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleFormReset",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setShouldFlatpickrOpen",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "closeFlatpickr",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "preventFlatpickrOpen",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInputClickEvent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInputFocusEvent",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "locale",
              "type": {
                "text": "SupportedLocale"
              },
              "default": "'en'",
              "description": "Sets desired locale and, if supported, dynamically loads language lib",
              "fieldName": "locale"
            },
            {
              "name": "value",
              "type": {
                "text": "Date | null"
              },
              "default": "null",
              "description": "Sets date/time value.",
              "fieldName": "value"
            },
            {
              "name": "defaultDate",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets default time value.",
              "fieldName": "defaultDate"
            },
            {
              "name": "defaultHour",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "description": "Sets initial value of the hour element.",
              "fieldName": "defaultHour"
            },
            {
              "name": "defaultMinute",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "description": "Sets initial value of the minute element.",
              "fieldName": "defaultMinute"
            },
            {
              "name": "defaultErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets default error message.",
              "fieldName": "defaultErrorMessage"
            },
            {
              "name": "warnText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets validation warning messaging.",
              "fieldName": "warnText"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets caption to be displayed under primary date picker elements.",
              "fieldName": "caption"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets datepicker form input value to required/required.",
              "fieldName": "required"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "timepickerDisabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Sets entire datepicker form element to enabled/disabled.",
              "fieldName": "timepickerDisabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input read only state.",
              "fieldName": "readonly"
            },
            {
              "name": "twentyFourHourFormat",
              "type": {
                "text": "boolean | null"
              },
              "default": "null",
              "description": "Sets 24 hour formatting true/false.\nDefaults to 12H for all `en-*` locales and 24H for all other locales.",
              "fieldName": "twentyFourHourFormat"
            },
            {
              "name": "minTime",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets lower boundary of datepicker date selection.",
              "fieldName": "minTime"
            },
            {
              "name": "maxTime",
              "type": {
                "text": "string | number | Date"
              },
              "default": "''",
              "description": "Sets upper boundary of datepicker date selection.",
              "fieldName": "maxTime"
            },
            {
              "name": "errorAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for error message.",
              "fieldName": "errorAriaLabel"
            },
            {
              "name": "errorTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for error message.",
              "fieldName": "errorTitle"
            },
            {
              "name": "warningAriaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets aria label attribute for warning message.",
              "fieldName": "warningAriaLabel"
            },
            {
              "name": "warningTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Sets title attribute for warning message.",
              "fieldName": "warningTitle"
            },
            {
              "name": "textStrings",
              "default": "_defaultTextStrings",
              "description": "Customizable text strings.",
              "fieldName": "textStrings"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-time-picker",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimePicker",
          "declaration": {
            "name": "TimePicker",
            "module": "src/components/reusable/timepicker/timepicker.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-time-picker",
          "declaration": {
            "name": "TimePicker",
            "module": "src/components/reusable/timepicker/timepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/toggleButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "./toggleButton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/toggleButton/toggleButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Toggle Button.",
          "name": "ToggleButton",
          "slots": [
            {
              "description": "Slot for tooltip.",
              "name": "tooltip"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state.",
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "checkedText",
              "type": {
                "text": "string"
              },
              "default": "'On'",
              "description": "Checked state text.",
              "attribute": "checkedText"
            },
            {
              "kind": "field",
              "name": "uncheckedText",
              "type": {
                "text": "string"
              },
              "default": "'Off'",
              "description": "Unchecked state text.",
              "attribute": "uncheckedText"
            },
            {
              "kind": "field",
              "name": "small",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to use small size.",
              "attribute": "small"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "reverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Reverse UI element order, label on the left.",
              "attribute": "reverse"
            },
            {
              "kind": "field",
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the label visually.",
              "attribute": "hideLabel"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_validate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "interacted",
                  "type": {
                    "text": "Boolean"
                  }
                },
                {
                  "name": "report",
                  "type": {
                    "text": "Boolean"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Label text.",
              "fieldName": "label"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state.",
              "fieldName": "checked"
            },
            {
              "name": "checkedText",
              "type": {
                "text": "string"
              },
              "default": "'On'",
              "description": "Checked state text.",
              "fieldName": "checkedText"
            },
            {
              "name": "uncheckedText",
              "type": {
                "text": "string"
              },
              "default": "'Off'",
              "description": "Unchecked state text.",
              "fieldName": "uncheckedText"
            },
            {
              "name": "small",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to use small size.",
              "fieldName": "small"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "reverse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Reverse UI element order, label on the left.",
              "fieldName": "reverse"
            },
            {
              "name": "hideLabel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Hides the label visually.",
              "fieldName": "hideLabel"
            }
          ],
          "mixins": [
            {
              "name": "FormMixin",
              "module": "/src/common/mixins/form-input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-toggle-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "src/components/reusable/toggleButton/toggleButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-toggle-button",
          "declaration": {
            "name": "ToggleButton",
            "module": "src/components/reusable/toggleButton/toggleButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tooltip/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Tooltip",
          "declaration": {
            "name": "Tooltip",
            "module": "./tooltip"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/tooltip/tooltip.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Tooltip.",
          "name": "Tooltip",
          "slots": [
            {
              "description": "Slot for tooltip content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for custom anchor button content.",
              "name": "anchor"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "'Tooltip'",
              "description": "Assistive text for anchor button.",
              "attribute": "assistiveText"
            },
            {
              "kind": "method",
              "name": "_positionTooltip",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleOpen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleClose",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleMouseLeave",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_handleEsc",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_emitToggle",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits the open state of the tooltip on open/close.",
              "name": "on-tooltip-toggle"
            }
          ],
          "attributes": [
            {
              "name": "assistiveText",
              "type": {
                "text": "string"
              },
              "default": "'Tooltip'",
              "description": "Assistive text for anchor button.",
              "fieldName": "assistiveText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-tooltip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Tooltip",
          "declaration": {
            "name": "Tooltip",
            "module": "src/components/reusable/tooltip/tooltip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-tooltip",
          "declaration": {
            "name": "Tooltip",
            "module": "src/components/reusable/tooltip/tooltip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Widget",
          "declaration": {
            "name": "Widget",
            "module": "./widget"
          }
        },
        {
          "kind": "js",
          "name": "WidgetDragHandle",
          "declaration": {
            "name": "WidgetDragHandle",
            "module": "./widgetDragHandle"
          }
        },
        {
          "kind": "js",
          "name": "WidgetGridstack",
          "declaration": {
            "name": "WidgetGridstack",
            "module": "./widgetGridstack"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/widget.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Widget.",
          "name": "Widget",
          "slots": [
            {
              "description": "Slot for widget content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for action buttons.",
              "name": "action"
            },
            {
              "description": "Slot for tooltip in header.",
              "name": "tooltip"
            },
            {
              "description": "Slot for drag handle.",
              "name": "draghandle"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "widgetTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Widget title.",
              "attribute": "widgetTitle"
            },
            {
              "kind": "field",
              "name": "subTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Widget sub-title.",
              "attribute": "subTitle"
            },
            {
              "kind": "field",
              "name": "dragActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Widget drag active state.",
              "attribute": "dragActive"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Widget disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateChildren",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "widgetTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Widget title.",
              "fieldName": "widgetTitle"
            },
            {
              "name": "subTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Widget sub-title.",
              "fieldName": "subTitle"
            },
            {
              "name": "dragActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Widget drag active state.",
              "fieldName": "dragActive"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Widget disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-widget",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Widget",
          "declaration": {
            "name": "Widget",
            "module": "src/components/reusable/widget/widget.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-widget",
          "declaration": {
            "name": "Widget",
            "module": "src/components/reusable/widget/widget.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/widgetDragHandle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Widget drag handle.",
          "name": "WidgetDragHandle",
          "members": [
            {
              "kind": "field",
              "name": "slot",
              "type": {
                "text": "string"
              },
              "default": "'draghandle'",
              "description": "Force widget slot",
              "attribute": "slot",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "slot",
              "type": {
                "text": "string"
              },
              "default": "'draghandle'",
              "description": "Force widget slot",
              "fieldName": "slot"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-widget-drag-handle",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "WidgetDragHandle",
          "declaration": {
            "name": "WidgetDragHandle",
            "module": "src/components/reusable/widget/widgetDragHandle.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-widget-drag-handle",
          "declaration": {
            "name": "WidgetDragHandle",
            "module": "src/components/reusable/widget/widgetDragHandle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/widget/widgetGridstack.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "GridStack wrapper that includes Shidoka default config and styles.",
          "name": "WidgetGridstack",
          "slots": [
            {
              "description": "Slot for .grid-stack container element.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "any"
              },
              "default": "{}",
              "description": "GridStack layout/widget size/position definitions for each breakpoint.",
              "attribute": "layout"
            },
            {
              "kind": "field",
              "name": "gridstackConfig",
              "type": {
                "text": "any"
              },
              "default": "Config",
              "description": "GridStack config.",
              "attribute": "gridstackConfig"
            },
            {
              "kind": "field",
              "name": "gridStack",
              "type": {
                "text": "any"
              },
              "default": "GridStack",
              "description": "GridStack instance."
            },
            {
              "kind": "field",
              "name": "grid",
              "type": {
                "text": "any"
              },
              "description": "GridStack grid instance."
            },
            {
              "kind": "method",
              "name": "_saveLayout",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateLayout",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_setBreakpoint",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emits after GridStack initializes.",
              "name": "on-grid-init"
            },
            {
              "description": "Emits the GridStack save() method results (new layout) on dragstop and resizestop.",
              "name": "on-grid-save"
            }
          ],
          "attributes": [
            {
              "name": "layout",
              "type": {
                "text": "any"
              },
              "default": "{}",
              "description": "GridStack layout/widget size/position definitions for each breakpoint.",
              "fieldName": "layout"
            },
            {
              "name": "gridstackConfig",
              "type": {
                "text": "any"
              },
              "default": "Config",
              "description": "GridStack config.",
              "fieldName": "gridstackConfig"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-widget-gridstack",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "WidgetGridstack",
          "declaration": {
            "name": "WidgetGridstack",
            "module": "src/components/reusable/widget/widgetGridstack.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-widget-gridstack",
          "declaration": {
            "name": "WidgetGridstack",
            "module": "src/components/reusable/widget/widgetGridstack.ts"
          }
        }
      ]
    }
  ]
}
