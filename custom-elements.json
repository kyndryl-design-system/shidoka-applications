{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "./components/global/header"
          }
        },
        {
          "kind": "js",
          "name": "SideNav",
          "declaration": {
            "name": "SideNav",
            "module": "./components/global/sideNav"
          }
        },
        {
          "kind": "js",
          "name": "SideNavLink",
          "declaration": {
            "name": "SideNavLink",
            "module": "./components/global/sideNav"
          }
        },
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "./components/global/footer"
          }
        },
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "./components/reusable/radioButton"
          }
        },
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "./components/reusable/radioButton"
          }
        },
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "./components/reusable/checkbox"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "./components/reusable/checkbox"
          }
        },
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "./components/reusable/textInput"
          }
        },
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "./components/reusable/textArea"
          }
        },
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "./components/reusable/toggleButton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/common/helpers/helpers.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "debounce",
          "parameters": [
            {
              "name": "fn",
              "type": {
                "text": "Function"
              }
            },
            {
              "name": "ms",
              "default": "100"
            }
          ]
        },
        {
          "kind": "function",
          "name": "stringToReactHtml",
          "parameters": [
            {
              "name": "string",
              "type": {
                "text": "String"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debounce",
          "declaration": {
            "name": "debounce",
            "module": "src/common/helpers/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "stringToReactHtml",
          "declaration": {
            "name": "stringToReactHtml",
            "module": "src/common/helpers/helpers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Footer",
          "members": [
            {
              "kind": "field",
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the footer logo link. Should target the application home page.",
              "attribute": "rootUrl"
            },
            {
              "kind": "method",
              "name": "handleRootLinkClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the footer logo link. Should target the application home page.",
              "fieldName": "rootUrl"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "src/components/global/footer/footer.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer",
          "declaration": {
            "name": "Footer",
            "module": "src/components/global/footer/footer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footerLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for navigation links within the Footer.",
          "name": "FooterNavLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px divider between footer nav links.",
              "attribute": "divider"
            },
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (deafult), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px divider between footer nav links.",
              "fieldName": "divider"
            },
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (deafult), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "src/components/global/footer/footerLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer-link",
          "declaration": {
            "name": "FooterNavLink",
            "module": "src/components/global/footer/footerLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/footerNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for footer navigation links.",
          "name": "FooterNav",
          "slots": [
            {
              "description": "This element has a slot.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-footer-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "src/components/global/footer/footerNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-footer-nav",
          "declaration": {
            "name": "FooterNav",
            "module": "src/components/global/footer/footerNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/footer/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Footer",
          "declaration": {
            "name": "Footer",
            "module": "./footer"
          }
        },
        {
          "kind": "js",
          "name": "FooterNav",
          "declaration": {
            "name": "FooterNav",
            "module": "./footerNav"
          }
        },
        {
          "kind": "js",
          "name": "FooterNavLink",
          "declaration": {
            "name": "FooterNavLink",
            "module": "./footerLink"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Header component.",
          "name": "Header",
          "slots": [
            {
              "description": "The default slot for all empty space right of the logo/title.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the header logo link. Should target the application home page.",
              "attribute": "rootUrl"
            },
            {
              "kind": "field",
              "name": "appTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "App title text next to logo.  Hidden on smaller screens.",
              "attribute": "appTitle"
            },
            {
              "kind": "field",
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "672",
              "description": "The breakpoint (in px) to convert the nav to a flyout menu for small screens.",
              "attribute": "breakpoint"
            },
            {
              "kind": "field",
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px shadow to the bottom of the header, for contrast with  white backgrounds.",
              "attribute": "divider"
            },
            {
              "kind": "method",
              "name": "testBreakpoint",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleRootLinkClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleNavMenu",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the menu toggle click event and emits the menu open state in the detail.",
              "name": "on-menu-toggle"
            },
            {
              "description": "Captures the logo link click event and emits the original event details.",
              "name": "on-root-link-click"
            }
          ],
          "attributes": [
            {
              "name": "rootUrl",
              "type": {
                "text": "string"
              },
              "default": "'/'",
              "description": "URL for the header logo link. Should target the application home page.",
              "fieldName": "rootUrl"
            },
            {
              "name": "appTitle",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "App title text next to logo.  Hidden on smaller screens.",
              "fieldName": "appTitle"
            },
            {
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "672",
              "description": "The breakpoint (in px) to convert the nav to a flyout menu for small screens.",
              "fieldName": "breakpoint"
            },
            {
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px shadow to the bottom of the header, for contrast with  white backgrounds.",
              "fieldName": "divider"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "src/components/global/header/header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header",
          "declaration": {
            "name": "Header",
            "module": "src/components/global/header/header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerAvatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header flyout items, aligns to the right, place last.",
          "name": "HeaderAvatar",
          "members": [
            {
              "kind": "field",
              "name": "initials",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Two letters, first and last initial, to show in the user avatar circle.",
              "attribute": "initials"
            }
          ],
          "attributes": [
            {
              "name": "initials",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Two letters, first and last initial, to show in the user avatar circle.",
              "fieldName": "initials"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-avatar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "src/components/global/header/headerAvatar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-avatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "src/components/global/header/headerAvatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerFlyout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for header flyout items.",
          "name": "HeaderFlyout",
          "slots": [
            {
              "description": "Slot for flyout menu content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for button/toggle content.",
              "name": "button"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "anchorLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchor flyout menu to the left edge of the button instead of the right edge.",
              "attribute": "anchorLeft"
            },
            {
              "kind": "method",
              "name": "testBreakpoint",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "anchorLeft",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anchor flyout menu to the left edge of the button instead of the right edge.",
              "fieldName": "anchorLeft"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-flyout",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "src/components/global/header/headerFlyout.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-flyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "src/components/global/header/headerFlyout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerFlyouts.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header flyout items, aligns to the right, place last.",
          "name": "HeaderFlyouts",
          "slots": [
            {
              "description": "This element has a slot.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-flyouts",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "src/components/global/header/headerFlyouts.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-flyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "src/components/global/header/headerFlyouts.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for navigation links within the Header.",
          "name": "HeaderLink",
          "slots": [
            {
              "description": "Slot for link text/content.",
              "name": "unnamed"
            },
            {
              "description": "Slot for sublinks (up to two levels).",
              "name": "links"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (deafult), \"_blank\", \"_parent\", \"_top\"",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link active state, for example when URL path matches link href.",
              "attribute": "isActive"
            },
            {
              "kind": "field",
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px shadow to the bottom of the link for small screens/full-size menu view.",
              "attribute": "divider"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "determineIfSlotted",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "determineLevel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "testBreakpoint",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event details.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "default": "'_self'",
              "type": {
                "text": "'_self'"
              },
              "description": "Defines a target attribute for where to load the URL. Possible options include \"_self\" (deafult), \"_blank\", \"_parent\", \"_top\"",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a relationship between a linked resource and the document. An empty string (default) means no particular relationship",
              "fieldName": "rel"
            },
            {
              "name": "isActive",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Link active state, for example when URL path matches link href.",
              "fieldName": "isActive"
            },
            {
              "name": "divider",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adds a 1px shadow to the bottom of the link for small screens/full-size menu view.",
              "fieldName": "divider"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "src/components/global/header/headerLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-link",
          "declaration": {
            "name": "HeaderLink",
            "module": "src/components/global/header/headerLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/headerNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container for header navigation links.",
          "name": "HeaderNav",
          "slots": [
            {
              "description": "This element has a slot.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "testBreakpoint",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-header-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "src/components/global/header/headerNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-header-nav",
          "declaration": {
            "name": "HeaderNav",
            "module": "src/components/global/header/headerNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/header/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Header",
          "declaration": {
            "name": "Header",
            "module": "./header"
          }
        },
        {
          "kind": "js",
          "name": "HeaderNav",
          "declaration": {
            "name": "HeaderNav",
            "module": "./headerNav"
          }
        },
        {
          "kind": "js",
          "name": "HeaderLink",
          "declaration": {
            "name": "HeaderLink",
            "module": "./headerLink"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyouts",
          "declaration": {
            "name": "HeaderFlyouts",
            "module": "./headerFlyouts"
          }
        },
        {
          "kind": "js",
          "name": "HeaderFlyout",
          "declaration": {
            "name": "HeaderFlyout",
            "module": "./headerFlyout"
          }
        },
        {
          "kind": "js",
          "name": "HeaderAvatar",
          "declaration": {
            "name": "HeaderAvatar",
            "module": "./headerAvatar"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/uiShell/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/uiShell/uiShell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container to help with positioning and padding of the global elements such as: adds padding for the fixed Header, adds main content gutters, and makes Footer sticky. This takes the onus off of the consuming app to configure these values. TO DO: Update to work with dynamic/collapsible Side Nav.",
          "name": "UiShell",
          "slots": [
            {
              "description": "Slot for global elements.",
              "name": "unnamed"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-ui-shell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UiShell",
          "declaration": {
            "name": "UiShell",
            "module": "src/components/global/uiShell/uiShell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-ui-shell",
          "declaration": {
            "name": "UiShell",
            "module": "src/components/global/uiShell/uiShell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/sideNav/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "SideNav",
          "declaration": {
            "name": "SideNav",
            "module": "./sideNav"
          }
        },
        {
          "kind": "js",
          "name": "SideNavLink",
          "declaration": {
            "name": "SideNavLink",
            "module": "./sideNavLink"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/sideNav/sideNav.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The global Side Navigation component.",
          "name": "SideNav",
          "slots": [
            {
              "description": "The default slot, for side nav links.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "collapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Side nav collapsed state.",
              "attribute": "collapsed"
            },
            {
              "kind": "method",
              "name": "onNavToggle",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the collapsed state and original event details.",
              "name": "on-toggle"
            }
          ],
          "attributes": [
            {
              "name": "collapsed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Side nav collapsed state.",
              "fieldName": "collapsed"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-side-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SideNav",
          "declaration": {
            "name": "SideNav",
            "module": "src/components/global/sideNav/sideNav.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-side-nav",
          "declaration": {
            "name": "SideNav",
            "module": "src/components/global/sideNav/sideNav.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/global/sideNav/sideNavLink.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Link component for use in the global Side Navigation component.",
          "name": "SideNavLink",
          "slots": [
            {
              "description": "The default slot, for the link text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for an icon, level 1 links only.",
              "name": "icon"
            },
            {
              "description": "Slot for the next level of links, supports three levels.",
              "name": "links"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Level 1 link expanded state.",
              "attribute": "expanded"
            },
            {
              "kind": "method",
              "name": "determineIfSlotted",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "determineLevel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onNavLinkHover",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the click event and emits the original event, level, and if default was prevented.",
              "name": "on-click"
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Link url.",
              "fieldName": "href"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Level 1 link expanded state.",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-side-nav-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SideNavLink",
          "declaration": {
            "name": "SideNavLink",
            "module": "src/components/global/sideNav/sideNavLink.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-side-nav-link",
          "declaration": {
            "name": "SideNavLink",
            "module": "src/components/global/sideNav/sideNavLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkbox.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox.",
          "name": "Checkbox",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox value.",
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-checkbox-change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox value.",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/components/reusable/checkbox/checkbox.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/components/reusable/checkbox/checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/checkboxGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Checkbox group container.",
          "name": "CheckboxGroup",
          "slots": [
            {
              "description": "Slot for individual checkboxes.",
              "name": "unnamed"
            },
            {
              "description": "Slot for label text.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox input name attribute.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "Array<string>"
              },
              "description": "Checkbox group selected values.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes a single selection required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox group invalid text.",
              "attribute": "invalidText"
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected values.",
              "name": "on-checkbox-group-change"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox input name attribute.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "Array<string>"
              },
              "description": "Checkbox group selected values.",
              "fieldName": "value"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes a single selection required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox group disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Checkbox group invalid text.",
              "fieldName": "invalidText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-checkbox-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/components/reusable/checkbox/checkboxGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-checkbox-group",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "src/components/reusable/checkbox/checkboxGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/checkbox/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "./checkbox"
          }
        },
        {
          "kind": "js",
          "name": "CheckboxGroup",
          "declaration": {
            "name": "CheckboxGroup",
            "module": "./checkboxGroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "./radioButton"
          }
        },
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "./radioButtonGroup"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/radioButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio button.",
          "name": "RadioButton",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button value.",
              "attribute": "value"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-radio-change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button value.",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-radio-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButton",
          "declaration": {
            "name": "RadioButton",
            "module": "src/components/reusable/radioButton/radioButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-radio-button",
          "declaration": {
            "name": "RadioButton",
            "module": "src/components/reusable/radioButton/radioButton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/radioButton/radioButtonGroup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Radio button group container.",
          "name": "RadioButtonGroup",
          "slots": [
            {
              "description": "Slot for individual radio buttons.",
              "name": "unnamed"
            },
            {
              "description": "Slot for label text.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button input name attribute.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group selected value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group invalid text.",
              "attribute": "invalidText"
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value.",
              "name": "on-radio-group-change"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button input name attribute.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group selected value.",
              "fieldName": "value"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Radio button group disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Radio button group invalid text.",
              "fieldName": "invalidText"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-radio-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RadioButtonGroup",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "src/components/reusable/radioButton/radioButtonGroup.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-radio-button-group",
          "declaration": {
            "name": "RadioButtonGroup",
            "module": "src/components/reusable/radioButton/radioButtonGroup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textArea/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "./textArea"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textArea/textArea.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Text area.",
          "name": "TextArea",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Maximum number of characters.",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Minimum number of characters.",
              "attribute": "minLength"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Maximum number of characters.",
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Minimum number of characters.",
              "fieldName": "minLength"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-text-area",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextArea",
          "declaration": {
            "name": "TextArea",
            "module": "src/components/reusable/textArea/textArea.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-text-area",
          "declaration": {
            "name": "TextArea",
            "module": "src/components/reusable/textArea/textArea.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textInput/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "./textInput"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/textInput/textInput.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Text input.",
          "name": "TextInput",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            },
            {
              "description": "Slot for contextual icon.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "description": "Input type, limited to options that are \"text like\".",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "attribute": "caption"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "attribute": "invalidText"
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "RegEx pattern to validate.",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Maximum number of characters.",
              "attribute": "maxLength"
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Minimum number of characters.",
              "attribute": "minLength"
            },
            {
              "kind": "field",
              "name": "iconRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Place icon on the right.",
              "attribute": "iconRight"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClear",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "determineIfSlotted",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Captures the input event and emits the selected value and original event details.",
              "name": "on-input"
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "description": "Input type, limited to options that are \"text like\".",
              "fieldName": "type"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'md'",
              "description": "Input size. \"sm\", \"md\", or \"lg\".",
              "fieldName": "size"
            },
            {
              "name": "caption",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional text beneath the input.",
              "fieldName": "caption"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Makes the input required.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Input disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "invalidText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input invalid text.",
              "fieldName": "invalidText"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "RegEx pattern to validate.",
              "fieldName": "pattern"
            },
            {
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Maximum number of characters.",
              "fieldName": "maxLength"
            },
            {
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "default": "null",
              "description": "Minimum number of characters.",
              "fieldName": "minLength"
            },
            {
              "name": "iconRight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Place icon on the right.",
              "fieldName": "iconRight"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-text-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TextInput",
          "declaration": {
            "name": "TextInput",
            "module": "src/components/reusable/textInput/textInput.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-text-input",
          "declaration": {
            "name": "TextInput",
            "module": "src/components/reusable/textInput/textInput.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/toggleButton/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "./toggleButton"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/reusable/toggleButton/toggleButton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Toggle Button.",
          "name": "ToggleButton",
          "slots": [
            {
              "description": "Slot for label text.",
              "name": "unnamed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state.",
              "attribute": "checked"
            },
            {
              "kind": "field",
              "name": "checkedText",
              "type": {
                "text": "string"
              },
              "default": "'On'",
              "description": "Checked state text.",
              "attribute": "checkedText"
            },
            {
              "kind": "field",
              "name": "uncheckedText",
              "type": {
                "text": "string"
              },
              "default": "'Off'",
              "description": "Unchecked state text.",
              "attribute": "uncheckedText"
            },
            {
              "kind": "field",
              "name": "small",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to use small size.",
              "attribute": "small"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state.",
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Captures the change event and emits the selected value and original event details.",
              "name": "on-change"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input name.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Input value.",
              "fieldName": "value"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox checked state.",
              "fieldName": "checked"
            },
            {
              "name": "checkedText",
              "type": {
                "text": "string"
              },
              "default": "'On'",
              "description": "Checked state text.",
              "fieldName": "checkedText"
            },
            {
              "name": "uncheckedText",
              "type": {
                "text": "string"
              },
              "default": "'Off'",
              "description": "Unchecked state text.",
              "fieldName": "uncheckedText"
            },
            {
              "name": "small",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Option to use small size.",
              "fieldName": "small"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Checkbox disabled state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "kyn-toggle-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ToggleButton",
          "declaration": {
            "name": "ToggleButton",
            "module": "src/components/reusable/toggleButton/toggleButton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "kyn-toggle-button",
          "declaration": {
            "name": "ToggleButton",
            "module": "src/components/reusable/toggleButton/toggleButton.ts"
          }
        }
      ]
    }
  ]
}
