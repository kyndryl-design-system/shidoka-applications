{"version":3,"file":"components-reusable-breadcrumbs-breadcrumbs-stories.0f91137d.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;AAMA;;;;;;ACeA;;;ACOA;;AAKA;;;;;ACEA","sources":["webpack://@kyndryl-design-system/shidoka-applications/./node_modules/@kyndryl-design-system/shidoka-foundation/components/link/link.js","webpack://@kyndryl-design-system/shidoka-applications/./src/components/reusable/breadcrumbs/breadcrumbs.ts","webpack://@kyndryl-design-system/shidoka-applications/./src/components/reusable/breadcrumbs/breadcrumbItem.ts","webpack://@kyndryl-design-system/shidoka-applications/"],"sourcesContent":["import{__decorate as t}from\"../../_virtual/_tslib.js\";import'./../../external/@lit/reactive-element/reactive-element.js';import{html as e}from'./../../external/lit-html/lit-html.js';import{LitElement as s}from'./../../external/lit-element/lit-element.js';import{customElement as i}from'./../../external/@lit/reactive-element/decorators/custom-element.js';import{property as l}from'./../../external/@lit/reactive-element/decorators/property.js';import'./../../external/@lit/reactive-element/decorators/query-assigned-elements.js';import{classMap as o}from'./../../external/lit-html/directives/class-map.js';import{LINK_TARGETS as r,LINK_TYPES as n}from\"./defs.js\";import d from\"./link.scss.js\";let a=class extends s{constructor(){super(...arguments),this.href=\"\",this.target=r.SELF,this.kind=n.PRIMARY,this.rel=\"\",this.disabled=!1,this.standalone=!1}render(){const t=this.returnClassMap();return e`<a\n      class=\"kd-link-text ${t}\"\n      target=${this.target}\n      role=\"link\"\n      rel=${this.rel}\n      href=${this.href?this.href:\"javascript:void(0)\"}\n      ?disabled=${this.disabled}\n      @click=${t=>this.handleClick(t)}\n    >\n      <span class=\"kd-link-text-span-flex\">\n        <slot></slot>\n        <slot name=\"icon\"></slot>\n      </span>\n    </a>`}returnClassMap(){return this.disabled?o({\"kd-link-text-disabled\":this.disabled}):o({\"kd-link-text-primary\":this.kind===n.PRIMARY||!this.kind,\"kd-link-text-secondary\":this.kind===n.SECONDARY,\"kd-link-text-inline\":!this.standalone,\"kd-link-text-standalone\":this.standalone})}handleClick(t){if(this.disabled)return void t.preventDefault();const e=new CustomEvent(\"on-click\",{detail:{href:this.href,origEvent:t}});this.dispatchEvent(e)}};a.styles=[d],t([l({type:String})],a.prototype,\"href\",void 0),t([l({type:String})],a.prototype,\"target\",void 0),t([l({type:String})],a.prototype,\"kind\",void 0),t([l({type:String})],a.prototype,\"rel\",void 0),t([l({type:Boolean,reflect:!0})],a.prototype,\"disabled\",void 0),t([l({type:Boolean})],a.prototype,\"standalone\",void 0),a=t([i(\"kd-link\")],a);export{a as Link};\n//# sourceMappingURL=link.js.map\n","/**\n * Copyright Kyndryl, Inc. 2023\n */\n\n// External library imports\nimport { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\n// Relative component imports\nimport styles from './breadcrumbs.scss';\n\n/**\n * Breadcrumbs Component.\n *\n * @slot unnamed - Slot for inserting breadcrumb items, typically kyn-breadcrumb-items indicating the navigation path.\n */\n@customElement('kyn-breadcrumbs')\nexport class Breadcrumbs extends LitElement {\n  static override styles = [styles];\n\n  override render() {\n    return html`\n      <nav aria-label=\"Breadcrumbs Navigation\">\n        <div class=\"breadcrumbs\" role=\"list\">\n          <slot></slot>\n        </div>\n      </nav>\n    `;\n  }\n}\n\n// Define the custom element in the global namespace\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'kyn-breadcrumbs': Breadcrumbs;\n  }\n}\n","/**\n * Copyright Kyndryl, Inc. 2023\n */\n\n// External library imports\nimport { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n// Relative component imports\nimport styles from './breadcrumbItem.scss';\n\n/**\n * Breadcrumb Item\n *\n * @slot unnamed - Slot for the content of the breadcrumb item, usually the label or text.\n *\n */\n@customElement('kyn-breadcrumb-item')\nexport class BreadcrumbItem extends LitElement {\n  // Property to hold the URL for the breadcrumb item\n  @property({ type: String })\n  href = '';\n\n  static override styles = [styles];\n\n  /** role\n   * @internal\n   */\n  @property({ type: String, reflect: true })\n  override role = 'listitem';\n\n  override render() {\n    return html`\n      <div class=\"breadcrumb-item\">\n        <!-- Render as link if href is provided, otherwise render as plain text -->\n        ${this.href\n          ? html`<a href=\"${this.href}\"><slot></slot></a>`\n          : html`<span><slot></slot></span>`}\n      </div>\n    `;\n  }\n}\n\n// Define the custom element in the global namespace\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'kyn-breadcrumb-item': BreadcrumbItem;\n  }\n}\n"],"names":[],"sourceRoot":""}