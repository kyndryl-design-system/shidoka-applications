@use './global.scss';
@use '@kyndryl-design-system/shidoka-foundation/scss/mixins/elevation.scss';
@use '@kyndryl-design-system/shidoka-foundation/scss/mixins/typography.scss';

.menu-item[highlighted] {
  outline: 1px solid var(--kd-color-border-variants-focus);
}

.menu-item {
  background-color: var(--kd-color-background-menu-state-default);
  transition: background-color 150ms ease-out;

  .menu-item-inner-el {
    color: var(--kd-color-text-level-primary);
    transition: color 150ms ease-out;

    &.check-icon {
      color: var(--kd-color-icon-primary);
    }
  }

  &:hover:not([disabled]) {
    background-color: var(--kd-color-background-menu-state-hover);

    .menu-item-inner-el {
      color: var(--kd-color-text-level-light);
    }

    slot[name='icon']::slotted(span) {
      color: var(--kd-color-icon-light);
    }
  }

  &:is(:focus, :focus-within, :focus-visible):not([disabled]) {
    background-color: var(--kd-color-background-menu-state-open);

    .menu-item-inner-el {
      color: var(--kd-color-text-level-primary);
    }
  }

  &[selected]:not([disabled]) {
    background-color: var(--kd-color-background-menu-state-open);

    &:hover {
      background-color: var(--kd-color-background-menu-state-hover);

      .menu-item-inner-el {
        color: var(--kd-color-text-level-light);
      }
    }
  }

  &[highlighted]:not([disabled]) {
    background-color: var(--kd-color-background-menu-state-hover);

    .menu-item-inner-el {
      color: var(--kd-color-text-level-light);
    }
  }

  &[selected][highlighted]:not([disabled]) {
    background-color: var(--kd-color-background-menu-state-hover);

    .menu-item-inner-el {
      color: var(--kd-color-text-level-light);
    }
  }

  &[highlighted]:is(:focus, :focus-within, :focus-visible):not([disabled]) {
    background-color: var(--kd-color-background-menu-state-hover);

    .menu-item-inner-el {
      color: var(--kd-color-text-level-light);
    }
  }

  &[disabled] {
    color: var(--kd-color-text-level-disabled);

    .menu-item-inner-el {
      color: var(--kd-color-text-level-disabled);
    }

    &:hover {
      cursor: not-allowed;
      background-color: var(--kd-color-background-menu-state-default);
    }

    kyn-checkbox:hover {
      cursor: not-allowed;
    }
  }

  &.destructive {
    color: var(--kd-color-text-variant-destructive);
    border-top: 1px solid var(--kd-color-border-level-tertiary);

    &:hover:not([disabled]) {
      background-color: var(--kd-color-status-error-light);
    }

    .menu-item-inner-el {
      color: var(--kd-color-text-variant-destructive);
    }
  }

  &:active:not([disabled]),
  &:has(:active):not([disabled]),
  &[selected]:active:not([disabled]),
  &[selected]:has(:active):not([disabled]),
  &[highlighted]:active:not([disabled]),
  &[highlighted]:has(:active):not([disabled]),
  &[selected][highlighted]:active:not([disabled]),
  &[selected][highlighted]:has(:active):not([disabled]) {
    background-color: var(--kd-color-background-menu-state-pressed);

    .menu-item-inner-el {
      color: var(--kd-color-text-level-light);
    }
  }

  &.ai-connected {
    background-color: var(--kd-color-background-menu-state-ai-default);

    .menu-item-inner-el {
      color: var(--kd-color-text-level-primary);
    }

    &:hover:not([disabled]) {
      background-color: var(--kd-color-background-menu-state-ai-hover);

      .menu-item-inner-el {
        color: var(--kd-color-text-level-light);
      }
    }

    &:is(:focus, :focus-within, :focus-visible):not([disabled]) {
      background-color: var(--kd-color-background-menu-state-ai-open);

      .menu-item-inner-el {
        color: var(--kd-color-text-level-primary);
      }
    }

    &:active:not([disabled]) {
      background-color: var(--kd-color-background-menu-state-ai-pressed);

      .menu-item-inner-el {
        color: var(--kd-color-text-level-light);
      }
    }

    &[selected]:not([disabled]),
    &[highlighted]:not([disabled]) {
      background-color: var(--kd-color-background-menu-state-ai-open);

      &:hover {
        background-color: var(--kd-color-background-menu-state-ai-hover);

        .menu-item-inner-el {
          color: var(--kd-color-text-level-light);
        }
      }
    }

    &[disabled] {
      color: var(--kd-color-text-level-disabled);

      .menu-item-inner-el {
        color: var(--kd-color-text-level-disabled);
      }

      &:hover {
        cursor: not-allowed;
        background-color: var(--kd-color-background-menu-state-ai-default);
      }

      kyn-checkbox:hover {
        cursor: not-allowed;
      }
    }

    &.destructive {
      color: var(--kd-color-text-variant-destructive);
      border-top: 1px solid var(--kd-color-border-level-tertiary);

      &:hover:not([disabled]) {
        background-color: var(--kd-color-status-error-light);
      }

      .menu-item-inner-el {
        color: var(--kd-color-text-variant-destructive);
      }
    }
  }
}

.menu-item[highlighted]:not([disabled]) {
  background-color: var(--kd-color-background-menu-state-hover);
  .menu-item-inner-el {
    color: var(--kd-color-text-level-light);
  }
}

.menu-item:is(:focus, :focus-visible):not([disabled]) {
  background-color: var(--kd-color-background-menu-state-open);
  .menu-item-inner-el {
    color: var(--kd-color-text-level-primary);
  }
}

.menu-item:active:not([disabled]) {
  background-color: var(--kd-color-background-menu-state-pressed);
  .menu-item-inner-el {
    color: var(--kd-color-text-level-light);
  }
}

.menu-item.ai-connected[highlighted]:not([disabled]) {
  background-color: var(--kd-color-background-menu-state-ai-open);
  .menu-item-inner-el {
    color: var(--kd-color-text-level-light);
  }
}
.menu-item.ai-connected:is(:focus, :focus-visible):not([disabled]) {
  background-color: var(--kd-color-background-menu-state-ai-open);
  .menu-item-inner-el {
    color: var(--kd-color-text-level-primary);
  }
}
.menu-item.ai-connected:active:not([disabled]) {
  background-color: var(--kd-color-background-menu-state-ai-pressed);
  .menu-item-inner-el {
    color: var(--kd-color-text-level-light);
  }
}
