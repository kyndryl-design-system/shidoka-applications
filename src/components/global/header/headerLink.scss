@use '../../../common/scss/global.scss';
@use './header-interactive.scss';
@use '~@kyndryl-design-system/shidoka-foundation/scss/mixins/typography.scss';

:host {
  display: block;
  position: relative;
}

.container {
  color: var(--kd-color-text-primary);
  border-radius: 4px;

  &:hover {
    background: var(--kd-color-background-primary-hover);
    color: var(--kd-color-text-inversed);
  }

  &:active {
    background: var(--kd-color-background-primary-pressed);
    color: var(--kd-color-text-inversed);
  }

  &:focus {
    outline-color: var(--kd-color-border-tertiary-bold);
  }

  &.active {
    color: var(--kd-color-text-link);

    &:hover {
      color: var(--kd-color-text-inversed);
    }
  }
}

.nav-link {
  display: flex;
  position: relative;
  align-items: center;
  gap: 12px;
  padding: 16px 16px 16px 8px;
  text-decoration: none;
  // color: var(--kd-color-text-primary);
  white-space: nowrap;
  // border-radius: 4px;
  transition: background-color 150ms ease-out, color 150ms ease-out,
    outline-color 150ms ease-out;
  outline: 2px solid transparent;
  outline-offset: -2px;
  color: inherit;

  ::slotted(kd-icon) {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
  }

  // &:hover {
  //   background: var(--kd-color-background-primary-hover);
  //   color: var(--kd-color-text-inversed);
  // }

  // &:active {
  //   background: var(--kd-color-background-primary-pressed);
  //   color: var(--kd-color-text-inversed);
  // }

  // &:focus {
  //   outline-color: var(--kd-color-border-tertiary-bold);
  // }

  // &.active {
  //   color: var(--kd-color-text-link);
  //   font-weight: 500;

  //   &:hover {
  //     color: var(--kd-color-text-inversed);
  //   }
  // }
}

.level {
  &--1 {
    .nav-link {
      height: 56px;

      &.interactive {
        // height: calc(var(--kd-header-height) - 8px);
      }
    }
  }

  &--2 {
    .container {
      color: var(--kd-color-text-secondary);

      &.active {
        color: var(--kd-color-text-link);

        &:hover {
          color: var(--kd-color-text-inversed);
        }
      }

      &:hover,
      &:active {
        color: var(--kd-color-text-inversed);
      }
    }

    .nav-link {
      @include typography.type-ui-02;
      padding: 8px 16px 8px 8px;
      height: 40px;
      // color: var(--kd-color-text-secondary);

      &.active {
        // color: var(--kd-color-text-link);
        font-weight: 500;

        // &:hover {
        //   color: var(--kd-color-text-inversed);
        // }
      }

      // &:hover,
      // &:active {
      //   color: var(--kd-color-text-inversed);
      // }
    }
  }
}

.arrow {
  margin-left: auto;
}

.menu {
  &.open {
    .menu__content {
      // z-index: -1;

      @media (min-width: 42rem) {
        transform: none;
      }
    }

    .interactive {
      color: var(--kd-color-text-inversed);
      background-color: var(--kd-color-background-primary);

      &:hover {
        background-color: var(--kd-color-background-primary-hover);
        color: var(--kd-color-text-inversed);
      }
    }
  }

  &__content {
    display: none;
    background: var(--kd-color-background-accent-subtle);

    &.slotted {
      display: flex;
    }

    @media (min-width: 42rem) {
      transform: translateX(-20px);
      position: fixed;
      left: auto;
      right: auto;
      top: auto;
    }
  }
}

kyn-text-input {
  margin-bottom: 6px;
}

@media (max-width: 42rem) {
  .menu {
    width: 100%;

    &.open {
      .menu__content {
        transform: scaleX(1);
        z-index: 2;
      }
    }
  }

  .interactive {
    width: 100%;
  }

  .menu__content {
    top: var(--kd-header-height) !important;
    left: 0 !important;
    transform: scaleX(0);
    transform-origin: right;
  }
}

slot[name='button']::slotted(button) {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  padding: 0;
  position: absolute;
  right: 12px;
  top: calc(50% - 12px);
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  transition: opacity 150ms ease-out;
  opacity: 0;

  .container:hover & {
    opacity: 1;
  }
}
