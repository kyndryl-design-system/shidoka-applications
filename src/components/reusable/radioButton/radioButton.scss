@use '../../../common/scss/global.scss';

:host {
  display: block;
}

label {
  display: inline-flex;
  gap: 10px;

  &[disabled] {
    color: var(--kd-color-text-level-disabled);
  }
}

.label-text {
  &[readonly] {
    color: var(--kd-color-text-level-disabled);
  }
}

span {
  order: 1;
}

input {
  order: 0;
  -webkit-appearance: none;
  appearance: none;
  flex-shrink: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  margin: 0;
  margin-top: 2px;
  width: 18px;
  height: 18px;
  border: 2px solid var(--kd-color-icon-primary);
  border-radius: 50%;
  background: var(--kd-color-background-ui-hollow-default);
  outline: 2px solid transparent;
  transition: background-color 150ms ease-out, border-color 150ms ease-out,
    outline-color 150ms ease-out;

  &::before {
    content: '';
    display: block;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--kd-color-background-ui-hollow-default);
    transition: background-color 150ms ease-out, border-color 150ms ease-out,
      150ms transform ease-out;
    transform: scale(0);
  }

  /* interactive (NOT disabled/readonly) */
  &:not([disabled]):not([readonly]):not(.readonly):not([data-readonly]) {
    &[checked] {
      border-color: var(--kd-color-icon-primary);
      border-width: 3px;

      &::before {
        transform: scale(1);
        background: var(--kd-color-icon-primary);
      }

      &:hover {
        border-color: var(--kd-color-background-ui-default-secondary);
        background: var(--kd-color-background-ui-hollow-default);

        &::before {
          background: var(--kd-color-background-ui-default-secondary);
        }
      }

      &:focus-visible {
        outline-color: var(--kd-color-border-variants-focus);
      }

      &:active {
        &::before {
          background: var(--kd-color-background-ui-default-secondary);
        }
      }
    }

    &:hover {
      border-color: var(--kd-color-border-ui-hover);
      background-color: var(--kd-color-background-ui-hollow-hover);
    }

    &:active {
      border-color: var(--kd-color-border-ui-hover);
    }

    &:focus-visible {
      outline-color: var(--kd-color-border-variants-focus);
      outline-offset: 2px;

      &:not([checked]) {
        &::before {
          background: var(--kd-color-background-ui-hollow-default);
        }
      }
    }

    &:active {
      border-color: var(--kd-color-background-ui-hollow-pressed);
    }

    &[invalid] {
      border-color: var(--kd-color-icon-destructive);

      &::before {
        background: var(--kd-color-icon-destructive);
      }

      &:hover {
        border-color: var(--kd-color-border-button-primary-destructive-hover);

        &::before {
          background: var(--kd-color-border-button-primary-destructive-hover);
        }
      }

      &:focus-visible {
        outline-color: var(--kd-color-icon-destructive);
      }

      &:active {
        border-color: var(--kd-color-border-button-primary-destructive-pressed);

        &::before {
          background: var(--kd-color-border-button-primary-destructive-pressed);
        }
      }
    }
  }

  /* READONLY (non-modifiable but focusable) */
  &:not([disabled]).readonly,
  &:not([disabled])[readonly],
  &:not([disabled])[data-readonly] {
    cursor: default;
    border-color: transparent;
    background: var(--kd-color-icon-disabled);

    &:hover,
    &:active {
      border-color: transparent;
      background: var(--kd-color-icon-disabled);
    }

    &:focus-visible {
      outline-offset: 2px;
      outline-color: var(--kd-color-border-variants-focus);
      border-color: transparent;
      background: var(--kd-color-icon-disabled);
    }

    &[checked] {
      border-width: 2px;
      background: transparent;
      border-color: var(--kd-color-icon-disabled);

      &::before {
        transform: scale(1);
        background: var(--kd-color-icon-primary);
      }
    }
  }

  /* DISABLED */
  &[disabled] {
    cursor: not-allowed;
    outline-color: transparent;
    background: var(--kd-color-background-ui-hollow-default);
    border-color: var(--kd-color-border-ui-disabled);

    &:hover,
    &:active,
    &:focus-visible {
      background: var(--kd-color-background-ui-hollow-default);
      border-color: var(--kd-color-border-ui-disabled);
      outline-color: transparent;
    }

    &:not(:checked) {
      background: var(--kd-color-background-forms-disabled);
    }

    &[checked] {
      border-width: 2px;
      border-color: var(--kd-color-border-ui-disabled);

      &::before {
        transform: scale(1);
        background: var(--kd-color-border-ui-disabled);
      }
    }

    &[invalid] {
      border-color: var(--kd-color-border-ui-disabled);

      &::before {
        background: var(--kd-color-border-ui-disabled);
      }
    }
  }
}
