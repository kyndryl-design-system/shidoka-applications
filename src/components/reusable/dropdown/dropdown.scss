@use '../../../common/scss/global.scss';
@use '../../../common/scss/mixins.scss';
@use '../../../common/scss/form-input.scss';
@use '@kyndryl-design-system/shidoka-foundation/scss/mixins/typography.scss';
@use '@kyndryl-design-system/shidoka-foundation/scss/mixins/visibility.scss';
@use '../../../common/scss/gradients.scss' as gradient;

:host {
  display: inline-block;
}

:host(.pagination-dropdown) .select {
  border: 1px solid transparent;
}

.wrapper {
  position: relative;
}

.label-text {
  &.sr-only {
    @include visibility.sr-only;
  }

  [readonly] & {
    color: var(--kd-color-text-level-disabled);
  }
}

slot[name='icon']::slotted(*) {
  display: block;
  [disabled] & {
    color: var(--kd-color-icon-disabled);
  }
}

.dropdown-listbox {
  background: var(--kd-color-background-menu-state-default);

  &.ai-connected {
    background: var(--kd-color-background-menu-state-ai-default);
  }
}

.select {
  display: flex;
  align-items: center;
  appearance: none;
  border: 1px solid var(--kd-color-border-forms-default);
  border-radius: 0;
  height: 48px;
  min-width: 95px;
  padding: 0 48px 0 16px;
  font-weight: var(--kd-font-weight-regular);
  white-space: nowrap;

  &:not(.is-readonly):not([disabled]) {
    cursor: pointer;
  }

  &.is-readonly:not([disabled]) {
    cursor: default;

    .arrow-icon {
      color: var(--kd-color-icon-disabled);
    }
  }

  [searchable] & {
    padding-right: 80px;
  }

  &:hover:not(:is([disabled], [readonly], .is-readonly, .ai-connected)) {
    border-color: var(--kd-color-border-ui-hover);
  }

  &.is-readonly {
    input {
      cursor: default;
    }
  }

  span {
    overflow: hidden;
    text-overflow: ellipsis;
  }

  &.size--sm {
    height: 32px;
  }
  &.size--lg {
    height: 56px;
  }

  &[invalid] {
    padding-right: 80px;
  }

  &.ai-connected:not([disabled], [readonly], .is-readonly) {
    border: 1px solid transparent;
    background: var(--kd-color-background-menu-state-ai-default);

    .arrow-icon {
      color: var(--kd-color-icon-primary);
    }

    &:hover {
      @include gradient.border-gradient-ai(
        $gradient: gradient.$ai-gradient-default,
        $radius: 0,
        $width: 1px,
        $surface: var(--kd-color-background-menu-state-ai-default)
      );
    }

    &:active {
      background: var(--kd-color-background-menu-state-ai-pressed);
      color: var(--kd-color-text-level-light);

      .placeholder-text {
        color: var(--kd-color-text-level-light);
      }
    }

    &:focus-within,
    &:focus-visible {
      &:hover {
        border-color: transparent !important;
      }
    }
  }
}

.select:focus-within {
  outline: 2px solid var(--kd-color-border-variants-focus);
  outline-offset: 0;
}

:host(.ai-connected) .select:is(:focus-visible, :focus-within),
.dropdown.ai-connected .select:is(:focus-visible, :focus-within) {
  outline: 2px solid var(--kd-color-border-variants-focus);
  outline-offset: 0;
}

.arrow-icon {
  position: absolute;
  top: 50%;
  right: 16px;
  transform: translateY(-45%);
  display: inline-flex;
  align-items: center;
  justify-content: center;

  .open & {
    transform: translateY(-70%) rotate(180deg);
  }
}

.options {
  display: flex;
  flex-direction: column;
  list-style: none;
  margin: 0;
  padding: 0;
  position: absolute;
  top: 100%;
  margin-top: 4px;
  width: 100%;
  min-width: 120px;
  max-height: 280px;
  overflow-y: auto;
  outline: none;
  background: var(--kd-color-background-forms-default);
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.12),
    0px 4px 12px 0px rgba(0, 0, 0, 0.08);
  outline: 2px solid transparent;
  transition: transform 150ms ease-out, opacity 150ms ease-out,
    outline-color 150ms ease-out, visibility 150ms ease-out;
  visibility: hidden;
  transform: scaleY(0);
  transform-origin: top;
  opacity: 0;
  z-index: -1;

  &.upwards {
    transform-origin: bottom;
    top: auto;
    bottom: 100%;
  }

  &.open {
    visibility: visible;
    transform: none;
    opacity: 1;
    z-index: 11;
  }

  [searchable] &:focus-visible {
    outline-color: var(--kd-color-border-variants-focus);
  }
}

.error {
  [inline] & {
    margin-left: 16px;
  }
}
.caption {
  [inline] & {
    margin-left: 16px;
  }
}
.assistive-text {
  @include mixins.visually-hidden;
}
.select-all {
  font-weight: var(--kd-font-weight-medium);
}

.search {
  border: none;
  background: none;
  outline: none;
  display: block;
  width: 100%;
  height: 100%;
  margin-left: -16px;
  padding-left: 16px;

  &::placeholder {
    color: var(--kd-color-text-variant-placeholder);
  }
}

.clear-multiple {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  gap: 2px;
  border: none;
  min-width: 24px;
  height: 24px;
  padding: 8px;
  border-radius: 4px;
  margin-right: 8px;
  cursor: pointer;
  background: var(--kd-color-background-container-soft);
  color: var(--kd-color-text-level-primary);

  span {
    display: flex;
    svg {
      width: 14px;
      height: 14px;
    }
  }

  &[disabled]:not(.readonly) {
    background-color: var(--kd-color-tag-background-disabled);
    color: var(--kd-color-text-level-disabled);
    cursor: not-allowed;
  }

  &.is-readonly {
    background-color: var(--kd-color-tag-background-disabled);
    color: var(--kd-color-tag-text-default);
    cursor: default;
  }

  @include typography.type-ui-03;
}

kyn-tag-group {
  margin-top: 8px;
}
.kd-visibility--sr-only {
  @include visibility.sr-only;
}

.add-option {
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;
  padding: 8px 16px;
  height: 48px;
  background-color: var(--kd-color-background-forms-secondary);
  box-sizing: border-box;
}

.add-option-input {
  flex-grow: 1;
  min-width: 0;
  border: 1px solid var(--kd-color-border-ui-default);
  border-radius: 4px;
  padding: 4px 8px;
  background-color: var(--kd-color-background-forms-default);
  box-sizing: border-box;
}

.add-option kyn-button {
  flex-shrink: 0;
  margin-left: auto;
}

.placeholder-text {
  color: var(--kd-color-text-variant-placeholder);
}

.dropdown.ai-connected .options:focus-visible,
.dropdown.ai-connected [searchable] .options:focus-visible {
  outline-color: var(--kd-color-background-button-secondary-ai-focused);
}
