@use '../../../common/scss/global.scss';

:host {
  display: inline-block;
}

.kyn-prompt {
  display: flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  color: var(--kd-color-text-title-ai-primary);
  padding: 24px;
  min-height: 120px;
  background: transparent;
  position: relative;
  border-radius: 4px;
  width: 200px;

  ::slotted([slot='label']) {
    text-align: center;
    width: 100%;
    font-size: 16px;
  }

  &.size--sm {
    width: 150px;
    min-height: 80px;

    ::slotted([slot='label']) {
      font-size: 14px;
    }
  }

  &.size--lg {
    width: 300px;

    ::slotted([slot='label']) {
      font-size: 18px;
    }
  }

  &.prompt-border {
    border: 1px solid var(--kd-color-border-variants-ai);
  }

  .checkmark-icon {
    position: absolute;
    top: 12px;
    right: 12px;
    width: 20px;
    height: 20px;
    color: inherit;
  }

  &--clickable {
    &:hover {
      cursor: pointer;
      background: var(--kd-color-background-container-ai-default);
      color: var(--kd-color-text-title-ai-primary);
      border-color: var(--kd-color-border-button-ai-state-hover);
    }

    &:active {
      border-color: var(--kd-color-border-button-ai-state-pressed);
    }

    &:focus {
      outline: none;
      background: var(--kd-color-background-container-ai-default);
      border-color: var(--kd-color-border-button-ai-state-focused);
    }

    &.prompt-selected {
      background: var(--kd-color-background-container-ai-default);

      &:hover {
        cursor: pointer;
        color: var(--kd-color-text-title-ai-primary);
      }

      &:focus {
        outline: none;
        border-color: var(--kd-color-border-button-ai-state-focused);
      }
    }
  }

  &.disabled {
    background: var(--kd-color-background-ui-default-disabled);
    color: var(--kd-color-background-link-ai-disabled);
    border-color: var(--kd-color-border-ui-disabled);
    cursor: not-allowed;
  }
}

.kyn-prompt-clickable {
  appearance: none;
  background: none;
  margin: 0;
  padding: 0;
  font: inherit;
}
