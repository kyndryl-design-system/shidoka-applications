{"version":3,"file":"components-reusable-table-table-stories.8effe897.iframe.bundle.js","mappings":";;AAgNA;AACA;AAEA;AACA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;;AAEA;;;;;AAKA;;AAEA;;;;;AAKA;;AAEA;;;;AAIA;;AAEA;;;;AAIA;;AAEA;AACA;;;;AAIA;AACA;;;;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAGA;;AAEA;;;;;;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;ACpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack://@kyndryl-design-system/shidoka-applications/./src/components/reusable/table/story-helpers/table-story.ts","webpack://@kyndryl-design-system/shidoka-applications/"],"sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport '@kyndryl-design-system/shidoka-foundation/components/button';\nimport '@kyndryl-design-system/shidoka-foundation/components/icon';\nimport maleIcon from '@carbon/icons/es/gender--male/16';\nimport femaleIcon from '@carbon/icons/es/gender--female/16';\nimport './action-menu';\nimport '../../pagination';\n\nimport {\n  sortById,\n  sortByAge,\n  sortByDate,\n  sortByFName,\n  sortByLName,\n  extractData,\n} from './ultils';\n\nimport '../index';\nimport { Table } from '../table';\n\n@customElement('story-table')\nclass MyStoryTable extends LitElement {\n  /**\n   * kynTable: Reference to the kyn-table component.\n   * @ignore\n   */\n  @state()\n  private kynTable: Table | null | undefined;\n\n  @property({ type: Array })\n  rows: any = [];\n\n  @property({ type: Array })\n  selectedRows = [];\n\n  @property({ type: Boolean, reflect: true })\n  checkboxSelection = false;\n\n  @property({ type: Boolean, reflect: true })\n  striped = false;\n\n  @property({ type: Boolean, reflect: true })\n  stickyHeader = false;\n\n  @property({ type: Boolean, reflect: true })\n  dense = false;\n\n  @property({ type: Boolean, reflect: true })\n  ellipsis = false;\n\n  @property({ type: Boolean, reflect: true })\n  fixedLayout = false;\n\n  @property({ type: Number, reflect: true })\n  selectedCount = 0;\n\n  @property({ type: Boolean, reflect: true })\n  showTableActions = false;\n\n  @property({ type: Boolean, reflect: true })\n  sortable = false;\n\n  @property({ type: String, reflect: true })\n  tableTitle = 'Table Title';\n\n  @property({ type: Boolean })\n  showPagination = false;\n\n  @property({ type: Number })\n  pageSize = 5;\n\n  @property({ type: Number })\n  pageNumber = 0;\n\n  @property({ type: Array })\n  pageSizeOptions = [5, 10];\n\n  /** Option to hide the items range display. */\n  @property({ type: Boolean })\n  hideItemsRange = false;\n\n  /** Option to hide the page size dropdown. */\n  @property({ type: Boolean })\n  hidePageSizeDropdown = false;\n\n  /** Option to hide the navigation buttons. */\n  @property({ type: Boolean })\n  hideNavigationButtons = false;\n\n  /**\n   * Handles the change of page size in pagination.\n   */\n  async onPageSizeChange(event: CustomEvent) {\n    this.pageSize = Number(event.detail.value);\n    this.pageNumber = 1;\n    await this.updateComplete;\n\n    this.kynTable?.updateAfterExternalChanges()\n  }\n\n  /**\n   * Handles the change of page number in pagination.\n   */\n  async onPageNumberChange(event: CustomEvent) {\n    this.pageNumber = event.detail.value;\n\n    await this.updateComplete;\n    this.kynTable?.updateAfterExternalChanges()\n  }\n\n  handleSortByIdNumber(e: CustomEvent) {\n    const { sortDirection } = e.detail;\n    this.rows.sort(sortById(sortDirection));\n    this.requestUpdate();\n  }\n\n  handleSortByAge(e: CustomEvent) {\n    const { sortDirection } = e.detail;\n    this.rows.sort(sortByAge(sortDirection));\n    this.requestUpdate();\n  }\n\n  handleSortByFName(e: CustomEvent) {\n    const { sortDirection } = e.detail;\n    this.rows.sort(sortByFName(sortDirection));\n    this.requestUpdate();\n  }\n\n  handleSortByLName(e: CustomEvent) {\n    const { sortDirection } = e.detail;\n    this.rows.sort(sortByLName(sortDirection));\n    this.requestUpdate();\n  }\n\n  handleSortByDate(e: CustomEvent) {\n    const { sortDirection } = e.detail;\n    this.rows.sort(sortByDate(sortDirection));\n    this.requestUpdate();\n  }\n\n  async deleteAction(id: number) {\n    const filteredRows = this.rows.filter((data: any) => data.id !== id);\n    const filterSelectredRows = this.selectedRows.filter(\n      (data: any) => data.rowId !== id\n    );\n    this.selectedRows = filterSelectredRows;\n    this.rows = filteredRows;\n    await this.updateComplete;\n\n    // have to wait for the update to finish before calling this\n    this.kynTable?.updateAfterExternalChanges();\n  }\n\n  async deleteSelectedRows() {\n    const selectedRowIdsSet = new Set(\n      this.selectedRows.map((row: any) => row.rowId)\n    );\n    this.rows = this.rows.filter((row: any) => !selectedRowIdsSet.has(row.id));\n\n    this.selectedRows = [];\n    await this.updateComplete;\n\n    // have to wait for the update to finish before calling this\n    this.kynTable?.updateAfterExternalChanges();\n  }\n\n  handleSelectedRowsChange(e: CustomEvent) {\n    const { selectedRows } = e.detail;\n    this.selectedRows = selectedRows;\n    this.requestUpdate();\n  }\n\n  override firstUpdated() {\n    this.kynTable = this.shadowRoot?.querySelector('kyn-table');\n  }\n\n  override render() {\n    const {\n      rows,\n      selectedRows,\n      showTableActions,\n      dense,\n      striped,\n      ellipsis,\n      fixedLayout,\n      stickyHeader,\n      checkboxSelection,\n      pageSize,\n      pageNumber,\n      pageSizeOptions,\n    } = this;\n\n    const currentRows = this.showPagination\n      ? extractData(rows, pageNumber, pageSize)\n      : rows;\n\n    const fNameMaxWidth = this.ellipsis ? '100px' : 'auto';\n    const tableTitle =\n      selectedRows.length > 0\n        ? selectedRows.length === 1\n          ? '1 item selected'\n          : `${selectedRows.length} items selected`\n        : this.tableTitle;\n\n    return html` <div style=${stickyHeader ? 'height: 400px' : ''}>\n      <kyn-table-toolbar tableTitle=${tableTitle}>\n        ${showTableActions\n          ? html`<action-menu\n              @on-delete=${this.deleteSelectedRows}\n            ></action-menu>`\n          : html``}\n      </kyn-table-toolbar>\n      <kyn-table-container>\n        <kyn-table\n          ?striped=${striped}\n          ?dense=${dense}\n          ?ellipsis=${ellipsis}\n          ?fixedLayout=${fixedLayout}\n          ?stickyHeader=${stickyHeader}\n          ?checkboxSelection=${checkboxSelection}\n          @on-row-selection-change=${this.handleSelectedRowsChange}\n          @on-all-rows-selection-change=${this.handleSelectedRowsChange}\n        >\n          <kyn-thead>\n            <kyn-header-tr>\n              <kyn-th\n                .align=${'center'}\n                .sortable=${this.sortable}\n                sortKey=\"id\"\n                @on-sort-changed=${this.handleSortByIdNumber}\n              >\n                ID\n              </kyn-th>\n              <kyn-th\n                .sortable=${this.sortable}\n                sortKey=\"firstName\"\n                @on-sort-changed=${this.handleSortByFName}\n              >\n                First Name\n              </kyn-th>\n              <kyn-th\n                .sortable=${this.sortable}\n                sortKey=\"lastNme\"\n                @on-sort-changed=${this.handleSortByLName}\n                >Last Name</kyn-th\n              >\n              <kyn-th\n                .sortable=${this.sortable}\n                sortKey=\"birtday\"\n                @on-sort-changed=${this.handleSortByDate}\n                >Birthday</kyn-th\n              >\n              <kyn-th\n                .sortable=${this.sortable}\n                sortKey=\"age\"\n                @on-sort-changed=${this.handleSortByAge}\n                .align=${'right'}\n                >Age</kyn-th\n              >\n              <kyn-th>Full Name</kyn-th>\n              <kyn-th .align=${'center'}>Gender</kyn-th>\n              ${showTableActions ? html`<kyn-th>Action</kyn-th>` : html``}\n            </kyn-header-tr>\n          </kyn-thead>\n          <kyn-tbody>\n            ${repeat(\n              currentRows,\n              (row: any) => row.id,\n              (row: any) => html`\n                <kyn-tr .rowId=${row.id} key=\"row-${row.id}\">\n                  <kyn-td .align=${'center'}>${row.id}</kyn-td>\n                  <kyn-td .maxWidth=${fNameMaxWidth}>${row.firstName}</kyn-td>\n                  <kyn-td>${row.lastName}</kyn-td>\n                  <kyn-td>${row.birthday}</kyn-td>\n                  <kyn-td .align=${'right'}>${row.age}</kyn-td>\n                  <kyn-td>${row.firstName} ${row.lastName}</kyn-td>\n                  <kyn-td .align=${'center'}>\n                    ${row.gender === 'male'\n                      ? html`<kd-icon .icon=${maleIcon}></kd-icon>`\n                      : html`<kd-icon .icon=${femaleIcon}></kd-icon>`}\n                  </kyn-td>\n                  ${showTableActions\n                    ? html` <kyn-td>\n                        <action-menu\n                          @on-delete=${() => this.deleteAction(row.id)}\n                        ></action-menu>\n                      </kyn-td>`\n                    : html``}\n                </kyn-tr>\n              `\n            )}\n          </kyn-tbody>\n        </kyn-table>\n      </kyn-table-container>\n      ${this.showPagination\n        ? html` <kyn-pagination\n            .count=${rows.length}\n            .pageSize=${pageSize}\n            .pageNumber=${pageNumber}\n            .pageSizeOptions=${pageSizeOptions}\n            .hideItemsRange=${this.hideItemsRange}\n            .hidePageSizeDropdown=${this.hidePageSizeDropdown}\n            .hideNavigationButtons=${this.hideNavigationButtons}\n            @on-page-size-change=${this.onPageSizeChange}\n            @on-page-number-change=${this.onPageNumberChange}\n          ></kyn-pagination>`\n        : null}\n    </div>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-story-table': MyStoryTable;\n  }\n}\n"],"names":[],"sourceRoot":""}